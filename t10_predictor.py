import numpy as np
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from lineartree import LinearTreeRegressor
import pickle

class pool:
    init = 0
    poly = 0
    reg = 0

    def get_poly_reg(self):
        if self.init:
            return self.poly, self.reg
        
        self.init = 1

        px = [
            [4,  8*8,9]
        ,   [4, 12*12,9]
        ,   [8,  8*8,9]
        ,   [4, 16*16,9]
        ,   [8, 12*12,9]
        ,   [16 ,8*8,9]
        ,   [8, 13*13,9]
        ,   [8, 14*14,9]
        ,   [8, 16*16,9]
        ,   [8, 15*15,9]
        ,   [4, 20*20,9]
        ,   [16,12*12,9]
        ,   [32, 8*8,9]
        ,   [8, 17*17,9]
        ,   [8, 18*18,9]
        ,   [4, 24*24,9]
        ,   [8, 19*19,9]
        ,   [4, 16*16,25]
        ,   [16,16*16,9]
        ,   [4, 28*28,9]
        ,   [8, 20*20,9]
        ,   [32,12*12,9]
        ,   [8, 24*24,9]
        ,   [4, 32*32,9]
        ,   [8, 28*28,9]
        ,   [16,20*20,9]
        ,   [32,16*16,9]
        ,   [8, 32*32,9]
        ,   [16,24*24,9]
        ,   [8, 36*36,9]
        ,   [4, 32*32,25]
        ,   [16,28*28,9]
        ,   [32,20*20,9]
        ,   [8, 40*40,9]
        ,   [8, 44*44,9]
        ,   [32,24*24,9]
        ,   [4, 64*64,9]
        ,   [4, 32*32,49]
        ,   [8, 48*48,9]
        ,   [8, 52*52,9]
        ,   [32,28*28,9]
        ,   [8, 56*56,9]
        ,   [8, 57*57,9]
        ,   [8, 64*64,9]
        ,   [4, 96*96,9]
        ,   [4, 64*64,25]
        ,   [4,128*128,9]
        ,   [4, 64*64,49]
        ,   [4, 96*96,25]
        ,   [4,160*160,9]
        ,   [4,128*128,25]
        ,   [4, 96*96,49]
        ,   [4,160*160,25]
        ,   [4,128*128,49]
        ,   [4,160*160,49]
        ]
        
        py = [
         4185
        ,5534
        ,5793
        ,7718
        ,8486
        ,9012
        ,9489
        ,12735
        ,12854
        ,13748
        ,14301
        ,14386
        ,15441
        ,16759
        ,18114
        ,18336
        ,19791
        ,21772
        ,23126
        ,23210
        ,23709
        ,26194
        ,31775
        ,32481
        ,41522
        ,42528
        ,43670
        ,57753
        ,58655
        ,71195
        ,74704
        ,78146
        ,80157
        ,86318
        ,107925
        ,112415
        ,118070
        ,121130
        ,126743
        ,147242
        ,151394
        ,174225
        ,179941
        ,224294
        ,264504
        ,306461
        ,468225
        ,553692
        ,684560
        ,728546
        ,1227760
        ,1289063
        ,1926463
        ,2309450
        ,3651326
        ]
        self.poly = PolynomialFeatures(interaction_only=False, degree=3)
        pp = self.poly.fit_transform(np.array(px))
        self.reg = LinearRegression().set_params(positive=True, fit_intercept=False).fit(pp,py)
        return self.poly, self.reg

class conv:
    init = 0
    poly = 0
    reg = 0

    def get_poly_reg(self):
        if self.init:
            return self.poly, self.reg
        
        self.init = 1
        px = [
            [1, 1, 4, 64, 9],
            [1, 1, 8, 64, 9],
            [2, 1, 4, 64, 49],
            [1, 1, 4, 64, 25],
            [3, 1, 4, 64, 9],
            [1, 1, 4, 64, 49],
            [1, 1, 4, 144, 9],
            [1, 1, 16, 256, 9],
            [1, 1, 4, 256, 9],
            [4, 1, 4, 64, 9],
            [1, 4, 4, 64, 9],
            [2, 1, 4, 144, 49],
            [1, 1, 4, 400, 9],
            [1, 1, 8, 144, 9],
            [1, 2, 2, 64, 49],
            [3, 1, 4, 144, 9],
            [1, 4, 8, 64, 9],
            [1, 2, 2, 64, 25],
            [1, 4, 4, 64, 49],
            [2, 1, 16, 256, 9],
            [1, 1, 32, 256, 9],
            [1, 1, 4, 576, 9],
            [2, 4, 4, 64, 49],
            [2, 1, 4, 256, 49],
            [1, 1, 4, 144, 49],
            [1, 1, 8, 256, 9],
            [1, 1, 4, 784, 9],
            [4, 1, 4, 144, 9],
            [2, 1, 4, 400, 49],
            [1, 1, 4, 144, 25],
            [3, 1, 4, 256, 9],
            [3, 4, 4, 64, 9],
            [1, 1, 4, 1024, 9],
            [1, 8, 8, 64, 9],
            [1, 4, 4, 144, 9],
            [1, 1, 8, 400, 9],
            [2, 1, 32, 256, 9],
            [1, 4, 8, 144, 9],
            [1, 4, 4, 256, 9],
            [2, 1, 4, 576, 49],
            [4, 1, 4, 256, 9],
            [1, 2, 8, 256, 9],
            [1, 1, 4, 1296, 9],
            [3, 1, 4, 400, 9],
            [1, 1, 4, 256, 25],
            [2, 1, 8, 256, 9],
            [1, 4, 4, 400, 9],
            [2, 4, 4, 144, 49],
            [1, 1, 4, 1600, 9],
            [1, 1, 4, 256, 49],
            [2, 1, 4, 784, 49],
            [1, 1, 8, 576, 9],
            [1, 1, 4, 1936, 9],
            [4, 1, 4, 400, 9],
            [1, 4, 8, 256, 9],
            [3, 1, 4, 576, 9],
            [3, 4, 4, 144, 9],
            [1, 2, 2, 144, 25],
            [2, 1, 4, 1024, 49],
            [2, 2, 8, 256, 9],
            [1, 1, 4, 2304, 9],
            [1, 4, 4, 144, 49],
            [1, 4, 4, 576, 9],
            [1, 1, 4, 400, 25],
            [1, 8, 8, 144, 9],
            [1, 1, 8, 784, 9],
            [2, 1, 20, 256, 9],
            [1, 1, 4, 400, 49],
            [2, 4, 4, 256, 49],
            [3, 1, 4, 784, 9],
            [1, 1, 4, 2704, 9],
            [1, 4, 4, 64, 25],
            [2, 1, 4, 1296, 49],
            [4, 1, 4, 576, 9],
            [1, 2, 2, 256, 49],
            [1, 4, 8, 400, 9],
            [1, 2, 16, 256, 9],
            [1, 2, 2, 144, 49],
            [1, 4, 4, 784, 9],
            [2, 1, 24, 256, 9],
            [1, 1, 4, 3136, 9],
            [1, 4, 4, 144, 25],
            [2, 4, 4, 400, 49],
            [3, 4, 4, 256, 9],
            [1, 1, 8, 1024, 9],
            [3, 1, 4, 1024, 9],
            [1, 4, 4, 256, 25],
            [2, 1, 4, 1600, 49],
            [1, 4, 4, 1024, 9],
            [1, 1, 4, 3600, 9],
            [1, 1, 4, 576, 49],
            [4, 1, 4, 784, 9],
            [1, 8, 8, 256, 9],
            [1, 2, 2, 256, 25],
            [2, 4, 8, 256, 9],
            [1, 4, 8, 576, 9],
            [2, 1, 4, 1936, 49],
            [1, 4, 16, 256, 9],
            [3, 1, 4, 1296, 9],
            [1, 1, 8, 1296, 9],
            [1, 2, 24, 256, 9],
            [2, 4, 4, 576, 49],
            [4, 1, 4, 1024, 9],
            [1, 4, 4, 1296, 9],
            [3, 4, 4, 400, 9],
            [2, 1, 4, 2304, 49],
            [2, 2, 16, 256, 9],
            [3, 1, 4, 1600, 9],
            [1, 8, 8, 400, 9],
            [1, 1, 8, 1600, 9],
            [1, 16, 8, 256, 9],
            [1, 4, 4, 1600, 9],
            [1, 1, 4, 784, 49],
            [2, 1, 4, 2704, 49],
            [1, 4, 8, 784, 9],
            [4, 1, 4, 1296, 9],
            [1, 2, 32, 256, 9],
            [2, 4, 4, 784, 49],
            [1, 4, 4, 400, 25],
            [3, 1, 4, 1936, 9],
            [1, 4, 24, 256, 9],
            [1, 4, 4, 1936, 9],
            [2, 1, 4, 3136, 49],
            [1, 1, 8, 1936, 9],
            [1, 2, 2, 400, 25],
            [3, 4, 4, 576, 9],
            [1, 4, 4, 256, 49],
            [2, 6, 8, 256, 9],
            [1, 4, 4, 400, 49],
            [2, 4, 4, 1024, 49],
            [1, 1, 4, 1024, 49],
            [1, 4, 8, 1024, 9],
            [3, 1, 4, 2304, 9],
            [2, 1, 4, 3600, 49],
            [1, 1, 4, 576, 25],
            [2, 2, 24, 256, 9],
            [1, 8, 16, 256, 9],
            [1, 2, 2, 400, 49],
            [1, 2, 2, 576, 25],
            [1, 4, 4, 2304, 9],
            [1, 1, 8, 2304, 9],
            [2, 4, 16, 256, 9],
            [1, 8, 8, 576, 9],
            [1, 4, 4, 576, 49],
            [1, 4, 32, 256, 9],
            [3, 1, 4, 2704, 9],
            [3, 4, 4, 784, 9],
            [1, 4, 4, 2704, 9],
            [1, 2, 2, 576, 49],
            [1, 1, 4, 784, 25],
            [2, 4, 4, 1296, 49],
            [1, 1, 8, 2704, 9],
            [1, 20, 8, 256, 9],
            [1, 2, 2, 784, 25],
            [1, 4, 8, 1296, 9],
            [3, 1, 4, 3136, 9],
            [1, 4, 4, 3136, 9],
            [2, 2, 32, 256, 9],
            [1, 8, 8, 784, 9],
            [1, 1, 8, 3136, 9],
            [1, 32, 8, 256, 9],
            [3, 4, 4, 1024, 9],
            [1, 24, 8, 256, 9],
            [1, 16, 16, 256, 9],
            [2, 4, 4, 1600, 49],
            [1, 4, 8, 1600, 9],
            [1, 4, 4, 3600, 9],
            [1, 8, 24, 256, 9],
            [2, 4, 24, 256, 9],
            [1, 1, 8, 3600, 9],
            [1, 1, 4, 1024, 25],
            [1, 4, 4, 784, 49],
            [2, 4, 4, 1936, 49],
            [1, 2, 2, 1024, 25],
            [1, 28, 8, 256, 9],
            [1, 8, 8, 1024, 9],
            [1, 2, 2, 784, 49],
            [3, 4, 4, 1296, 9],
            [1, 4, 8, 1936, 9],
            [2, 6, 16, 256, 9],
            [1, 1, 4, 1296, 25],
            [1, 2, 2, 1296, 25],
            [1, 4, 4, 1024, 49],
            [2, 4, 4, 2304, 49],
            [1, 8, 32, 256, 9],
            [1, 2, 2, 1024, 49],
            [2, 4, 32, 256, 9],
            [3, 4, 4, 1600, 9],
            [1, 4, 8, 2304, 9],
            [1, 36, 8, 256, 9],
            [1, 16, 24, 256, 9],
            [1, 8, 8, 1296, 9],
            [1, 1, 4, 1600, 25],
            [1, 2, 2, 1600, 25],
            [2, 20, 8, 256, 9],
            [2, 4, 4, 2704, 49],
            [1, 1, 4, 1296, 49],
            [1, 40, 8, 256, 9],
            [1, 2, 2, 1296, 49],
            [1, 20, 16, 256, 9],
            [1, 4, 8, 2704, 9],
            [3, 4, 4, 1936, 9],
            [2, 4, 4, 3136, 49],
            [2, 32, 8, 256, 9],
            [1, 8, 8, 1600, 9],
            [2, 24, 8, 256, 9],
            [1, 1, 4, 1936, 25],
            [1, 32, 16, 256, 9],
            [1, 2, 2, 1936, 25],
            [1, 24, 16, 256, 9],
            [1, 4, 8, 3136, 9],
            [1, 16, 32, 256, 9],
            [3, 4, 4, 2304, 9],
            [2, 4, 4, 3600, 49],
            [1, 1, 4, 1600, 49],
            [1, 2, 2, 1600, 49],
            [2, 28, 8, 256, 9],
            [1, 1, 4, 2304, 25],
            [1, 8, 8, 1936, 9],
            [1, 2, 2, 2304, 25],
            [1, 4, 8, 3600, 9],
            [1, 28, 16, 256, 9],
            [3, 4, 4, 2704, 9],
            [1, 1, 4, 1936, 49],
            [1, 2, 2, 1936, 49],
            [1, 1, 4, 2704, 25],
            [1, 2, 2, 2704, 25],
            [1, 20, 24, 256, 9],
            [1, 8, 8, 2304, 9],
            [3, 4, 4, 3136, 9],
            [2, 48, 8, 256, 9],
            [1, 1, 4, 2304, 49],
            [2, 36, 8, 256, 9],
            [1, 2, 2, 2304, 49],
            [1, 32, 24, 256, 9],
            [1, 1, 4, 3136, 25],
            [1, 2, 2, 3136, 25],
            [1, 36, 16, 256, 9],
            [1, 24, 24, 256, 9],
            [2, 40, 8, 256, 9],
            [1, 8, 8, 2704, 9],
            [2, 20, 16, 256, 9],
            [1, 40, 16, 256, 9],
            [1, 1, 4, 3600, 25],
            [1, 2, 2, 3600, 25],
            [1, 20, 32, 256, 9],
            [1, 1, 4, 2704, 49],
            [1, 2, 2, 2704, 49],
            [1, 8, 8, 3136, 9],
            [2, 32, 16, 256, 9],
            [2, 24, 16, 256, 9],
            [1, 1, 4, 3136, 49],
            [1, 2, 2, 3136, 49],
            [1, 28, 28, 256, 9],
            [1, 32, 32, 256, 9],
            [1, 24, 32, 256, 9],
            [1, 8, 8, 3600, 9],
            [1, 1, 4, 3600, 49],
            [1, 2, 2, 3600, 49],
            [2, 28, 16, 256, 9],
            [1, 36, 24, 256, 9],
            [1, 28, 32, 256, 9],
            [2, 20, 24, 256, 9],
            [1, 40, 24, 256, 9],
            [2, 48, 16, 256, 9],
            [2, 32, 24, 256, 9],
            [2, 36, 16, 256, 9],
            [2, 24, 24, 256, 9],
            [1, 36, 32, 256, 9],
            [2, 40, 16, 256, 9],
            [2, 20, 32, 256, 9],
            [2, 28, 24, 256, 9],
            [1, 40, 32, 256, 9],
            [2, 28, 28, 256, 9],
            [2, 24, 32, 256, 9],
            [2, 48, 24, 256, 9],
            [2, 36, 24, 256, 9],
            [2, 28, 32, 256, 9],
            [2, 40, 24, 256, 9],
            [2, 48, 32, 256, 9],
            [2, 36, 32, 256, 9],
            [2, 40, 32, 256, 9],
            [1, 2, 4, 64, 1],
            [1, 4, 4, 256, 1],
            [1, 4, 4, 1024, 1],
            [1, 4, 4, 2304, 1],
            [1, 4, 4, 4096, 1],
            [1, 1, 16, 64, 1],
            [1, 1, 16, 256, 3],
            [1, 1, 16, 1024, 1],
            [1, 1, 16, 2304, 1],
            [1, 1, 16, 4096, 1],
            [1, 2, 16, 256, 1],
            [1, 2, 16, 1024, 1],
            [1, 2, 16, 2304, 1],
            [1, 2, 16, 4096, 1],
            [1, 2, 16, 64, 1],
            [1, 4, 16, 1024, 1],
            [1, 2, 16, 2304, 3],
            [1, 2, 16, 4096, 3],
        ]
            
        py = [
             513     
            ,571     
            ,783     
            ,999     
            ,1053    
            ,1075    
            ,1113    
            ,1137    
            ,1255    
            ,1323    
            ,1403    
            ,1477    
            ,1485    
            ,1701    
            ,1807    
            ,1833    
            ,1851    
            ,1864    
            ,1894    
            ,1926    
            ,2094    
            ,2203    
            ,2213    
            ,2246    
            ,2299    
            ,2499    
            ,2589    
            ,2702    
            ,2727    
            ,2744    
            ,2805    
            ,3023    
            ,3033    
            ,3149    
            ,3393    
            ,3527    
            ,3672    
            ,3693    
            ,3728    
            ,3770    
            ,3818    
            ,3869    
            ,3943    
            ,3969    
            ,4000    
            ,4061    
            ,4319    
            ,4395    
            ,4520    
            ,4620    
            ,4921    
            ,5061    
            ,5157    
            ,5211    
            ,5263    
            ,5325    
            ,5363    
            ,5391    
            ,5823    
            ,6220    
            ,6261    
            ,6398    
            ,6476    
            ,6570    
            ,6576    
            ,6627    
            ,6630    
            ,6635    
            ,6698    
            ,6873    
            ,7029    
            ,7159    
            ,7251    
            ,7285    
            ,7308    
            ,7323    
            ,7381    
            ,7432    
            ,7630    
            ,7832    
            ,7857    
            ,7880    
            ,8045    
            ,8279    
            ,8432    
            ,8613    
            ,8658    
            ,8785    
            ,8963    
            ,9152    
            ,9211    
            ,9218    
            ,9333    
            ,9468    
            ,9606    
            ,10070   
            ,10071   
            ,10186   
            ,10545   
            ,10725   
            ,11095   
            ,11173   
            ,11403   
            ,11697   
            ,11771   
            ,11881   
            ,12099   
            ,12669   
            ,12941   
            ,13059   
            ,13135   
            ,13424   
            ,13452   
            ,13802   
            ,13807   
            ,14246   
            ,14505   
            ,14630   
            ,14889   
            ,14985   
            ,15280   
            ,15335   
            ,15471   
            ,15623   
            ,15698   
            ,15839   
            ,15931   
            ,17249   
            ,17323   
            ,17333   
            ,17387   
            ,17403   
            ,17493   
            ,17665   
            ,17769   
            ,18148   
            ,18300   
            ,18459   
            ,18578   
            ,18644   
            ,18693   
            ,18921   
            ,19058   
            ,19906   
            ,20117   
            ,20193   
            ,20483   
            ,20950   
            ,21040   
            ,21258   
            ,21615   
            ,21795   
            ,22007   
            ,22068   
            ,22317   
            ,23085   
            ,23435   
            ,23945   
            ,24501   
            ,25127   
            ,25206   
            ,25703   
            ,25839   
            ,25897   
            ,26222   
            ,26959   
            ,27320   
            ,27484   
            ,28327   
            ,28965   
            ,29409   
            ,29972   
            ,30077   
            ,30217   
            ,30379   
            ,30797   
            ,31107   
            ,31499   
            ,32091   
            ,34188   
            ,34209   
            ,35020   
            ,35350   
            ,35510   
            ,36337   
            ,36484   
            ,37585   
            ,37871   
            ,38541   
            ,38751   
            ,38925   
            ,39600   
            ,39618   
            ,40428   
            ,40566   
            ,41269   
            ,41578   
            ,42345   
            ,42712   
            ,43485   
            ,44719   
            ,44819   
            ,46277   
            ,47382   
            ,47733   
            ,47993   
            ,49687   
            ,49944   
            ,50499   
            ,51168   
            ,51387   
            ,51552   
            ,52343   
            ,52862   
            ,54332   
            ,55467   
            ,56051   
            ,56408   
            ,56717   
            ,57219   
            ,59373   
            ,60135   
            ,60443   
            ,62396   
            ,63530   
            ,63738   
            ,64548   
            ,65424   
            ,68208   
            ,69119   
            ,70145   
            ,71314   
            ,71527   
            ,72448   
            ,75112   
            ,75727   
            ,76539   
            ,76785   
            ,76961   
            ,78732   
            ,79029   
            ,80841   
            ,84049   
            ,84368   
            ,85179   
            ,86670   
            ,86757   
            ,87890   
            ,90701   
            ,94472   
            ,95677   
            ,97509   
            ,98643   
            ,99638   
            ,99639   
            ,102070  
            ,104880  
            ,109114  
            ,110248  
            ,111801  
            ,115568  
            ,119940  
            ,121210  
            ,126435  
            ,139996  
            ,141664  
            ,142759  
            ,143466  
            ,153222  
            ,157164  
            ,161427  
            ,167652  
            ,167794  
            ,188701  
            ,191096  
            ,209951  
            ,214089  
            ,223347  
            ,235695  
            ,279745  
            ,285268  
            ,314070  
            ,573     
            ,957     
            ,2493    
            ,5049    
            ,8637    
            ,609     
            ,1256    
            ,4449    
            ,9573    
            ,16737   
            ,1377    
            ,4449    
            ,9573    
            ,16737   
            ,609     
            ,4449    
            ,9189    
            ,16232
        ]

        degree = 4
        self.poly = PolynomialFeatures(interaction_only=False, degree=degree)
        pp = self.poly.fit_transform(np.array(px))

        try:
            self.reg = pickle.load(open(f'reg_{len(py)}_{degree}.pkl', 'rb'))
        except(FileNotFoundError):
            print("Generating new reg...")
            self.reg = LinearTreeRegressor(
                base_estimator=LinearRegression().set_params(positive=True, fit_intercept=False))
            self.reg.fit(pp, py)
            pickle.dump(self.reg, open(f'reg_{len(py)}_{degree}.pkl', 'wb'))

        return self.poly, self.reg