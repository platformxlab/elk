[
  [
    5332,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1398,
        0
      ]
    ]
  ],
  [
    5304,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1396,
        0
      ]
    ]
  ],
  [
    1407,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1397,
        0
      ]
    ]
  ],
  [
    6099,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1407,
        0
      ],
      [
        5304,
        0
      ],
      [
        5332,
        0
      ]
    ]
  ],
  [
    5244,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1403,
        0
      ]
    ]
  ],
  [
    1564,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[G3, N2] g input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [32000, 8192]} ,  \"input1\" : { \"dtype\" : \"int32\", \"shape\" : [99, 66]} })  ",
    "GatherV2",
    [
      [
        1044,
        0
      ],
      [
        1043,
        0
      ]
    ]
  ],
  [
    1562,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1048,
        0
      ]
    ]
  ],
  [
    1622,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1047,
        0
      ]
    ]
  ],
  [
    1594,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1045,
        0
      ]
    ]
  ],
  [
    1563,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1046,
        0
      ]
    ]
  ],
  [
    5748,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1563,
        0
      ],
      [
        1594,
        0
      ],
      [
        1622,
        0
      ]
    ]
  ],
  [
    1578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1052,
        0
      ]
    ]
  ],
  [
    1572,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5470,
        0
      ]
    ]
  ],
  [
    1568,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1567,
        0
      ]
    ]
  ],
  [
    1565,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1564,
        0
      ],
      [
        1564,
        0
      ]
    ]
  ],
  [
    1566,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1565,
        0
      ]
    ]
  ],
  [
    1569,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1566,
        0
      ],
      [
        1568,
        0
      ]
    ]
  ],
  [
    1570,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1569,
        0
      ]
    ]
  ],
  [
    1573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1570,
        0
      ],
      [
        1572,
        0
      ]
    ]
  ],
  [
    1574,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1573,
        0
      ]
    ]
  ],
  [
    1575,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1574,
        0
      ]
    ]
  ],
  [
    1576,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1575,
        0
      ]
    ]
  ],
  [
    1577,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1564,
        0
      ],
      [
        1576,
        0
      ]
    ]
  ],
  [
    1579,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1578,
        0
      ],
      [
        1577,
        0
      ]
    ]
  ],
  [
    5749,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1579,
        0
      ],
      [
        5748,
        0
      ]
    ]
  ],
  [
    5752,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5749,
        0
      ]
    ]
  ],
  [
    1624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5752,
        0
      ]
    ]
  ],
  [
    1625,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1624,
        0
      ]
    ]
  ],
  [
    1619,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5475,
        0
      ]
    ]
  ],
  [
    1616,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        33,
        0
      ]
    ]
  ],
  [
    1590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5472,
        0
      ]
    ]
  ],
  [
    5750,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5749,
        0
      ]
    ]
  ],
  [
    1581,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5750,
        0
      ]
    ]
  ],
  [
    1591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1581,
        0
      ],
      [
        1590,
        0
      ]
    ]
  ],
  [
    1587,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5471,
        0
      ]
    ]
  ],
  [
    1584,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1581,
        0
      ]
    ]
  ],
  [
    1582,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1581,
        0
      ]
    ]
  ],
  [
    1583,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1582,
        0
      ]
    ]
  ],
  [
    1585,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1583,
        0
      ],
      [
        1584,
        0
      ]
    ]
  ],
  [
    1588,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1585,
        0
      ],
      [
        1587,
        0
      ]
    ]
  ],
  [
    1592,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1591,
        0
      ],
      [
        1588,
        0
      ]
    ]
  ],
  [
    1593,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1592,
        0
      ]
    ]
  ],
  [
    1598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5473,
        0
      ]
    ]
  ],
  [
    5751,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5749,
        0
      ]
    ]
  ],
  [
    1596,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5751,
        0
      ]
    ]
  ],
  [
    1599,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1596,
        0
      ],
      [
        1598,
        0
      ]
    ]
  ],
  [
    1600,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1599,
        0
      ]
    ]
  ],
  [
    1607,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5474,
        0
      ]
    ]
  ],
  [
    1601,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1596,
        0
      ]
    ]
  ],
  [
    1604,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1601,
        0
      ]
    ]
  ],
  [
    1602,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1601,
        0
      ]
    ]
  ],
  [
    1603,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1602,
        0
      ]
    ]
  ],
  [
    1605,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1603,
        0
      ],
      [
        1604,
        0
      ]
    ]
  ],
  [
    1608,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1605,
        0
      ],
      [
        1607,
        0
      ]
    ]
  ],
  [
    1609,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1600,
        0
      ],
      [
        1608,
        0
      ]
    ]
  ],
  [
    1614,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1609,
        0
      ],
      [
        1593,
        0
      ]
    ]
  ],
  [
    1617,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1614,
        0
      ],
      [
        1616,
        0
      ]
    ]
  ],
  [
    1620,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1617,
        0
      ],
      [
        1619,
        0
      ]
    ]
  ],
  [
    6108,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1620,
        0
      ]
    ]
  ],
  [
    6109,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1620,
        0
      ],
      [
        6108,
        0
      ]
    ]
  ],
  [
    6110,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6109,
        0
      ]
    ]
  ],
  [
    6111,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6109,
        0
      ],
      [
        6110,
        0
      ]
    ]
  ],
  [
    1630,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6111,
        0
      ],
      [
        1625,
        0
      ]
    ]
  ],
  [
    1632,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1630,
        0
      ]
    ]
  ],
  [
    1633,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1632,
        0
      ]
    ]
  ],
  [
    1634,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1633,
        0
      ],
      [
        1562,
        0
      ]
    ]
  ],
  [
    1635,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1564,
        0
      ],
      [
        1634,
        0
      ]
    ]
  ],
  [
    1560,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1051,
        0
      ]
    ]
  ],
  [
    1561,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1050,
        0
      ]
    ]
  ],
  [
    1652,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1049,
        0
      ]
    ]
  ],
  [
    5753,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1652,
        0
      ],
      [
        1561,
        0
      ]
    ]
  ],
  [
    1649,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1053,
        0
      ]
    ]
  ],
  [
    1643,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5469,
        0
      ]
    ]
  ],
  [
    1639,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1638,
        0
      ]
    ]
  ],
  [
    1636,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1635,
        0
      ],
      [
        1635,
        0
      ]
    ]
  ],
  [
    1637,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1636,
        0
      ]
    ]
  ],
  [
    1640,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1637,
        0
      ],
      [
        1639,
        0
      ]
    ]
  ],
  [
    1641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1640,
        0
      ]
    ]
  ],
  [
    1644,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1641,
        0
      ],
      [
        1643,
        0
      ]
    ]
  ],
  [
    1645,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1644,
        0
      ]
    ]
  ],
  [
    1646,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1645,
        0
      ]
    ]
  ],
  [
    1647,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1646,
        0
      ]
    ]
  ],
  [
    1648,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1635,
        0
      ],
      [
        1647,
        0
      ]
    ]
  ],
  [
    1650,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1649,
        0
      ],
      [
        1648,
        0
      ]
    ]
  ],
  [
    5754,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1650,
        0
      ],
      [
        5753,
        0
      ]
    ]
  ],
  [
    5756,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5754,
        0
      ]
    ]
  ],
  [
    5755,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5754,
        0
      ]
    ]
  ],
  [
    1654,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5755,
        0
      ]
    ]
  ],
  [
    1655,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5755,
        0
      ],
      [
        1654,
        0
      ]
    ]
  ],
  [
    1656,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1655,
        0
      ],
      [
        5756,
        0
      ]
    ]
  ],
  [
    1657,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1656,
        0
      ],
      [
        1560,
        0
      ]
    ]
  ],
  [
    1658,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1635,
        0
      ],
      [
        1657,
        0
      ]
    ]
  ],
  [
    1558,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1057,
        0
      ]
    ]
  ],
  [
    1716,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1056,
        0
      ]
    ]
  ],
  [
    1688,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1054,
        0
      ]
    ]
  ],
  [
    1559,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1055,
        0
      ]
    ]
  ],
  [
    5757,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1559,
        0
      ],
      [
        1688,
        0
      ],
      [
        1716,
        0
      ]
    ]
  ],
  [
    1672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1061,
        0
      ]
    ]
  ],
  [
    1666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5476,
        0
      ]
    ]
  ],
  [
    1662,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1661,
        0
      ]
    ]
  ],
  [
    1659,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1658,
        0
      ],
      [
        1658,
        0
      ]
    ]
  ],
  [
    1660,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1659,
        0
      ]
    ]
  ],
  [
    1663,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1660,
        0
      ],
      [
        1662,
        0
      ]
    ]
  ],
  [
    1664,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1663,
        0
      ]
    ]
  ],
  [
    1667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1664,
        0
      ],
      [
        1666,
        0
      ]
    ]
  ],
  [
    1668,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1667,
        0
      ]
    ]
  ],
  [
    1669,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1668,
        0
      ]
    ]
  ],
  [
    1670,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1669,
        0
      ]
    ]
  ],
  [
    1671,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1658,
        0
      ],
      [
        1670,
        0
      ]
    ]
  ],
  [
    1673,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1672,
        0
      ],
      [
        1671,
        0
      ]
    ]
  ],
  [
    5758,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1673,
        0
      ],
      [
        5757,
        0
      ]
    ]
  ],
  [
    5761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5758,
        0
      ]
    ]
  ],
  [
    1718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5761,
        0
      ]
    ]
  ],
  [
    1719,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1718,
        0
      ]
    ]
  ],
  [
    1713,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5481,
        0
      ]
    ]
  ],
  [
    1710,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        48,
        0
      ]
    ]
  ],
  [
    1684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5478,
        0
      ]
    ]
  ],
  [
    5759,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5758,
        0
      ]
    ]
  ],
  [
    1675,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5759,
        0
      ]
    ]
  ],
  [
    1685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1675,
        0
      ],
      [
        1684,
        0
      ]
    ]
  ],
  [
    1681,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5477,
        0
      ]
    ]
  ],
  [
    1678,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1675,
        0
      ]
    ]
  ],
  [
    1676,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1675,
        0
      ]
    ]
  ],
  [
    1677,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1676,
        0
      ]
    ]
  ],
  [
    1679,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1677,
        0
      ],
      [
        1678,
        0
      ]
    ]
  ],
  [
    1682,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1679,
        0
      ],
      [
        1681,
        0
      ]
    ]
  ],
  [
    1686,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1685,
        0
      ],
      [
        1682,
        0
      ]
    ]
  ],
  [
    1687,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1686,
        0
      ]
    ]
  ],
  [
    1692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5479,
        0
      ]
    ]
  ],
  [
    5760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5758,
        0
      ]
    ]
  ],
  [
    1690,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5760,
        0
      ]
    ]
  ],
  [
    1693,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1690,
        0
      ],
      [
        1692,
        0
      ]
    ]
  ],
  [
    1694,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1693,
        0
      ]
    ]
  ],
  [
    1701,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5480,
        0
      ]
    ]
  ],
  [
    1695,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1690,
        0
      ]
    ]
  ],
  [
    1698,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1695,
        0
      ]
    ]
  ],
  [
    1696,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1695,
        0
      ]
    ]
  ],
  [
    1697,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1696,
        0
      ]
    ]
  ],
  [
    1699,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1697,
        0
      ],
      [
        1698,
        0
      ]
    ]
  ],
  [
    1702,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1699,
        0
      ],
      [
        1701,
        0
      ]
    ]
  ],
  [
    1703,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1694,
        0
      ],
      [
        1702,
        0
      ]
    ]
  ],
  [
    1708,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1703,
        0
      ],
      [
        1687,
        0
      ]
    ]
  ],
  [
    1711,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1708,
        0
      ],
      [
        1710,
        0
      ]
    ]
  ],
  [
    1714,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1711,
        0
      ],
      [
        1713,
        0
      ]
    ]
  ],
  [
    6112,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1714,
        0
      ]
    ]
  ],
  [
    6113,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1714,
        0
      ],
      [
        6112,
        0
      ]
    ]
  ],
  [
    6114,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6113,
        0
      ]
    ]
  ],
  [
    6115,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6113,
        0
      ],
      [
        6114,
        0
      ]
    ]
  ],
  [
    1724,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6115,
        0
      ],
      [
        1719,
        0
      ]
    ]
  ],
  [
    1726,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1724,
        0
      ]
    ]
  ],
  [
    1727,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1726,
        0
      ]
    ]
  ],
  [
    1728,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1727,
        0
      ],
      [
        1558,
        0
      ]
    ]
  ],
  [
    1729,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1658,
        0
      ],
      [
        1728,
        0
      ]
    ]
  ],
  [
    1556,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1060,
        0
      ]
    ]
  ],
  [
    1557,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1059,
        0
      ]
    ]
  ],
  [
    1746,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1058,
        0
      ]
    ]
  ],
  [
    5762,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1746,
        0
      ],
      [
        1557,
        0
      ]
    ]
  ],
  [
    1743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1062,
        0
      ]
    ]
  ],
  [
    1737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5482,
        0
      ]
    ]
  ],
  [
    1733,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1732,
        0
      ]
    ]
  ],
  [
    1730,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1729,
        0
      ],
      [
        1729,
        0
      ]
    ]
  ],
  [
    1731,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1730,
        0
      ]
    ]
  ],
  [
    1734,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1731,
        0
      ],
      [
        1733,
        0
      ]
    ]
  ],
  [
    1735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1734,
        0
      ]
    ]
  ],
  [
    1738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1735,
        0
      ],
      [
        1737,
        0
      ]
    ]
  ],
  [
    1739,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1738,
        0
      ]
    ]
  ],
  [
    1740,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1739,
        0
      ]
    ]
  ],
  [
    1741,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1740,
        0
      ]
    ]
  ],
  [
    1742,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1729,
        0
      ],
      [
        1741,
        0
      ]
    ]
  ],
  [
    1744,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1743,
        0
      ],
      [
        1742,
        0
      ]
    ]
  ],
  [
    5763,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1744,
        0
      ],
      [
        5762,
        0
      ]
    ]
  ],
  [
    5765,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5763,
        0
      ]
    ]
  ],
  [
    5764,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5763,
        0
      ]
    ]
  ],
  [
    1748,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5764,
        0
      ]
    ]
  ],
  [
    1749,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5764,
        0
      ],
      [
        1748,
        0
      ]
    ]
  ],
  [
    1750,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1749,
        0
      ],
      [
        5765,
        0
      ]
    ]
  ],
  [
    1751,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1750,
        0
      ],
      [
        1556,
        0
      ]
    ]
  ],
  [
    1752,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1729,
        0
      ],
      [
        1751,
        0
      ]
    ]
  ],
  [
    1554,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1066,
        0
      ]
    ]
  ],
  [
    1810,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1065,
        0
      ]
    ]
  ],
  [
    1782,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1063,
        0
      ]
    ]
  ],
  [
    1555,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1064,
        0
      ]
    ]
  ],
  [
    5766,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1555,
        0
      ],
      [
        1782,
        0
      ],
      [
        1810,
        0
      ]
    ]
  ],
  [
    1766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1070,
        0
      ]
    ]
  ],
  [
    1760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5483,
        0
      ]
    ]
  ],
  [
    1756,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1755,
        0
      ]
    ]
  ],
  [
    1753,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1752,
        0
      ],
      [
        1752,
        0
      ]
    ]
  ],
  [
    1754,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1753,
        0
      ]
    ]
  ],
  [
    1757,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1754,
        0
      ],
      [
        1756,
        0
      ]
    ]
  ],
  [
    1758,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1757,
        0
      ]
    ]
  ],
  [
    1761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1758,
        0
      ],
      [
        1760,
        0
      ]
    ]
  ],
  [
    1762,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1761,
        0
      ]
    ]
  ],
  [
    1763,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1762,
        0
      ]
    ]
  ],
  [
    1764,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1763,
        0
      ]
    ]
  ],
  [
    1765,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1752,
        0
      ],
      [
        1764,
        0
      ]
    ]
  ],
  [
    1767,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1766,
        0
      ],
      [
        1765,
        0
      ]
    ]
  ],
  [
    5767,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1767,
        0
      ],
      [
        5766,
        0
      ]
    ]
  ],
  [
    5770,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5767,
        0
      ]
    ]
  ],
  [
    1812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5770,
        0
      ]
    ]
  ],
  [
    1813,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1812,
        0
      ]
    ]
  ],
  [
    1807,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5488,
        0
      ]
    ]
  ],
  [
    1804,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        62,
        0
      ]
    ]
  ],
  [
    1778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5485,
        0
      ]
    ]
  ],
  [
    5768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5767,
        0
      ]
    ]
  ],
  [
    1769,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5768,
        0
      ]
    ]
  ],
  [
    1779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1769,
        0
      ],
      [
        1778,
        0
      ]
    ]
  ],
  [
    1775,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5484,
        0
      ]
    ]
  ],
  [
    1772,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1769,
        0
      ]
    ]
  ],
  [
    1770,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1769,
        0
      ]
    ]
  ],
  [
    1771,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1770,
        0
      ]
    ]
  ],
  [
    1773,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1771,
        0
      ],
      [
        1772,
        0
      ]
    ]
  ],
  [
    1776,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1773,
        0
      ],
      [
        1775,
        0
      ]
    ]
  ],
  [
    1780,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1779,
        0
      ],
      [
        1776,
        0
      ]
    ]
  ],
  [
    1781,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1780,
        0
      ]
    ]
  ],
  [
    1786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5486,
        0
      ]
    ]
  ],
  [
    5769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5767,
        0
      ]
    ]
  ],
  [
    1784,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5769,
        0
      ]
    ]
  ],
  [
    1787,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1784,
        0
      ],
      [
        1786,
        0
      ]
    ]
  ],
  [
    1788,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1787,
        0
      ]
    ]
  ],
  [
    1795,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5487,
        0
      ]
    ]
  ],
  [
    1789,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1784,
        0
      ]
    ]
  ],
  [
    1792,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1789,
        0
      ]
    ]
  ],
  [
    1790,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1789,
        0
      ]
    ]
  ],
  [
    1791,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1790,
        0
      ]
    ]
  ],
  [
    1793,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1791,
        0
      ],
      [
        1792,
        0
      ]
    ]
  ],
  [
    1796,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1793,
        0
      ],
      [
        1795,
        0
      ]
    ]
  ],
  [
    1797,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1788,
        0
      ],
      [
        1796,
        0
      ]
    ]
  ],
  [
    1802,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1797,
        0
      ],
      [
        1781,
        0
      ]
    ]
  ],
  [
    1805,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1802,
        0
      ],
      [
        1804,
        0
      ]
    ]
  ],
  [
    1808,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1805,
        0
      ],
      [
        1807,
        0
      ]
    ]
  ],
  [
    6116,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1808,
        0
      ]
    ]
  ],
  [
    6117,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1808,
        0
      ],
      [
        6116,
        0
      ]
    ]
  ],
  [
    6118,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6117,
        0
      ]
    ]
  ],
  [
    6119,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6117,
        0
      ],
      [
        6118,
        0
      ]
    ]
  ],
  [
    1818,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6119,
        0
      ],
      [
        1813,
        0
      ]
    ]
  ],
  [
    1820,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1818,
        0
      ]
    ]
  ],
  [
    1821,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1820,
        0
      ]
    ]
  ],
  [
    1822,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1821,
        0
      ],
      [
        1554,
        0
      ]
    ]
  ],
  [
    1823,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1752,
        0
      ],
      [
        1822,
        0
      ]
    ]
  ],
  [
    1552,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1069,
        0
      ]
    ]
  ],
  [
    1553,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1068,
        0
      ]
    ]
  ],
  [
    1840,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1067,
        0
      ]
    ]
  ],
  [
    5771,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1840,
        0
      ],
      [
        1553,
        0
      ]
    ]
  ],
  [
    1837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1071,
        0
      ]
    ]
  ],
  [
    1831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5489,
        0
      ]
    ]
  ],
  [
    1827,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1826,
        0
      ]
    ]
  ],
  [
    1824,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1823,
        0
      ],
      [
        1823,
        0
      ]
    ]
  ],
  [
    1825,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1824,
        0
      ]
    ]
  ],
  [
    1828,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1825,
        0
      ],
      [
        1827,
        0
      ]
    ]
  ],
  [
    1829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1828,
        0
      ]
    ]
  ],
  [
    1832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1829,
        0
      ],
      [
        1831,
        0
      ]
    ]
  ],
  [
    1833,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1832,
        0
      ]
    ]
  ],
  [
    1834,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1833,
        0
      ]
    ]
  ],
  [
    1835,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1834,
        0
      ]
    ]
  ],
  [
    1836,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1823,
        0
      ],
      [
        1835,
        0
      ]
    ]
  ],
  [
    1838,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1837,
        0
      ],
      [
        1836,
        0
      ]
    ]
  ],
  [
    5772,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1838,
        0
      ],
      [
        5771,
        0
      ]
    ]
  ],
  [
    5774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5772,
        0
      ]
    ]
  ],
  [
    5773,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5772,
        0
      ]
    ]
  ],
  [
    1842,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5773,
        0
      ]
    ]
  ],
  [
    1843,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5773,
        0
      ],
      [
        1842,
        0
      ]
    ]
  ],
  [
    1844,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1843,
        0
      ],
      [
        5774,
        0
      ]
    ]
  ],
  [
    1845,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1844,
        0
      ],
      [
        1552,
        0
      ]
    ]
  ],
  [
    1846,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1823,
        0
      ],
      [
        1845,
        0
      ]
    ]
  ],
  [
    1550,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1075,
        0
      ]
    ]
  ],
  [
    1904,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1074,
        0
      ]
    ]
  ],
  [
    1876,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1072,
        0
      ]
    ]
  ],
  [
    1551,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1073,
        0
      ]
    ]
  ],
  [
    5775,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1551,
        0
      ],
      [
        1876,
        0
      ],
      [
        1904,
        0
      ]
    ]
  ],
  [
    1860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1079,
        0
      ]
    ]
  ],
  [
    1854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5490,
        0
      ]
    ]
  ],
  [
    1850,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1849,
        0
      ]
    ]
  ],
  [
    1847,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1846,
        0
      ],
      [
        1846,
        0
      ]
    ]
  ],
  [
    1848,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1847,
        0
      ]
    ]
  ],
  [
    1851,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1848,
        0
      ],
      [
        1850,
        0
      ]
    ]
  ],
  [
    1852,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1851,
        0
      ]
    ]
  ],
  [
    1855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1852,
        0
      ],
      [
        1854,
        0
      ]
    ]
  ],
  [
    1856,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1855,
        0
      ]
    ]
  ],
  [
    1857,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1856,
        0
      ]
    ]
  ],
  [
    1858,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1857,
        0
      ]
    ]
  ],
  [
    1859,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1846,
        0
      ],
      [
        1858,
        0
      ]
    ]
  ],
  [
    1861,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1860,
        0
      ],
      [
        1859,
        0
      ]
    ]
  ],
  [
    5776,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1861,
        0
      ],
      [
        5775,
        0
      ]
    ]
  ],
  [
    5779,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5776,
        0
      ]
    ]
  ],
  [
    1906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5779,
        0
      ]
    ]
  ],
  [
    1907,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1906,
        0
      ]
    ]
  ],
  [
    1901,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5495,
        0
      ]
    ]
  ],
  [
    1898,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        76,
        0
      ]
    ]
  ],
  [
    1872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5492,
        0
      ]
    ]
  ],
  [
    5777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5776,
        0
      ]
    ]
  ],
  [
    1863,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5777,
        0
      ]
    ]
  ],
  [
    1873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1863,
        0
      ],
      [
        1872,
        0
      ]
    ]
  ],
  [
    1869,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5491,
        0
      ]
    ]
  ],
  [
    1866,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1863,
        0
      ]
    ]
  ],
  [
    1864,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1863,
        0
      ]
    ]
  ],
  [
    1865,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1864,
        0
      ]
    ]
  ],
  [
    1867,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1865,
        0
      ],
      [
        1866,
        0
      ]
    ]
  ],
  [
    1870,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1867,
        0
      ],
      [
        1869,
        0
      ]
    ]
  ],
  [
    1874,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1873,
        0
      ],
      [
        1870,
        0
      ]
    ]
  ],
  [
    1875,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1874,
        0
      ]
    ]
  ],
  [
    1880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5493,
        0
      ]
    ]
  ],
  [
    5778,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5776,
        0
      ]
    ]
  ],
  [
    1878,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5778,
        0
      ]
    ]
  ],
  [
    1881,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1878,
        0
      ],
      [
        1880,
        0
      ]
    ]
  ],
  [
    1882,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1881,
        0
      ]
    ]
  ],
  [
    1889,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5494,
        0
      ]
    ]
  ],
  [
    1883,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1878,
        0
      ]
    ]
  ],
  [
    1886,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1883,
        0
      ]
    ]
  ],
  [
    1884,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1883,
        0
      ]
    ]
  ],
  [
    1885,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1884,
        0
      ]
    ]
  ],
  [
    1887,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1885,
        0
      ],
      [
        1886,
        0
      ]
    ]
  ],
  [
    1890,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1887,
        0
      ],
      [
        1889,
        0
      ]
    ]
  ],
  [
    1891,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1882,
        0
      ],
      [
        1890,
        0
      ]
    ]
  ],
  [
    1896,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1891,
        0
      ],
      [
        1875,
        0
      ]
    ]
  ],
  [
    1899,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1896,
        0
      ],
      [
        1898,
        0
      ]
    ]
  ],
  [
    1902,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1899,
        0
      ],
      [
        1901,
        0
      ]
    ]
  ],
  [
    6120,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1902,
        0
      ]
    ]
  ],
  [
    6121,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1902,
        0
      ],
      [
        6120,
        0
      ]
    ]
  ],
  [
    6122,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6121,
        0
      ]
    ]
  ],
  [
    6123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6121,
        0
      ],
      [
        6122,
        0
      ]
    ]
  ],
  [
    1912,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6123,
        0
      ],
      [
        1907,
        0
      ]
    ]
  ],
  [
    1914,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1912,
        0
      ]
    ]
  ],
  [
    1915,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1914,
        0
      ]
    ]
  ],
  [
    1916,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1915,
        0
      ],
      [
        1550,
        0
      ]
    ]
  ],
  [
    1917,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1846,
        0
      ],
      [
        1916,
        0
      ]
    ]
  ],
  [
    1548,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1078,
        0
      ]
    ]
  ],
  [
    1549,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1077,
        0
      ]
    ]
  ],
  [
    1934,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1076,
        0
      ]
    ]
  ],
  [
    5780,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1934,
        0
      ],
      [
        1549,
        0
      ]
    ]
  ],
  [
    1931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1080,
        0
      ]
    ]
  ],
  [
    1925,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5496,
        0
      ]
    ]
  ],
  [
    1921,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1920,
        0
      ]
    ]
  ],
  [
    1918,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1917,
        0
      ],
      [
        1917,
        0
      ]
    ]
  ],
  [
    1919,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1918,
        0
      ]
    ]
  ],
  [
    1922,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1919,
        0
      ],
      [
        1921,
        0
      ]
    ]
  ],
  [
    1923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1922,
        0
      ]
    ]
  ],
  [
    1926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1923,
        0
      ],
      [
        1925,
        0
      ]
    ]
  ],
  [
    1927,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1926,
        0
      ]
    ]
  ],
  [
    1928,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1927,
        0
      ]
    ]
  ],
  [
    1929,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1928,
        0
      ]
    ]
  ],
  [
    1930,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1917,
        0
      ],
      [
        1929,
        0
      ]
    ]
  ],
  [
    1932,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1931,
        0
      ],
      [
        1930,
        0
      ]
    ]
  ],
  [
    5781,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1932,
        0
      ],
      [
        5780,
        0
      ]
    ]
  ],
  [
    5783,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5781,
        0
      ]
    ]
  ],
  [
    5782,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5781,
        0
      ]
    ]
  ],
  [
    1936,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5782,
        0
      ]
    ]
  ],
  [
    1937,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5782,
        0
      ],
      [
        1936,
        0
      ]
    ]
  ],
  [
    1938,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1937,
        0
      ],
      [
        5783,
        0
      ]
    ]
  ],
  [
    1939,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1938,
        0
      ],
      [
        1548,
        0
      ]
    ]
  ],
  [
    1940,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1917,
        0
      ],
      [
        1939,
        0
      ]
    ]
  ],
  [
    1546,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1084,
        0
      ]
    ]
  ],
  [
    1998,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1083,
        0
      ]
    ]
  ],
  [
    1970,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1081,
        0
      ]
    ]
  ],
  [
    1547,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1082,
        0
      ]
    ]
  ],
  [
    5784,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1547,
        0
      ],
      [
        1970,
        0
      ],
      [
        1998,
        0
      ]
    ]
  ],
  [
    1954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1088,
        0
      ]
    ]
  ],
  [
    1948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5497,
        0
      ]
    ]
  ],
  [
    1944,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1943,
        0
      ]
    ]
  ],
  [
    1941,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1940,
        0
      ],
      [
        1940,
        0
      ]
    ]
  ],
  [
    1942,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1941,
        0
      ]
    ]
  ],
  [
    1945,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1942,
        0
      ],
      [
        1944,
        0
      ]
    ]
  ],
  [
    1946,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1945,
        0
      ]
    ]
  ],
  [
    1949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1946,
        0
      ],
      [
        1948,
        0
      ]
    ]
  ],
  [
    1950,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1949,
        0
      ]
    ]
  ],
  [
    1951,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1950,
        0
      ]
    ]
  ],
  [
    1952,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1951,
        0
      ]
    ]
  ],
  [
    1953,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1940,
        0
      ],
      [
        1952,
        0
      ]
    ]
  ],
  [
    1955,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1954,
        0
      ],
      [
        1953,
        0
      ]
    ]
  ],
  [
    5785,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1955,
        0
      ],
      [
        5784,
        0
      ]
    ]
  ],
  [
    5788,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5785,
        0
      ]
    ]
  ],
  [
    2000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5788,
        0
      ]
    ]
  ],
  [
    2001,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2000,
        0
      ]
    ]
  ],
  [
    1995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5502,
        0
      ]
    ]
  ],
  [
    1992,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        90,
        0
      ]
    ]
  ],
  [
    1966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5499,
        0
      ]
    ]
  ],
  [
    5786,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5785,
        0
      ]
    ]
  ],
  [
    1957,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5786,
        0
      ]
    ]
  ],
  [
    1967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1957,
        0
      ],
      [
        1966,
        0
      ]
    ]
  ],
  [
    1963,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5498,
        0
      ]
    ]
  ],
  [
    1960,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1957,
        0
      ]
    ]
  ],
  [
    1958,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1957,
        0
      ]
    ]
  ],
  [
    1959,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1958,
        0
      ]
    ]
  ],
  [
    1961,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1959,
        0
      ],
      [
        1960,
        0
      ]
    ]
  ],
  [
    1964,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1961,
        0
      ],
      [
        1963,
        0
      ]
    ]
  ],
  [
    1968,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1967,
        0
      ],
      [
        1964,
        0
      ]
    ]
  ],
  [
    1969,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1968,
        0
      ]
    ]
  ],
  [
    1974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5500,
        0
      ]
    ]
  ],
  [
    5787,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5785,
        0
      ]
    ]
  ],
  [
    1972,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5787,
        0
      ]
    ]
  ],
  [
    1975,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1972,
        0
      ],
      [
        1974,
        0
      ]
    ]
  ],
  [
    1976,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1975,
        0
      ]
    ]
  ],
  [
    1983,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5501,
        0
      ]
    ]
  ],
  [
    1977,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1972,
        0
      ]
    ]
  ],
  [
    1980,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1977,
        0
      ]
    ]
  ],
  [
    1978,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1977,
        0
      ]
    ]
  ],
  [
    1979,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1978,
        0
      ]
    ]
  ],
  [
    1981,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1979,
        0
      ],
      [
        1980,
        0
      ]
    ]
  ],
  [
    1984,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1981,
        0
      ],
      [
        1983,
        0
      ]
    ]
  ],
  [
    1985,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1976,
        0
      ],
      [
        1984,
        0
      ]
    ]
  ],
  [
    1990,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1985,
        0
      ],
      [
        1969,
        0
      ]
    ]
  ],
  [
    1993,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1990,
        0
      ],
      [
        1992,
        0
      ]
    ]
  ],
  [
    1996,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1993,
        0
      ],
      [
        1995,
        0
      ]
    ]
  ],
  [
    6124,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1996,
        0
      ]
    ]
  ],
  [
    6125,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1996,
        0
      ],
      [
        6124,
        0
      ]
    ]
  ],
  [
    6126,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6125,
        0
      ]
    ]
  ],
  [
    6127,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6125,
        0
      ],
      [
        6126,
        0
      ]
    ]
  ],
  [
    2006,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6127,
        0
      ],
      [
        2001,
        0
      ]
    ]
  ],
  [
    2008,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2006,
        0
      ]
    ]
  ],
  [
    2009,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2008,
        0
      ]
    ]
  ],
  [
    2010,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2009,
        0
      ],
      [
        1546,
        0
      ]
    ]
  ],
  [
    2011,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1940,
        0
      ],
      [
        2010,
        0
      ]
    ]
  ],
  [
    1544,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1087,
        0
      ]
    ]
  ],
  [
    1545,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1086,
        0
      ]
    ]
  ],
  [
    2028,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1085,
        0
      ]
    ]
  ],
  [
    5789,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2028,
        0
      ],
      [
        1545,
        0
      ]
    ]
  ],
  [
    2025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1089,
        0
      ]
    ]
  ],
  [
    2019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5503,
        0
      ]
    ]
  ],
  [
    2015,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2014,
        0
      ]
    ]
  ],
  [
    2012,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2011,
        0
      ],
      [
        2011,
        0
      ]
    ]
  ],
  [
    2013,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2012,
        0
      ]
    ]
  ],
  [
    2016,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2013,
        0
      ],
      [
        2015,
        0
      ]
    ]
  ],
  [
    2017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2016,
        0
      ]
    ]
  ],
  [
    2020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2017,
        0
      ],
      [
        2019,
        0
      ]
    ]
  ],
  [
    2021,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2020,
        0
      ]
    ]
  ],
  [
    2022,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2021,
        0
      ]
    ]
  ],
  [
    2023,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2022,
        0
      ]
    ]
  ],
  [
    2024,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2011,
        0
      ],
      [
        2023,
        0
      ]
    ]
  ],
  [
    2026,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2025,
        0
      ],
      [
        2024,
        0
      ]
    ]
  ],
  [
    5790,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2026,
        0
      ],
      [
        5789,
        0
      ]
    ]
  ],
  [
    5792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5790,
        0
      ]
    ]
  ],
  [
    5791,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5790,
        0
      ]
    ]
  ],
  [
    2030,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5791,
        0
      ]
    ]
  ],
  [
    2031,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5791,
        0
      ],
      [
        2030,
        0
      ]
    ]
  ],
  [
    2032,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2031,
        0
      ],
      [
        5792,
        0
      ]
    ]
  ],
  [
    2033,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2032,
        0
      ],
      [
        1544,
        0
      ]
    ]
  ],
  [
    2034,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2011,
        0
      ],
      [
        2033,
        0
      ]
    ]
  ],
  [
    1542,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1093,
        0
      ]
    ]
  ],
  [
    2092,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1092,
        0
      ]
    ]
  ],
  [
    2064,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1090,
        0
      ]
    ]
  ],
  [
    1543,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1091,
        0
      ]
    ]
  ],
  [
    5793,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1543,
        0
      ],
      [
        2064,
        0
      ],
      [
        2092,
        0
      ]
    ]
  ],
  [
    2048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1097,
        0
      ]
    ]
  ],
  [
    2042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5504,
        0
      ]
    ]
  ],
  [
    2038,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2037,
        0
      ]
    ]
  ],
  [
    2035,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2034,
        0
      ],
      [
        2034,
        0
      ]
    ]
  ],
  [
    2036,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2035,
        0
      ]
    ]
  ],
  [
    2039,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2036,
        0
      ],
      [
        2038,
        0
      ]
    ]
  ],
  [
    2040,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2039,
        0
      ]
    ]
  ],
  [
    2043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2040,
        0
      ],
      [
        2042,
        0
      ]
    ]
  ],
  [
    2044,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2043,
        0
      ]
    ]
  ],
  [
    2045,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2044,
        0
      ]
    ]
  ],
  [
    2046,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2045,
        0
      ]
    ]
  ],
  [
    2047,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2034,
        0
      ],
      [
        2046,
        0
      ]
    ]
  ],
  [
    2049,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2048,
        0
      ],
      [
        2047,
        0
      ]
    ]
  ],
  [
    5794,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2049,
        0
      ],
      [
        5793,
        0
      ]
    ]
  ],
  [
    5797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5794,
        0
      ]
    ]
  ],
  [
    2094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5797,
        0
      ]
    ]
  ],
  [
    2095,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2094,
        0
      ]
    ]
  ],
  [
    2089,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5510,
        0
      ]
    ]
  ],
  [
    2086,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        104,
        0
      ]
    ]
  ],
  [
    2060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5468,
        0
      ]
    ]
  ],
  [
    5795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5794,
        0
      ]
    ]
  ],
  [
    2051,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5795,
        0
      ]
    ]
  ],
  [
    2061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2051,
        0
      ],
      [
        2060,
        0
      ]
    ]
  ],
  [
    2057,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5467,
        0
      ]
    ]
  ],
  [
    2054,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2051,
        0
      ]
    ]
  ],
  [
    2052,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2051,
        0
      ]
    ]
  ],
  [
    2053,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2052,
        0
      ]
    ]
  ],
  [
    2055,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2053,
        0
      ],
      [
        2054,
        0
      ]
    ]
  ],
  [
    2058,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2055,
        0
      ],
      [
        2057,
        0
      ]
    ]
  ],
  [
    2062,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2061,
        0
      ],
      [
        2058,
        0
      ]
    ]
  ],
  [
    2063,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2062,
        0
      ]
    ]
  ],
  [
    2068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5508,
        0
      ]
    ]
  ],
  [
    5796,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5794,
        0
      ]
    ]
  ],
  [
    2066,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5796,
        0
      ]
    ]
  ],
  [
    2069,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2066,
        0
      ],
      [
        2068,
        0
      ]
    ]
  ],
  [
    2070,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2069,
        0
      ]
    ]
  ],
  [
    2077,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5509,
        0
      ]
    ]
  ],
  [
    2071,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2066,
        0
      ]
    ]
  ],
  [
    2074,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2071,
        0
      ]
    ]
  ],
  [
    2072,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2071,
        0
      ]
    ]
  ],
  [
    2073,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2072,
        0
      ]
    ]
  ],
  [
    2075,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2073,
        0
      ],
      [
        2074,
        0
      ]
    ]
  ],
  [
    2078,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2075,
        0
      ],
      [
        2077,
        0
      ]
    ]
  ],
  [
    2079,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2070,
        0
      ],
      [
        2078,
        0
      ]
    ]
  ],
  [
    2084,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2079,
        0
      ],
      [
        2063,
        0
      ]
    ]
  ],
  [
    2087,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2084,
        0
      ],
      [
        2086,
        0
      ]
    ]
  ],
  [
    2090,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2087,
        0
      ],
      [
        2089,
        0
      ]
    ]
  ],
  [
    6128,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2090,
        0
      ]
    ]
  ],
  [
    6129,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2090,
        0
      ],
      [
        6128,
        0
      ]
    ]
  ],
  [
    6130,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6129,
        0
      ]
    ]
  ],
  [
    6131,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6129,
        0
      ],
      [
        6130,
        0
      ]
    ]
  ],
  [
    2100,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6131,
        0
      ],
      [
        2095,
        0
      ]
    ]
  ],
  [
    2102,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2100,
        0
      ]
    ]
  ],
  [
    2103,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2102,
        0
      ]
    ]
  ],
  [
    2104,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2103,
        0
      ],
      [
        1542,
        0
      ]
    ]
  ],
  [
    2105,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2034,
        0
      ],
      [
        2104,
        0
      ]
    ]
  ],
  [
    1540,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1096,
        0
      ]
    ]
  ],
  [
    1541,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1095,
        0
      ]
    ]
  ],
  [
    2122,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1094,
        0
      ]
    ]
  ],
  [
    5798,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2122,
        0
      ],
      [
        1541,
        0
      ]
    ]
  ],
  [
    2119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1098,
        0
      ]
    ]
  ],
  [
    2113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5511,
        0
      ]
    ]
  ],
  [
    2109,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2108,
        0
      ]
    ]
  ],
  [
    2106,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2105,
        0
      ],
      [
        2105,
        0
      ]
    ]
  ],
  [
    2107,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2106,
        0
      ]
    ]
  ],
  [
    2110,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2107,
        0
      ],
      [
        2109,
        0
      ]
    ]
  ],
  [
    2111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2110,
        0
      ]
    ]
  ],
  [
    2114,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2111,
        0
      ],
      [
        2113,
        0
      ]
    ]
  ],
  [
    2115,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2114,
        0
      ]
    ]
  ],
  [
    2116,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2115,
        0
      ]
    ]
  ],
  [
    2117,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2116,
        0
      ]
    ]
  ],
  [
    2118,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2105,
        0
      ],
      [
        2117,
        0
      ]
    ]
  ],
  [
    2120,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2119,
        0
      ],
      [
        2118,
        0
      ]
    ]
  ],
  [
    5799,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2120,
        0
      ],
      [
        5798,
        0
      ]
    ]
  ],
  [
    5801,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5799,
        0
      ]
    ]
  ],
  [
    5800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5799,
        0
      ]
    ]
  ],
  [
    2124,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5800,
        0
      ]
    ]
  ],
  [
    2125,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5800,
        0
      ],
      [
        2124,
        0
      ]
    ]
  ],
  [
    2126,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2125,
        0
      ],
      [
        5801,
        0
      ]
    ]
  ],
  [
    2127,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2126,
        0
      ],
      [
        1540,
        0
      ]
    ]
  ],
  [
    2128,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2105,
        0
      ],
      [
        2127,
        0
      ]
    ]
  ],
  [
    1538,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1102,
        0
      ]
    ]
  ],
  [
    2186,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1101,
        0
      ]
    ]
  ],
  [
    2158,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1099,
        0
      ]
    ]
  ],
  [
    1539,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1100,
        0
      ]
    ]
  ],
  [
    5802,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1539,
        0
      ],
      [
        2158,
        0
      ],
      [
        2186,
        0
      ]
    ]
  ],
  [
    2142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1106,
        0
      ]
    ]
  ],
  [
    2136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5512,
        0
      ]
    ]
  ],
  [
    2132,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2131,
        0
      ]
    ]
  ],
  [
    2129,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2128,
        0
      ],
      [
        2128,
        0
      ]
    ]
  ],
  [
    2130,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2129,
        0
      ]
    ]
  ],
  [
    2133,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2130,
        0
      ],
      [
        2132,
        0
      ]
    ]
  ],
  [
    2134,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2133,
        0
      ]
    ]
  ],
  [
    2137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2134,
        0
      ],
      [
        2136,
        0
      ]
    ]
  ],
  [
    2138,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2137,
        0
      ]
    ]
  ],
  [
    2139,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2138,
        0
      ]
    ]
  ],
  [
    2140,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2139,
        0
      ]
    ]
  ],
  [
    2141,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2128,
        0
      ],
      [
        2140,
        0
      ]
    ]
  ],
  [
    2143,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2142,
        0
      ],
      [
        2141,
        0
      ]
    ]
  ],
  [
    5803,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2143,
        0
      ],
      [
        5802,
        0
      ]
    ]
  ],
  [
    5806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5806,
        0
      ]
    ]
  ],
  [
    2189,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2188,
        0
      ]
    ]
  ],
  [
    2183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5517,
        0
      ]
    ]
  ],
  [
    2180,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        118,
        0
      ]
    ]
  ],
  [
    2154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5514,
        0
      ]
    ]
  ],
  [
    5804,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5804,
        0
      ]
    ]
  ],
  [
    2155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2145,
        0
      ],
      [
        2154,
        0
      ]
    ]
  ],
  [
    2151,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5513,
        0
      ]
    ]
  ],
  [
    2148,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2145,
        0
      ]
    ]
  ],
  [
    2146,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2145,
        0
      ]
    ]
  ],
  [
    2147,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2146,
        0
      ]
    ]
  ],
  [
    2149,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2147,
        0
      ],
      [
        2148,
        0
      ]
    ]
  ],
  [
    2152,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2149,
        0
      ],
      [
        2151,
        0
      ]
    ]
  ],
  [
    2156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2155,
        0
      ],
      [
        2152,
        0
      ]
    ]
  ],
  [
    2157,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2156,
        0
      ]
    ]
  ],
  [
    2162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5515,
        0
      ]
    ]
  ],
  [
    5805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2160,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5805,
        0
      ]
    ]
  ],
  [
    2163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2160,
        0
      ],
      [
        2162,
        0
      ]
    ]
  ],
  [
    2164,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2163,
        0
      ]
    ]
  ],
  [
    2171,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5516,
        0
      ]
    ]
  ],
  [
    2165,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2160,
        0
      ]
    ]
  ],
  [
    2168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2166,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2167,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2166,
        0
      ]
    ]
  ],
  [
    2169,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2167,
        0
      ],
      [
        2168,
        0
      ]
    ]
  ],
  [
    2172,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2169,
        0
      ],
      [
        2171,
        0
      ]
    ]
  ],
  [
    2173,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2164,
        0
      ],
      [
        2172,
        0
      ]
    ]
  ],
  [
    2178,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2173,
        0
      ],
      [
        2157,
        0
      ]
    ]
  ],
  [
    2181,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2178,
        0
      ],
      [
        2180,
        0
      ]
    ]
  ],
  [
    2184,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2181,
        0
      ],
      [
        2183,
        0
      ]
    ]
  ],
  [
    6132,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2184,
        0
      ]
    ]
  ],
  [
    6133,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2184,
        0
      ],
      [
        6132,
        0
      ]
    ]
  ],
  [
    6134,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6133,
        0
      ]
    ]
  ],
  [
    6135,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6133,
        0
      ],
      [
        6134,
        0
      ]
    ]
  ],
  [
    2194,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6135,
        0
      ],
      [
        2189,
        0
      ]
    ]
  ],
  [
    2196,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2194,
        0
      ]
    ]
  ],
  [
    2197,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2196,
        0
      ]
    ]
  ],
  [
    2198,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2197,
        0
      ],
      [
        1538,
        0
      ]
    ]
  ],
  [
    2199,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2128,
        0
      ],
      [
        2198,
        0
      ]
    ]
  ],
  [
    1536,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1105,
        0
      ]
    ]
  ],
  [
    1537,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1104,
        0
      ]
    ]
  ],
  [
    2216,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1103,
        0
      ]
    ]
  ],
  [
    5807,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2216,
        0
      ],
      [
        1537,
        0
      ]
    ]
  ],
  [
    2213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1107,
        0
      ]
    ]
  ],
  [
    2207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5518,
        0
      ]
    ]
  ],
  [
    2203,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2202,
        0
      ]
    ]
  ],
  [
    2200,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2199,
        0
      ],
      [
        2199,
        0
      ]
    ]
  ],
  [
    2201,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2200,
        0
      ]
    ]
  ],
  [
    2204,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2201,
        0
      ],
      [
        2203,
        0
      ]
    ]
  ],
  [
    2205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2204,
        0
      ]
    ]
  ],
  [
    2208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2205,
        0
      ],
      [
        2207,
        0
      ]
    ]
  ],
  [
    2209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2208,
        0
      ]
    ]
  ],
  [
    2210,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2209,
        0
      ]
    ]
  ],
  [
    2211,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2210,
        0
      ]
    ]
  ],
  [
    2212,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2199,
        0
      ],
      [
        2211,
        0
      ]
    ]
  ],
  [
    2214,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2213,
        0
      ],
      [
        2212,
        0
      ]
    ]
  ],
  [
    5808,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2214,
        0
      ],
      [
        5807,
        0
      ]
    ]
  ],
  [
    5810,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5808,
        0
      ]
    ]
  ],
  [
    5809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5808,
        0
      ]
    ]
  ],
  [
    2218,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5809,
        0
      ]
    ]
  ],
  [
    2219,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5809,
        0
      ],
      [
        2218,
        0
      ]
    ]
  ],
  [
    2220,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2219,
        0
      ],
      [
        5810,
        0
      ]
    ]
  ],
  [
    2221,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2220,
        0
      ],
      [
        1536,
        0
      ]
    ]
  ],
  [
    2222,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2199,
        0
      ],
      [
        2221,
        0
      ]
    ]
  ],
  [
    1534,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1111,
        0
      ]
    ]
  ],
  [
    2280,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1110,
        0
      ]
    ]
  ],
  [
    2252,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1108,
        0
      ]
    ]
  ],
  [
    1535,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1109,
        0
      ]
    ]
  ],
  [
    5811,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1535,
        0
      ],
      [
        2252,
        0
      ],
      [
        2280,
        0
      ]
    ]
  ],
  [
    2236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1115,
        0
      ]
    ]
  ],
  [
    2230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5521,
        0
      ]
    ]
  ],
  [
    2226,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2225,
        0
      ]
    ]
  ],
  [
    2223,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2222,
        0
      ],
      [
        2222,
        0
      ]
    ]
  ],
  [
    2224,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2223,
        0
      ]
    ]
  ],
  [
    2227,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2224,
        0
      ],
      [
        2226,
        0
      ]
    ]
  ],
  [
    2228,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2227,
        0
      ]
    ]
  ],
  [
    2231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2228,
        0
      ],
      [
        2230,
        0
      ]
    ]
  ],
  [
    2232,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2231,
        0
      ]
    ]
  ],
  [
    2233,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2232,
        0
      ]
    ]
  ],
  [
    2234,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2233,
        0
      ]
    ]
  ],
  [
    2235,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2222,
        0
      ],
      [
        2234,
        0
      ]
    ]
  ],
  [
    2237,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2236,
        0
      ],
      [
        2235,
        0
      ]
    ]
  ],
  [
    5812,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2237,
        0
      ],
      [
        5811,
        0
      ]
    ]
  ],
  [
    5815,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5812,
        0
      ]
    ]
  ],
  [
    2282,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5815,
        0
      ]
    ]
  ],
  [
    2283,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2282,
        0
      ]
    ]
  ],
  [
    2277,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5526,
        0
      ]
    ]
  ],
  [
    2274,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        132,
        0
      ]
    ]
  ],
  [
    2248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5523,
        0
      ]
    ]
  ],
  [
    5813,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5812,
        0
      ]
    ]
  ],
  [
    2239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5813,
        0
      ]
    ]
  ],
  [
    2249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2239,
        0
      ],
      [
        2248,
        0
      ]
    ]
  ],
  [
    2245,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5522,
        0
      ]
    ]
  ],
  [
    2242,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2239,
        0
      ]
    ]
  ],
  [
    2240,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2239,
        0
      ]
    ]
  ],
  [
    2241,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2240,
        0
      ]
    ]
  ],
  [
    2243,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2241,
        0
      ],
      [
        2242,
        0
      ]
    ]
  ],
  [
    2246,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2243,
        0
      ],
      [
        2245,
        0
      ]
    ]
  ],
  [
    2250,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2249,
        0
      ],
      [
        2246,
        0
      ]
    ]
  ],
  [
    2251,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2250,
        0
      ]
    ]
  ],
  [
    2256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5524,
        0
      ]
    ]
  ],
  [
    5814,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5812,
        0
      ]
    ]
  ],
  [
    2254,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5814,
        0
      ]
    ]
  ],
  [
    2257,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2254,
        0
      ],
      [
        2256,
        0
      ]
    ]
  ],
  [
    2258,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2257,
        0
      ]
    ]
  ],
  [
    2265,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5525,
        0
      ]
    ]
  ],
  [
    2259,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2254,
        0
      ]
    ]
  ],
  [
    2262,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2259,
        0
      ]
    ]
  ],
  [
    2260,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2259,
        0
      ]
    ]
  ],
  [
    2261,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2260,
        0
      ]
    ]
  ],
  [
    2263,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2261,
        0
      ],
      [
        2262,
        0
      ]
    ]
  ],
  [
    2266,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2263,
        0
      ],
      [
        2265,
        0
      ]
    ]
  ],
  [
    2267,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2258,
        0
      ],
      [
        2266,
        0
      ]
    ]
  ],
  [
    2272,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2267,
        0
      ],
      [
        2251,
        0
      ]
    ]
  ],
  [
    2275,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2272,
        0
      ],
      [
        2274,
        0
      ]
    ]
  ],
  [
    2278,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2275,
        0
      ],
      [
        2277,
        0
      ]
    ]
  ],
  [
    6136,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2278,
        0
      ]
    ]
  ],
  [
    6137,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2278,
        0
      ],
      [
        6136,
        0
      ]
    ]
  ],
  [
    6138,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6137,
        0
      ]
    ]
  ],
  [
    6139,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6137,
        0
      ],
      [
        6138,
        0
      ]
    ]
  ],
  [
    2288,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6139,
        0
      ],
      [
        2283,
        0
      ]
    ]
  ],
  [
    2290,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2288,
        0
      ]
    ]
  ],
  [
    2291,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2290,
        0
      ]
    ]
  ],
  [
    2292,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2291,
        0
      ],
      [
        1534,
        0
      ]
    ]
  ],
  [
    2293,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2222,
        0
      ],
      [
        2292,
        0
      ]
    ]
  ],
  [
    1532,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1114,
        0
      ]
    ]
  ],
  [
    1533,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1113,
        0
      ]
    ]
  ],
  [
    2310,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1112,
        0
      ]
    ]
  ],
  [
    5816,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2310,
        0
      ],
      [
        1533,
        0
      ]
    ]
  ],
  [
    2307,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1116,
        0
      ]
    ]
  ],
  [
    2301,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5527,
        0
      ]
    ]
  ],
  [
    2297,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2296,
        0
      ]
    ]
  ],
  [
    2294,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2293,
        0
      ],
      [
        2293,
        0
      ]
    ]
  ],
  [
    2295,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2294,
        0
      ]
    ]
  ],
  [
    2298,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2295,
        0
      ],
      [
        2297,
        0
      ]
    ]
  ],
  [
    2299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2298,
        0
      ]
    ]
  ],
  [
    2302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2299,
        0
      ],
      [
        2301,
        0
      ]
    ]
  ],
  [
    2303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2302,
        0
      ]
    ]
  ],
  [
    2304,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2303,
        0
      ]
    ]
  ],
  [
    2305,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2304,
        0
      ]
    ]
  ],
  [
    2306,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2293,
        0
      ],
      [
        2305,
        0
      ]
    ]
  ],
  [
    2308,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2307,
        0
      ],
      [
        2306,
        0
      ]
    ]
  ],
  [
    5817,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2308,
        0
      ],
      [
        5816,
        0
      ]
    ]
  ],
  [
    5819,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5817,
        0
      ]
    ]
  ],
  [
    5818,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5817,
        0
      ]
    ]
  ],
  [
    2312,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5818,
        0
      ]
    ]
  ],
  [
    2313,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5818,
        0
      ],
      [
        2312,
        0
      ]
    ]
  ],
  [
    2314,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2313,
        0
      ],
      [
        5819,
        0
      ]
    ]
  ],
  [
    2315,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2314,
        0
      ],
      [
        1532,
        0
      ]
    ]
  ],
  [
    2316,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2293,
        0
      ],
      [
        2315,
        0
      ]
    ]
  ],
  [
    1530,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1120,
        0
      ]
    ]
  ],
  [
    2374,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1119,
        0
      ]
    ]
  ],
  [
    2346,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1117,
        0
      ]
    ]
  ],
  [
    1531,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1118,
        0
      ]
    ]
  ],
  [
    5820,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1531,
        0
      ],
      [
        2346,
        0
      ],
      [
        2374,
        0
      ]
    ]
  ],
  [
    2330,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1124,
        0
      ]
    ]
  ],
  [
    2324,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5528,
        0
      ]
    ]
  ],
  [
    2320,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2319,
        0
      ]
    ]
  ],
  [
    2317,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2316,
        0
      ],
      [
        2316,
        0
      ]
    ]
  ],
  [
    2318,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2317,
        0
      ]
    ]
  ],
  [
    2321,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2318,
        0
      ],
      [
        2320,
        0
      ]
    ]
  ],
  [
    2322,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2321,
        0
      ]
    ]
  ],
  [
    2325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2322,
        0
      ],
      [
        2324,
        0
      ]
    ]
  ],
  [
    2326,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2325,
        0
      ]
    ]
  ],
  [
    2327,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2326,
        0
      ]
    ]
  ],
  [
    2328,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2327,
        0
      ]
    ]
  ],
  [
    2329,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2316,
        0
      ],
      [
        2328,
        0
      ]
    ]
  ],
  [
    2331,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2330,
        0
      ],
      [
        2329,
        0
      ]
    ]
  ],
  [
    5821,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2331,
        0
      ],
      [
        5820,
        0
      ]
    ]
  ],
  [
    5824,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5821,
        0
      ]
    ]
  ],
  [
    2376,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5824,
        0
      ]
    ]
  ],
  [
    2377,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2376,
        0
      ]
    ]
  ],
  [
    2371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5533,
        0
      ]
    ]
  ],
  [
    2368,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        146,
        0
      ]
    ]
  ],
  [
    2342,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5530,
        0
      ]
    ]
  ],
  [
    5822,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5821,
        0
      ]
    ]
  ],
  [
    2333,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5822,
        0
      ]
    ]
  ],
  [
    2343,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2333,
        0
      ],
      [
        2342,
        0
      ]
    ]
  ],
  [
    2339,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5529,
        0
      ]
    ]
  ],
  [
    2336,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2333,
        0
      ]
    ]
  ],
  [
    2334,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2333,
        0
      ]
    ]
  ],
  [
    2335,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2334,
        0
      ]
    ]
  ],
  [
    2337,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2335,
        0
      ],
      [
        2336,
        0
      ]
    ]
  ],
  [
    2340,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2337,
        0
      ],
      [
        2339,
        0
      ]
    ]
  ],
  [
    2344,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2343,
        0
      ],
      [
        2340,
        0
      ]
    ]
  ],
  [
    2345,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2344,
        0
      ]
    ]
  ],
  [
    2350,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5531,
        0
      ]
    ]
  ],
  [
    5823,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5821,
        0
      ]
    ]
  ],
  [
    2348,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5823,
        0
      ]
    ]
  ],
  [
    2351,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2348,
        0
      ],
      [
        2350,
        0
      ]
    ]
  ],
  [
    2352,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2351,
        0
      ]
    ]
  ],
  [
    2359,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5532,
        0
      ]
    ]
  ],
  [
    2353,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2348,
        0
      ]
    ]
  ],
  [
    2356,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2353,
        0
      ]
    ]
  ],
  [
    2354,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2353,
        0
      ]
    ]
  ],
  [
    2355,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2354,
        0
      ]
    ]
  ],
  [
    2357,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2355,
        0
      ],
      [
        2356,
        0
      ]
    ]
  ],
  [
    2360,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2357,
        0
      ],
      [
        2359,
        0
      ]
    ]
  ],
  [
    2361,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2352,
        0
      ],
      [
        2360,
        0
      ]
    ]
  ],
  [
    2366,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2361,
        0
      ],
      [
        2345,
        0
      ]
    ]
  ],
  [
    2369,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2366,
        0
      ],
      [
        2368,
        0
      ]
    ]
  ],
  [
    2372,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2369,
        0
      ],
      [
        2371,
        0
      ]
    ]
  ],
  [
    6140,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2372,
        0
      ]
    ]
  ],
  [
    6141,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2372,
        0
      ],
      [
        6140,
        0
      ]
    ]
  ],
  [
    6142,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6141,
        0
      ]
    ]
  ],
  [
    6143,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6141,
        0
      ],
      [
        6142,
        0
      ]
    ]
  ],
  [
    2382,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6143,
        0
      ],
      [
        2377,
        0
      ]
    ]
  ],
  [
    2384,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2382,
        0
      ]
    ]
  ],
  [
    2385,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2384,
        0
      ]
    ]
  ],
  [
    2386,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2385,
        0
      ],
      [
        1530,
        0
      ]
    ]
  ],
  [
    2387,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2316,
        0
      ],
      [
        2386,
        0
      ]
    ]
  ],
  [
    1528,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1123,
        0
      ]
    ]
  ],
  [
    1529,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1122,
        0
      ]
    ]
  ],
  [
    2404,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1121,
        0
      ]
    ]
  ],
  [
    5825,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2404,
        0
      ],
      [
        1529,
        0
      ]
    ]
  ],
  [
    2401,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1125,
        0
      ]
    ]
  ],
  [
    2395,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5534,
        0
      ]
    ]
  ],
  [
    2391,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2390,
        0
      ]
    ]
  ],
  [
    2388,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2387,
        0
      ],
      [
        2387,
        0
      ]
    ]
  ],
  [
    2389,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2388,
        0
      ]
    ]
  ],
  [
    2392,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2389,
        0
      ],
      [
        2391,
        0
      ]
    ]
  ],
  [
    2393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2392,
        0
      ]
    ]
  ],
  [
    2396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2393,
        0
      ],
      [
        2395,
        0
      ]
    ]
  ],
  [
    2397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2396,
        0
      ]
    ]
  ],
  [
    2398,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2397,
        0
      ]
    ]
  ],
  [
    2399,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2398,
        0
      ]
    ]
  ],
  [
    2400,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2387,
        0
      ],
      [
        2399,
        0
      ]
    ]
  ],
  [
    2402,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2401,
        0
      ],
      [
        2400,
        0
      ]
    ]
  ],
  [
    5826,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2402,
        0
      ],
      [
        5825,
        0
      ]
    ]
  ],
  [
    5828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5826,
        0
      ]
    ]
  ],
  [
    5827,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5826,
        0
      ]
    ]
  ],
  [
    2406,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5827,
        0
      ]
    ]
  ],
  [
    2407,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5827,
        0
      ],
      [
        2406,
        0
      ]
    ]
  ],
  [
    2408,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2407,
        0
      ],
      [
        5828,
        0
      ]
    ]
  ],
  [
    2409,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2408,
        0
      ],
      [
        1528,
        0
      ]
    ]
  ],
  [
    2410,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2387,
        0
      ],
      [
        2409,
        0
      ]
    ]
  ],
  [
    1526,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1129,
        0
      ]
    ]
  ],
  [
    2468,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1128,
        0
      ]
    ]
  ],
  [
    2440,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1126,
        0
      ]
    ]
  ],
  [
    1527,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1127,
        0
      ]
    ]
  ],
  [
    5829,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1527,
        0
      ],
      [
        2440,
        0
      ],
      [
        2468,
        0
      ]
    ]
  ],
  [
    2424,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1133,
        0
      ]
    ]
  ],
  [
    2418,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5535,
        0
      ]
    ]
  ],
  [
    2414,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2413,
        0
      ]
    ]
  ],
  [
    2411,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2410,
        0
      ],
      [
        2410,
        0
      ]
    ]
  ],
  [
    2412,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2411,
        0
      ]
    ]
  ],
  [
    2415,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2412,
        0
      ],
      [
        2414,
        0
      ]
    ]
  ],
  [
    2416,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2415,
        0
      ]
    ]
  ],
  [
    2419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2416,
        0
      ],
      [
        2418,
        0
      ]
    ]
  ],
  [
    2420,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2419,
        0
      ]
    ]
  ],
  [
    2421,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2420,
        0
      ]
    ]
  ],
  [
    2422,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2421,
        0
      ]
    ]
  ],
  [
    2423,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2410,
        0
      ],
      [
        2422,
        0
      ]
    ]
  ],
  [
    2425,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2424,
        0
      ],
      [
        2423,
        0
      ]
    ]
  ],
  [
    5830,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2425,
        0
      ],
      [
        5829,
        0
      ]
    ]
  ],
  [
    5833,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5830,
        0
      ]
    ]
  ],
  [
    2470,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5833,
        0
      ]
    ]
  ],
  [
    2471,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2470,
        0
      ]
    ]
  ],
  [
    2465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5540,
        0
      ]
    ]
  ],
  [
    2462,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        160,
        0
      ]
    ]
  ],
  [
    2436,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5537,
        0
      ]
    ]
  ],
  [
    5831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5830,
        0
      ]
    ]
  ],
  [
    2427,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5831,
        0
      ]
    ]
  ],
  [
    2437,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2427,
        0
      ],
      [
        2436,
        0
      ]
    ]
  ],
  [
    2433,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5536,
        0
      ]
    ]
  ],
  [
    2430,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2427,
        0
      ]
    ]
  ],
  [
    2428,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2427,
        0
      ]
    ]
  ],
  [
    2429,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2428,
        0
      ]
    ]
  ],
  [
    2431,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2429,
        0
      ],
      [
        2430,
        0
      ]
    ]
  ],
  [
    2434,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2431,
        0
      ],
      [
        2433,
        0
      ]
    ]
  ],
  [
    2438,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2437,
        0
      ],
      [
        2434,
        0
      ]
    ]
  ],
  [
    2439,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2438,
        0
      ]
    ]
  ],
  [
    2444,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5538,
        0
      ]
    ]
  ],
  [
    5832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5830,
        0
      ]
    ]
  ],
  [
    2442,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5832,
        0
      ]
    ]
  ],
  [
    2445,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2442,
        0
      ],
      [
        2444,
        0
      ]
    ]
  ],
  [
    2446,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2445,
        0
      ]
    ]
  ],
  [
    2453,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5539,
        0
      ]
    ]
  ],
  [
    2447,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2442,
        0
      ]
    ]
  ],
  [
    2450,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2447,
        0
      ]
    ]
  ],
  [
    2448,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2447,
        0
      ]
    ]
  ],
  [
    2449,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2448,
        0
      ]
    ]
  ],
  [
    2451,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2449,
        0
      ],
      [
        2450,
        0
      ]
    ]
  ],
  [
    2454,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2451,
        0
      ],
      [
        2453,
        0
      ]
    ]
  ],
  [
    2455,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2446,
        0
      ],
      [
        2454,
        0
      ]
    ]
  ],
  [
    2460,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2455,
        0
      ],
      [
        2439,
        0
      ]
    ]
  ],
  [
    2463,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2460,
        0
      ],
      [
        2462,
        0
      ]
    ]
  ],
  [
    2466,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2463,
        0
      ],
      [
        2465,
        0
      ]
    ]
  ],
  [
    6144,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2466,
        0
      ]
    ]
  ],
  [
    6145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2466,
        0
      ],
      [
        6144,
        0
      ]
    ]
  ],
  [
    6146,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6145,
        0
      ]
    ]
  ],
  [
    6147,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6145,
        0
      ],
      [
        6146,
        0
      ]
    ]
  ],
  [
    2476,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6147,
        0
      ],
      [
        2471,
        0
      ]
    ]
  ],
  [
    2478,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2476,
        0
      ]
    ]
  ],
  [
    2479,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2478,
        0
      ]
    ]
  ],
  [
    2480,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2479,
        0
      ],
      [
        1526,
        0
      ]
    ]
  ],
  [
    2481,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2410,
        0
      ],
      [
        2480,
        0
      ]
    ]
  ],
  [
    1524,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1132,
        0
      ]
    ]
  ],
  [
    1525,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1131,
        0
      ]
    ]
  ],
  [
    2498,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1130,
        0
      ]
    ]
  ],
  [
    5834,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2498,
        0
      ],
      [
        1525,
        0
      ]
    ]
  ],
  [
    2495,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1134,
        0
      ]
    ]
  ],
  [
    2489,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5541,
        0
      ]
    ]
  ],
  [
    2485,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2484,
        0
      ]
    ]
  ],
  [
    2482,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2481,
        0
      ],
      [
        2481,
        0
      ]
    ]
  ],
  [
    2483,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2482,
        0
      ]
    ]
  ],
  [
    2486,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2483,
        0
      ],
      [
        2485,
        0
      ]
    ]
  ],
  [
    2487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2486,
        0
      ]
    ]
  ],
  [
    2490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2487,
        0
      ],
      [
        2489,
        0
      ]
    ]
  ],
  [
    2491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2490,
        0
      ]
    ]
  ],
  [
    2492,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2491,
        0
      ]
    ]
  ],
  [
    2493,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2492,
        0
      ]
    ]
  ],
  [
    2494,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2481,
        0
      ],
      [
        2493,
        0
      ]
    ]
  ],
  [
    2496,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2495,
        0
      ],
      [
        2494,
        0
      ]
    ]
  ],
  [
    5835,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2496,
        0
      ],
      [
        5834,
        0
      ]
    ]
  ],
  [
    5837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5835,
        0
      ]
    ]
  ],
  [
    5836,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5835,
        0
      ]
    ]
  ],
  [
    2500,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5836,
        0
      ]
    ]
  ],
  [
    2501,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5836,
        0
      ],
      [
        2500,
        0
      ]
    ]
  ],
  [
    2502,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2501,
        0
      ],
      [
        5837,
        0
      ]
    ]
  ],
  [
    2503,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2502,
        0
      ],
      [
        1524,
        0
      ]
    ]
  ],
  [
    2504,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2481,
        0
      ],
      [
        2503,
        0
      ]
    ]
  ],
  [
    1522,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1138,
        0
      ]
    ]
  ],
  [
    2562,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1137,
        0
      ]
    ]
  ],
  [
    2534,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1135,
        0
      ]
    ]
  ],
  [
    1523,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1136,
        0
      ]
    ]
  ],
  [
    5838,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1523,
        0
      ],
      [
        2534,
        0
      ],
      [
        2562,
        0
      ]
    ]
  ],
  [
    2518,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1142,
        0
      ]
    ]
  ],
  [
    2512,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5542,
        0
      ]
    ]
  ],
  [
    2508,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2507,
        0
      ]
    ]
  ],
  [
    2505,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2504,
        0
      ],
      [
        2504,
        0
      ]
    ]
  ],
  [
    2506,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2505,
        0
      ]
    ]
  ],
  [
    2509,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2506,
        0
      ],
      [
        2508,
        0
      ]
    ]
  ],
  [
    2510,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2509,
        0
      ]
    ]
  ],
  [
    2513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2510,
        0
      ],
      [
        2512,
        0
      ]
    ]
  ],
  [
    2514,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2513,
        0
      ]
    ]
  ],
  [
    2515,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2514,
        0
      ]
    ]
  ],
  [
    2516,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2515,
        0
      ]
    ]
  ],
  [
    2517,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2504,
        0
      ],
      [
        2516,
        0
      ]
    ]
  ],
  [
    2519,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2518,
        0
      ],
      [
        2517,
        0
      ]
    ]
  ],
  [
    5839,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2519,
        0
      ],
      [
        5838,
        0
      ]
    ]
  ],
  [
    5842,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5839,
        0
      ]
    ]
  ],
  [
    2564,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5842,
        0
      ]
    ]
  ],
  [
    2565,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2564,
        0
      ]
    ]
  ],
  [
    2559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5547,
        0
      ]
    ]
  ],
  [
    2556,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        174,
        0
      ]
    ]
  ],
  [
    2530,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5544,
        0
      ]
    ]
  ],
  [
    5840,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5839,
        0
      ]
    ]
  ],
  [
    2521,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5840,
        0
      ]
    ]
  ],
  [
    2531,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2521,
        0
      ],
      [
        2530,
        0
      ]
    ]
  ],
  [
    2527,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5543,
        0
      ]
    ]
  ],
  [
    2524,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2521,
        0
      ]
    ]
  ],
  [
    2522,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2521,
        0
      ]
    ]
  ],
  [
    2523,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2522,
        0
      ]
    ]
  ],
  [
    2525,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2523,
        0
      ],
      [
        2524,
        0
      ]
    ]
  ],
  [
    2528,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2525,
        0
      ],
      [
        2527,
        0
      ]
    ]
  ],
  [
    2532,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2531,
        0
      ],
      [
        2528,
        0
      ]
    ]
  ],
  [
    2533,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2532,
        0
      ]
    ]
  ],
  [
    2538,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5545,
        0
      ]
    ]
  ],
  [
    5841,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5839,
        0
      ]
    ]
  ],
  [
    2536,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5841,
        0
      ]
    ]
  ],
  [
    2539,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2536,
        0
      ],
      [
        2538,
        0
      ]
    ]
  ],
  [
    2540,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2539,
        0
      ]
    ]
  ],
  [
    2547,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5546,
        0
      ]
    ]
  ],
  [
    2541,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2536,
        0
      ]
    ]
  ],
  [
    2544,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2541,
        0
      ]
    ]
  ],
  [
    2542,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2541,
        0
      ]
    ]
  ],
  [
    2543,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2542,
        0
      ]
    ]
  ],
  [
    2545,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2543,
        0
      ],
      [
        2544,
        0
      ]
    ]
  ],
  [
    2548,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2545,
        0
      ],
      [
        2547,
        0
      ]
    ]
  ],
  [
    2549,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2540,
        0
      ],
      [
        2548,
        0
      ]
    ]
  ],
  [
    2554,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2549,
        0
      ],
      [
        2533,
        0
      ]
    ]
  ],
  [
    2557,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2554,
        0
      ],
      [
        2556,
        0
      ]
    ]
  ],
  [
    2560,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2557,
        0
      ],
      [
        2559,
        0
      ]
    ]
  ],
  [
    6148,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2560,
        0
      ]
    ]
  ],
  [
    6149,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2560,
        0
      ],
      [
        6148,
        0
      ]
    ]
  ],
  [
    6150,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6149,
        0
      ]
    ]
  ],
  [
    6151,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6149,
        0
      ],
      [
        6150,
        0
      ]
    ]
  ],
  [
    2570,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6151,
        0
      ],
      [
        2565,
        0
      ]
    ]
  ],
  [
    2572,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2570,
        0
      ]
    ]
  ],
  [
    2573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2572,
        0
      ]
    ]
  ],
  [
    2574,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2573,
        0
      ],
      [
        1522,
        0
      ]
    ]
  ],
  [
    2575,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2504,
        0
      ],
      [
        2574,
        0
      ]
    ]
  ],
  [
    1520,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1141,
        0
      ]
    ]
  ],
  [
    1521,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1140,
        0
      ]
    ]
  ],
  [
    2592,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1139,
        0
      ]
    ]
  ],
  [
    5843,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2592,
        0
      ],
      [
        1521,
        0
      ]
    ]
  ],
  [
    2589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1143,
        0
      ]
    ]
  ],
  [
    2583,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5548,
        0
      ]
    ]
  ],
  [
    2579,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2578,
        0
      ]
    ]
  ],
  [
    2576,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2575,
        0
      ],
      [
        2575,
        0
      ]
    ]
  ],
  [
    2577,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2576,
        0
      ]
    ]
  ],
  [
    2580,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2577,
        0
      ],
      [
        2579,
        0
      ]
    ]
  ],
  [
    2581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2580,
        0
      ]
    ]
  ],
  [
    2584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2581,
        0
      ],
      [
        2583,
        0
      ]
    ]
  ],
  [
    2585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2584,
        0
      ]
    ]
  ],
  [
    2586,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2585,
        0
      ]
    ]
  ],
  [
    2587,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2586,
        0
      ]
    ]
  ],
  [
    2588,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2575,
        0
      ],
      [
        2587,
        0
      ]
    ]
  ],
  [
    2590,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2589,
        0
      ],
      [
        2588,
        0
      ]
    ]
  ],
  [
    5844,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2590,
        0
      ],
      [
        5843,
        0
      ]
    ]
  ],
  [
    5846,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5844,
        0
      ]
    ]
  ],
  [
    5845,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5844,
        0
      ]
    ]
  ],
  [
    2594,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5845,
        0
      ]
    ]
  ],
  [
    2595,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5845,
        0
      ],
      [
        2594,
        0
      ]
    ]
  ],
  [
    2596,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2595,
        0
      ],
      [
        5846,
        0
      ]
    ]
  ],
  [
    2597,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2596,
        0
      ],
      [
        1520,
        0
      ]
    ]
  ],
  [
    2598,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2575,
        0
      ],
      [
        2597,
        0
      ]
    ]
  ],
  [
    1518,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1147,
        0
      ]
    ]
  ],
  [
    2656,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1146,
        0
      ]
    ]
  ],
  [
    2628,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1144,
        0
      ]
    ]
  ],
  [
    1519,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1145,
        0
      ]
    ]
  ],
  [
    5847,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1519,
        0
      ],
      [
        2628,
        0
      ],
      [
        2656,
        0
      ]
    ]
  ],
  [
    2612,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1151,
        0
      ]
    ]
  ],
  [
    2606,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5549,
        0
      ]
    ]
  ],
  [
    2602,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2601,
        0
      ]
    ]
  ],
  [
    2599,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2598,
        0
      ],
      [
        2598,
        0
      ]
    ]
  ],
  [
    2600,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2599,
        0
      ]
    ]
  ],
  [
    2603,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2600,
        0
      ],
      [
        2602,
        0
      ]
    ]
  ],
  [
    2604,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2603,
        0
      ]
    ]
  ],
  [
    2607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2604,
        0
      ],
      [
        2606,
        0
      ]
    ]
  ],
  [
    2608,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2607,
        0
      ]
    ]
  ],
  [
    2609,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2608,
        0
      ]
    ]
  ],
  [
    2610,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2609,
        0
      ]
    ]
  ],
  [
    2611,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2598,
        0
      ],
      [
        2610,
        0
      ]
    ]
  ],
  [
    2613,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2612,
        0
      ],
      [
        2611,
        0
      ]
    ]
  ],
  [
    5848,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2613,
        0
      ],
      [
        5847,
        0
      ]
    ]
  ],
  [
    5851,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5848,
        0
      ]
    ]
  ],
  [
    2658,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5851,
        0
      ]
    ]
  ],
  [
    2659,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2658,
        0
      ]
    ]
  ],
  [
    2653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5554,
        0
      ]
    ]
  ],
  [
    2650,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        188,
        0
      ]
    ]
  ],
  [
    2624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5551,
        0
      ]
    ]
  ],
  [
    5849,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5848,
        0
      ]
    ]
  ],
  [
    2615,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5849,
        0
      ]
    ]
  ],
  [
    2625,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2615,
        0
      ],
      [
        2624,
        0
      ]
    ]
  ],
  [
    2621,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5550,
        0
      ]
    ]
  ],
  [
    2618,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2615,
        0
      ]
    ]
  ],
  [
    2616,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2615,
        0
      ]
    ]
  ],
  [
    2617,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2616,
        0
      ]
    ]
  ],
  [
    2619,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2617,
        0
      ],
      [
        2618,
        0
      ]
    ]
  ],
  [
    2622,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2619,
        0
      ],
      [
        2621,
        0
      ]
    ]
  ],
  [
    2626,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2625,
        0
      ],
      [
        2622,
        0
      ]
    ]
  ],
  [
    2627,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2626,
        0
      ]
    ]
  ],
  [
    2632,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5552,
        0
      ]
    ]
  ],
  [
    5850,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5848,
        0
      ]
    ]
  ],
  [
    2630,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5850,
        0
      ]
    ]
  ],
  [
    2633,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2630,
        0
      ],
      [
        2632,
        0
      ]
    ]
  ],
  [
    2634,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2633,
        0
      ]
    ]
  ],
  [
    2641,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5553,
        0
      ]
    ]
  ],
  [
    2635,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2630,
        0
      ]
    ]
  ],
  [
    2638,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2635,
        0
      ]
    ]
  ],
  [
    2636,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2635,
        0
      ]
    ]
  ],
  [
    2637,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2636,
        0
      ]
    ]
  ],
  [
    2639,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2637,
        0
      ],
      [
        2638,
        0
      ]
    ]
  ],
  [
    2642,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2639,
        0
      ],
      [
        2641,
        0
      ]
    ]
  ],
  [
    2643,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2634,
        0
      ],
      [
        2642,
        0
      ]
    ]
  ],
  [
    2648,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2643,
        0
      ],
      [
        2627,
        0
      ]
    ]
  ],
  [
    2651,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2648,
        0
      ],
      [
        2650,
        0
      ]
    ]
  ],
  [
    2654,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2651,
        0
      ],
      [
        2653,
        0
      ]
    ]
  ],
  [
    6152,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2654,
        0
      ]
    ]
  ],
  [
    6153,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2654,
        0
      ],
      [
        6152,
        0
      ]
    ]
  ],
  [
    6154,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6153,
        0
      ]
    ]
  ],
  [
    6155,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6153,
        0
      ],
      [
        6154,
        0
      ]
    ]
  ],
  [
    2664,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6155,
        0
      ],
      [
        2659,
        0
      ]
    ]
  ],
  [
    2666,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2664,
        0
      ]
    ]
  ],
  [
    2667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2666,
        0
      ]
    ]
  ],
  [
    2668,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2667,
        0
      ],
      [
        1518,
        0
      ]
    ]
  ],
  [
    2669,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2598,
        0
      ],
      [
        2668,
        0
      ]
    ]
  ],
  [
    1516,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1150,
        0
      ]
    ]
  ],
  [
    1517,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1149,
        0
      ]
    ]
  ],
  [
    2686,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1148,
        0
      ]
    ]
  ],
  [
    5852,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2686,
        0
      ],
      [
        1517,
        0
      ]
    ]
  ],
  [
    2683,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1152,
        0
      ]
    ]
  ],
  [
    2677,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5555,
        0
      ]
    ]
  ],
  [
    2673,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2672,
        0
      ]
    ]
  ],
  [
    2670,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2669,
        0
      ],
      [
        2669,
        0
      ]
    ]
  ],
  [
    2671,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2670,
        0
      ]
    ]
  ],
  [
    2674,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2671,
        0
      ],
      [
        2673,
        0
      ]
    ]
  ],
  [
    2675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2674,
        0
      ]
    ]
  ],
  [
    2678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2675,
        0
      ],
      [
        2677,
        0
      ]
    ]
  ],
  [
    2679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2678,
        0
      ]
    ]
  ],
  [
    2680,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2679,
        0
      ]
    ]
  ],
  [
    2681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2680,
        0
      ]
    ]
  ],
  [
    2682,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2669,
        0
      ],
      [
        2681,
        0
      ]
    ]
  ],
  [
    2684,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2683,
        0
      ],
      [
        2682,
        0
      ]
    ]
  ],
  [
    5853,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2684,
        0
      ],
      [
        5852,
        0
      ]
    ]
  ],
  [
    5855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5853,
        0
      ]
    ]
  ],
  [
    5854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5853,
        0
      ]
    ]
  ],
  [
    2688,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5854,
        0
      ]
    ]
  ],
  [
    2689,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5854,
        0
      ],
      [
        2688,
        0
      ]
    ]
  ],
  [
    2690,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2689,
        0
      ],
      [
        5855,
        0
      ]
    ]
  ],
  [
    2691,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2690,
        0
      ],
      [
        1516,
        0
      ]
    ]
  ],
  [
    2692,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2669,
        0
      ],
      [
        2691,
        0
      ]
    ]
  ],
  [
    1514,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1156,
        0
      ]
    ]
  ],
  [
    2750,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1155,
        0
      ]
    ]
  ],
  [
    2722,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1153,
        0
      ]
    ]
  ],
  [
    1515,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1154,
        0
      ]
    ]
  ],
  [
    5856,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1515,
        0
      ],
      [
        2722,
        0
      ],
      [
        2750,
        0
      ]
    ]
  ],
  [
    2706,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1160,
        0
      ]
    ]
  ],
  [
    2700,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5556,
        0
      ]
    ]
  ],
  [
    2696,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2695,
        0
      ]
    ]
  ],
  [
    2693,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2692,
        0
      ],
      [
        2692,
        0
      ]
    ]
  ],
  [
    2694,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2693,
        0
      ]
    ]
  ],
  [
    2697,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2694,
        0
      ],
      [
        2696,
        0
      ]
    ]
  ],
  [
    2698,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2697,
        0
      ]
    ]
  ],
  [
    2701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2698,
        0
      ],
      [
        2700,
        0
      ]
    ]
  ],
  [
    2702,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2701,
        0
      ]
    ]
  ],
  [
    2703,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2702,
        0
      ]
    ]
  ],
  [
    2704,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2703,
        0
      ]
    ]
  ],
  [
    2705,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2692,
        0
      ],
      [
        2704,
        0
      ]
    ]
  ],
  [
    2707,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2706,
        0
      ],
      [
        2705,
        0
      ]
    ]
  ],
  [
    5857,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2707,
        0
      ],
      [
        5856,
        0
      ]
    ]
  ],
  [
    5860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5857,
        0
      ]
    ]
  ],
  [
    2752,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5860,
        0
      ]
    ]
  ],
  [
    2753,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2752,
        0
      ]
    ]
  ],
  [
    2747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5561,
        0
      ]
    ]
  ],
  [
    2744,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        202,
        0
      ]
    ]
  ],
  [
    2718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5558,
        0
      ]
    ]
  ],
  [
    5858,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5857,
        0
      ]
    ]
  ],
  [
    2709,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5858,
        0
      ]
    ]
  ],
  [
    2719,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2709,
        0
      ],
      [
        2718,
        0
      ]
    ]
  ],
  [
    2715,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5557,
        0
      ]
    ]
  ],
  [
    2712,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2709,
        0
      ]
    ]
  ],
  [
    2710,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2709,
        0
      ]
    ]
  ],
  [
    2711,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2710,
        0
      ]
    ]
  ],
  [
    2713,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2711,
        0
      ],
      [
        2712,
        0
      ]
    ]
  ],
  [
    2716,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2713,
        0
      ],
      [
        2715,
        0
      ]
    ]
  ],
  [
    2720,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2719,
        0
      ],
      [
        2716,
        0
      ]
    ]
  ],
  [
    2721,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2720,
        0
      ]
    ]
  ],
  [
    2726,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5559,
        0
      ]
    ]
  ],
  [
    5859,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5857,
        0
      ]
    ]
  ],
  [
    2724,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5859,
        0
      ]
    ]
  ],
  [
    2727,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2724,
        0
      ],
      [
        2726,
        0
      ]
    ]
  ],
  [
    2728,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2727,
        0
      ]
    ]
  ],
  [
    2735,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5560,
        0
      ]
    ]
  ],
  [
    2729,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2724,
        0
      ]
    ]
  ],
  [
    2732,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2729,
        0
      ]
    ]
  ],
  [
    2730,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2729,
        0
      ]
    ]
  ],
  [
    2731,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2730,
        0
      ]
    ]
  ],
  [
    2733,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2731,
        0
      ],
      [
        2732,
        0
      ]
    ]
  ],
  [
    2736,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2733,
        0
      ],
      [
        2735,
        0
      ]
    ]
  ],
  [
    2737,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2728,
        0
      ],
      [
        2736,
        0
      ]
    ]
  ],
  [
    2742,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2737,
        0
      ],
      [
        2721,
        0
      ]
    ]
  ],
  [
    2745,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2742,
        0
      ],
      [
        2744,
        0
      ]
    ]
  ],
  [
    2748,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2745,
        0
      ],
      [
        2747,
        0
      ]
    ]
  ],
  [
    6156,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2748,
        0
      ]
    ]
  ],
  [
    6157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2748,
        0
      ],
      [
        6156,
        0
      ]
    ]
  ],
  [
    6158,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6157,
        0
      ]
    ]
  ],
  [
    6159,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6157,
        0
      ],
      [
        6158,
        0
      ]
    ]
  ],
  [
    2758,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6159,
        0
      ],
      [
        2753,
        0
      ]
    ]
  ],
  [
    2760,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2758,
        0
      ]
    ]
  ],
  [
    2761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2760,
        0
      ]
    ]
  ],
  [
    2762,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2761,
        0
      ],
      [
        1514,
        0
      ]
    ]
  ],
  [
    2763,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2692,
        0
      ],
      [
        2762,
        0
      ]
    ]
  ],
  [
    1512,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1159,
        0
      ]
    ]
  ],
  [
    1513,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1158,
        0
      ]
    ]
  ],
  [
    2780,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1157,
        0
      ]
    ]
  ],
  [
    5861,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2780,
        0
      ],
      [
        1513,
        0
      ]
    ]
  ],
  [
    2777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1161,
        0
      ]
    ]
  ],
  [
    2771,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5562,
        0
      ]
    ]
  ],
  [
    2767,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2766,
        0
      ]
    ]
  ],
  [
    2764,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2763,
        0
      ],
      [
        2763,
        0
      ]
    ]
  ],
  [
    2765,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2764,
        0
      ]
    ]
  ],
  [
    2768,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2765,
        0
      ],
      [
        2767,
        0
      ]
    ]
  ],
  [
    2769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2768,
        0
      ]
    ]
  ],
  [
    2772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2769,
        0
      ],
      [
        2771,
        0
      ]
    ]
  ],
  [
    2773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2772,
        0
      ]
    ]
  ],
  [
    2774,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2773,
        0
      ]
    ]
  ],
  [
    2775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2774,
        0
      ]
    ]
  ],
  [
    2776,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2763,
        0
      ],
      [
        2775,
        0
      ]
    ]
  ],
  [
    2778,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2777,
        0
      ],
      [
        2776,
        0
      ]
    ]
  ],
  [
    5862,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2778,
        0
      ],
      [
        5861,
        0
      ]
    ]
  ],
  [
    5864,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5862,
        0
      ]
    ]
  ],
  [
    5863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5862,
        0
      ]
    ]
  ],
  [
    2782,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5863,
        0
      ]
    ]
  ],
  [
    2783,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5863,
        0
      ],
      [
        2782,
        0
      ]
    ]
  ],
  [
    2784,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2783,
        0
      ],
      [
        5864,
        0
      ]
    ]
  ],
  [
    2785,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2784,
        0
      ],
      [
        1512,
        0
      ]
    ]
  ],
  [
    2786,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2763,
        0
      ],
      [
        2785,
        0
      ]
    ]
  ],
  [
    1510,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1165,
        0
      ]
    ]
  ],
  [
    2844,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1164,
        0
      ]
    ]
  ],
  [
    2816,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1162,
        0
      ]
    ]
  ],
  [
    1511,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1163,
        0
      ]
    ]
  ],
  [
    5865,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1511,
        0
      ],
      [
        2816,
        0
      ],
      [
        2844,
        0
      ]
    ]
  ],
  [
    2800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1169,
        0
      ]
    ]
  ],
  [
    2794,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5563,
        0
      ]
    ]
  ],
  [
    2790,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2789,
        0
      ]
    ]
  ],
  [
    2787,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2786,
        0
      ],
      [
        2786,
        0
      ]
    ]
  ],
  [
    2788,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2787,
        0
      ]
    ]
  ],
  [
    2791,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2788,
        0
      ],
      [
        2790,
        0
      ]
    ]
  ],
  [
    2792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2791,
        0
      ]
    ]
  ],
  [
    2795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2792,
        0
      ],
      [
        2794,
        0
      ]
    ]
  ],
  [
    2796,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2795,
        0
      ]
    ]
  ],
  [
    2797,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2796,
        0
      ]
    ]
  ],
  [
    2798,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2797,
        0
      ]
    ]
  ],
  [
    2799,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2786,
        0
      ],
      [
        2798,
        0
      ]
    ]
  ],
  [
    2801,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2800,
        0
      ],
      [
        2799,
        0
      ]
    ]
  ],
  [
    5866,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2801,
        0
      ],
      [
        5865,
        0
      ]
    ]
  ],
  [
    5869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5866,
        0
      ]
    ]
  ],
  [
    2846,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5869,
        0
      ]
    ]
  ],
  [
    2847,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2846,
        0
      ]
    ]
  ],
  [
    2841,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5568,
        0
      ]
    ]
  ],
  [
    2838,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        216,
        0
      ]
    ]
  ],
  [
    2812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5565,
        0
      ]
    ]
  ],
  [
    5867,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5866,
        0
      ]
    ]
  ],
  [
    2803,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5867,
        0
      ]
    ]
  ],
  [
    2813,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2803,
        0
      ],
      [
        2812,
        0
      ]
    ]
  ],
  [
    2809,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5564,
        0
      ]
    ]
  ],
  [
    2806,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2803,
        0
      ]
    ]
  ],
  [
    2804,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2803,
        0
      ]
    ]
  ],
  [
    2805,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2804,
        0
      ]
    ]
  ],
  [
    2807,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2805,
        0
      ],
      [
        2806,
        0
      ]
    ]
  ],
  [
    2810,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2807,
        0
      ],
      [
        2809,
        0
      ]
    ]
  ],
  [
    2814,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2813,
        0
      ],
      [
        2810,
        0
      ]
    ]
  ],
  [
    2815,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2814,
        0
      ]
    ]
  ],
  [
    2820,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5566,
        0
      ]
    ]
  ],
  [
    5868,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5866,
        0
      ]
    ]
  ],
  [
    2818,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5868,
        0
      ]
    ]
  ],
  [
    2821,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2818,
        0
      ],
      [
        2820,
        0
      ]
    ]
  ],
  [
    2822,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2821,
        0
      ]
    ]
  ],
  [
    2829,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5567,
        0
      ]
    ]
  ],
  [
    2823,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2818,
        0
      ]
    ]
  ],
  [
    2826,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2823,
        0
      ]
    ]
  ],
  [
    2824,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2823,
        0
      ]
    ]
  ],
  [
    2825,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2824,
        0
      ]
    ]
  ],
  [
    2827,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2825,
        0
      ],
      [
        2826,
        0
      ]
    ]
  ],
  [
    2830,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2827,
        0
      ],
      [
        2829,
        0
      ]
    ]
  ],
  [
    2831,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2822,
        0
      ],
      [
        2830,
        0
      ]
    ]
  ],
  [
    2836,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2831,
        0
      ],
      [
        2815,
        0
      ]
    ]
  ],
  [
    2839,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2836,
        0
      ],
      [
        2838,
        0
      ]
    ]
  ],
  [
    2842,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2839,
        0
      ],
      [
        2841,
        0
      ]
    ]
  ],
  [
    6160,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2842,
        0
      ]
    ]
  ],
  [
    6161,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2842,
        0
      ],
      [
        6160,
        0
      ]
    ]
  ],
  [
    6162,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6161,
        0
      ]
    ]
  ],
  [
    6163,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6161,
        0
      ],
      [
        6162,
        0
      ]
    ]
  ],
  [
    2852,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6163,
        0
      ],
      [
        2847,
        0
      ]
    ]
  ],
  [
    2854,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2852,
        0
      ]
    ]
  ],
  [
    2855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2854,
        0
      ]
    ]
  ],
  [
    2856,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2855,
        0
      ],
      [
        1510,
        0
      ]
    ]
  ],
  [
    2857,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2786,
        0
      ],
      [
        2856,
        0
      ]
    ]
  ],
  [
    1508,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1168,
        0
      ]
    ]
  ],
  [
    1509,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1167,
        0
      ]
    ]
  ],
  [
    2874,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1166,
        0
      ]
    ]
  ],
  [
    5870,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2874,
        0
      ],
      [
        1509,
        0
      ]
    ]
  ],
  [
    2871,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1170,
        0
      ]
    ]
  ],
  [
    2865,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5569,
        0
      ]
    ]
  ],
  [
    2861,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2860,
        0
      ]
    ]
  ],
  [
    2858,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2857,
        0
      ],
      [
        2857,
        0
      ]
    ]
  ],
  [
    2859,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2858,
        0
      ]
    ]
  ],
  [
    2862,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2859,
        0
      ],
      [
        2861,
        0
      ]
    ]
  ],
  [
    2863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2862,
        0
      ]
    ]
  ],
  [
    2866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2863,
        0
      ],
      [
        2865,
        0
      ]
    ]
  ],
  [
    2867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2866,
        0
      ]
    ]
  ],
  [
    2868,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2867,
        0
      ]
    ]
  ],
  [
    2869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2868,
        0
      ]
    ]
  ],
  [
    2870,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2857,
        0
      ],
      [
        2869,
        0
      ]
    ]
  ],
  [
    2872,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2871,
        0
      ],
      [
        2870,
        0
      ]
    ]
  ],
  [
    5871,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2872,
        0
      ],
      [
        5870,
        0
      ]
    ]
  ],
  [
    5873,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5871,
        0
      ]
    ]
  ],
  [
    5872,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5871,
        0
      ]
    ]
  ],
  [
    2876,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5872,
        0
      ]
    ]
  ],
  [
    2877,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5872,
        0
      ],
      [
        2876,
        0
      ]
    ]
  ],
  [
    2878,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2877,
        0
      ],
      [
        5873,
        0
      ]
    ]
  ],
  [
    2879,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2878,
        0
      ],
      [
        1508,
        0
      ]
    ]
  ],
  [
    2880,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2857,
        0
      ],
      [
        2879,
        0
      ]
    ]
  ],
  [
    1506,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1174,
        0
      ]
    ]
  ],
  [
    2938,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1173,
        0
      ]
    ]
  ],
  [
    2910,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1171,
        0
      ]
    ]
  ],
  [
    1507,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1172,
        0
      ]
    ]
  ],
  [
    5874,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1507,
        0
      ],
      [
        2910,
        0
      ],
      [
        2938,
        0
      ]
    ]
  ],
  [
    2894,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1178,
        0
      ]
    ]
  ],
  [
    2888,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5570,
        0
      ]
    ]
  ],
  [
    2884,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2883,
        0
      ]
    ]
  ],
  [
    2881,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2880,
        0
      ],
      [
        2880,
        0
      ]
    ]
  ],
  [
    2882,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2881,
        0
      ]
    ]
  ],
  [
    2885,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2882,
        0
      ],
      [
        2884,
        0
      ]
    ]
  ],
  [
    2886,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2885,
        0
      ]
    ]
  ],
  [
    2889,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2886,
        0
      ],
      [
        2888,
        0
      ]
    ]
  ],
  [
    2890,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2889,
        0
      ]
    ]
  ],
  [
    2891,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2890,
        0
      ]
    ]
  ],
  [
    2892,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2891,
        0
      ]
    ]
  ],
  [
    2893,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2880,
        0
      ],
      [
        2892,
        0
      ]
    ]
  ],
  [
    2895,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2894,
        0
      ],
      [
        2893,
        0
      ]
    ]
  ],
  [
    5875,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2895,
        0
      ],
      [
        5874,
        0
      ]
    ]
  ],
  [
    5878,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5875,
        0
      ]
    ]
  ],
  [
    2940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5878,
        0
      ]
    ]
  ],
  [
    2941,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2940,
        0
      ]
    ]
  ],
  [
    2935,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5575,
        0
      ]
    ]
  ],
  [
    2932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        230,
        0
      ]
    ]
  ],
  [
    2906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5572,
        0
      ]
    ]
  ],
  [
    5876,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5875,
        0
      ]
    ]
  ],
  [
    2897,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5876,
        0
      ]
    ]
  ],
  [
    2907,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2897,
        0
      ],
      [
        2906,
        0
      ]
    ]
  ],
  [
    2903,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5571,
        0
      ]
    ]
  ],
  [
    2900,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2897,
        0
      ]
    ]
  ],
  [
    2898,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2897,
        0
      ]
    ]
  ],
  [
    2899,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2898,
        0
      ]
    ]
  ],
  [
    2901,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2899,
        0
      ],
      [
        2900,
        0
      ]
    ]
  ],
  [
    2904,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2901,
        0
      ],
      [
        2903,
        0
      ]
    ]
  ],
  [
    2908,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2907,
        0
      ],
      [
        2904,
        0
      ]
    ]
  ],
  [
    2909,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2908,
        0
      ]
    ]
  ],
  [
    2914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5573,
        0
      ]
    ]
  ],
  [
    5877,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5875,
        0
      ]
    ]
  ],
  [
    2912,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5877,
        0
      ]
    ]
  ],
  [
    2915,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2912,
        0
      ],
      [
        2914,
        0
      ]
    ]
  ],
  [
    2916,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2915,
        0
      ]
    ]
  ],
  [
    2923,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5574,
        0
      ]
    ]
  ],
  [
    2917,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2912,
        0
      ]
    ]
  ],
  [
    2920,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2917,
        0
      ]
    ]
  ],
  [
    2918,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2917,
        0
      ]
    ]
  ],
  [
    2919,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2918,
        0
      ]
    ]
  ],
  [
    2921,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2919,
        0
      ],
      [
        2920,
        0
      ]
    ]
  ],
  [
    2924,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2921,
        0
      ],
      [
        2923,
        0
      ]
    ]
  ],
  [
    2925,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2916,
        0
      ],
      [
        2924,
        0
      ]
    ]
  ],
  [
    2930,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2925,
        0
      ],
      [
        2909,
        0
      ]
    ]
  ],
  [
    2933,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2930,
        0
      ],
      [
        2932,
        0
      ]
    ]
  ],
  [
    2936,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2933,
        0
      ],
      [
        2935,
        0
      ]
    ]
  ],
  [
    6164,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2936,
        0
      ]
    ]
  ],
  [
    6165,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2936,
        0
      ],
      [
        6164,
        0
      ]
    ]
  ],
  [
    6166,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6165,
        0
      ]
    ]
  ],
  [
    6167,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6165,
        0
      ],
      [
        6166,
        0
      ]
    ]
  ],
  [
    2946,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6167,
        0
      ],
      [
        2941,
        0
      ]
    ]
  ],
  [
    2948,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2946,
        0
      ]
    ]
  ],
  [
    2949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2948,
        0
      ]
    ]
  ],
  [
    2950,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2949,
        0
      ],
      [
        1506,
        0
      ]
    ]
  ],
  [
    2951,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2880,
        0
      ],
      [
        2950,
        0
      ]
    ]
  ],
  [
    1504,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1177,
        0
      ]
    ]
  ],
  [
    1505,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1176,
        0
      ]
    ]
  ],
  [
    2968,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1175,
        0
      ]
    ]
  ],
  [
    5879,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2968,
        0
      ],
      [
        1505,
        0
      ]
    ]
  ],
  [
    2965,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1179,
        0
      ]
    ]
  ],
  [
    2959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5576,
        0
      ]
    ]
  ],
  [
    2955,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2954,
        0
      ]
    ]
  ],
  [
    2952,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2951,
        0
      ],
      [
        2951,
        0
      ]
    ]
  ],
  [
    2953,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2952,
        0
      ]
    ]
  ],
  [
    2956,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2953,
        0
      ],
      [
        2955,
        0
      ]
    ]
  ],
  [
    2957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2956,
        0
      ]
    ]
  ],
  [
    2960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2957,
        0
      ],
      [
        2959,
        0
      ]
    ]
  ],
  [
    2961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2960,
        0
      ]
    ]
  ],
  [
    2962,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2961,
        0
      ]
    ]
  ],
  [
    2963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2962,
        0
      ]
    ]
  ],
  [
    2964,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2951,
        0
      ],
      [
        2963,
        0
      ]
    ]
  ],
  [
    2966,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2965,
        0
      ],
      [
        2964,
        0
      ]
    ]
  ],
  [
    5880,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2966,
        0
      ],
      [
        5879,
        0
      ]
    ]
  ],
  [
    5882,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5880,
        0
      ]
    ]
  ],
  [
    5881,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5880,
        0
      ]
    ]
  ],
  [
    2970,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5881,
        0
      ]
    ]
  ],
  [
    2971,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5881,
        0
      ],
      [
        2970,
        0
      ]
    ]
  ],
  [
    2972,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2971,
        0
      ],
      [
        5882,
        0
      ]
    ]
  ],
  [
    2973,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2972,
        0
      ],
      [
        1504,
        0
      ]
    ]
  ],
  [
    2974,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2951,
        0
      ],
      [
        2973,
        0
      ]
    ]
  ],
  [
    1502,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1183,
        0
      ]
    ]
  ],
  [
    3032,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1182,
        0
      ]
    ]
  ],
  [
    3004,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1180,
        0
      ]
    ]
  ],
  [
    1503,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1181,
        0
      ]
    ]
  ],
  [
    5883,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1503,
        0
      ],
      [
        3004,
        0
      ],
      [
        3032,
        0
      ]
    ]
  ],
  [
    2988,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1187,
        0
      ]
    ]
  ],
  [
    2982,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5577,
        0
      ]
    ]
  ],
  [
    2978,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2977,
        0
      ]
    ]
  ],
  [
    2975,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2974,
        0
      ],
      [
        2974,
        0
      ]
    ]
  ],
  [
    2976,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2975,
        0
      ]
    ]
  ],
  [
    2979,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2976,
        0
      ],
      [
        2978,
        0
      ]
    ]
  ],
  [
    2980,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2979,
        0
      ]
    ]
  ],
  [
    2983,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2980,
        0
      ],
      [
        2982,
        0
      ]
    ]
  ],
  [
    2984,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2983,
        0
      ]
    ]
  ],
  [
    2985,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2984,
        0
      ]
    ]
  ],
  [
    2986,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2985,
        0
      ]
    ]
  ],
  [
    2987,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2974,
        0
      ],
      [
        2986,
        0
      ]
    ]
  ],
  [
    2989,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2988,
        0
      ],
      [
        2987,
        0
      ]
    ]
  ],
  [
    5884,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2989,
        0
      ],
      [
        5883,
        0
      ]
    ]
  ],
  [
    5887,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5884,
        0
      ]
    ]
  ],
  [
    3034,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5887,
        0
      ]
    ]
  ],
  [
    3035,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3034,
        0
      ]
    ]
  ],
  [
    3029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5582,
        0
      ]
    ]
  ],
  [
    3026,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        244,
        0
      ]
    ]
  ],
  [
    3000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5520,
        0
      ]
    ]
  ],
  [
    5885,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5884,
        0
      ]
    ]
  ],
  [
    2991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5885,
        0
      ]
    ]
  ],
  [
    3001,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2991,
        0
      ],
      [
        3000,
        0
      ]
    ]
  ],
  [
    2997,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5519,
        0
      ]
    ]
  ],
  [
    2994,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2991,
        0
      ]
    ]
  ],
  [
    2992,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2991,
        0
      ]
    ]
  ],
  [
    2993,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2992,
        0
      ]
    ]
  ],
  [
    2995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2993,
        0
      ],
      [
        2994,
        0
      ]
    ]
  ],
  [
    2998,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2995,
        0
      ],
      [
        2997,
        0
      ]
    ]
  ],
  [
    3002,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3001,
        0
      ],
      [
        2998,
        0
      ]
    ]
  ],
  [
    3003,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3002,
        0
      ]
    ]
  ],
  [
    3008,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5580,
        0
      ]
    ]
  ],
  [
    5886,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5884,
        0
      ]
    ]
  ],
  [
    3006,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5886,
        0
      ]
    ]
  ],
  [
    3009,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3006,
        0
      ],
      [
        3008,
        0
      ]
    ]
  ],
  [
    3010,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3009,
        0
      ]
    ]
  ],
  [
    3017,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5581,
        0
      ]
    ]
  ],
  [
    3011,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3006,
        0
      ]
    ]
  ],
  [
    3014,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3011,
        0
      ]
    ]
  ],
  [
    3012,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3011,
        0
      ]
    ]
  ],
  [
    3013,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3012,
        0
      ]
    ]
  ],
  [
    3015,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3013,
        0
      ],
      [
        3014,
        0
      ]
    ]
  ],
  [
    3018,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3015,
        0
      ],
      [
        3017,
        0
      ]
    ]
  ],
  [
    3019,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3010,
        0
      ],
      [
        3018,
        0
      ]
    ]
  ],
  [
    3024,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3019,
        0
      ],
      [
        3003,
        0
      ]
    ]
  ],
  [
    3027,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3024,
        0
      ],
      [
        3026,
        0
      ]
    ]
  ],
  [
    3030,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3027,
        0
      ],
      [
        3029,
        0
      ]
    ]
  ],
  [
    6168,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3030,
        0
      ]
    ]
  ],
  [
    6169,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3030,
        0
      ],
      [
        6168,
        0
      ]
    ]
  ],
  [
    6170,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6169,
        0
      ]
    ]
  ],
  [
    6171,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6169,
        0
      ],
      [
        6170,
        0
      ]
    ]
  ],
  [
    3040,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6171,
        0
      ],
      [
        3035,
        0
      ]
    ]
  ],
  [
    3042,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3040,
        0
      ]
    ]
  ],
  [
    3043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3042,
        0
      ]
    ]
  ],
  [
    3044,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3043,
        0
      ],
      [
        1502,
        0
      ]
    ]
  ],
  [
    3045,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2974,
        0
      ],
      [
        3044,
        0
      ]
    ]
  ],
  [
    1500,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1186,
        0
      ]
    ]
  ],
  [
    1501,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1185,
        0
      ]
    ]
  ],
  [
    3062,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1184,
        0
      ]
    ]
  ],
  [
    5888,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3062,
        0
      ],
      [
        1501,
        0
      ]
    ]
  ],
  [
    3059,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1188,
        0
      ]
    ]
  ],
  [
    3053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5583,
        0
      ]
    ]
  ],
  [
    3049,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3048,
        0
      ]
    ]
  ],
  [
    3046,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3045,
        0
      ],
      [
        3045,
        0
      ]
    ]
  ],
  [
    3047,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3046,
        0
      ]
    ]
  ],
  [
    3050,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3047,
        0
      ],
      [
        3049,
        0
      ]
    ]
  ],
  [
    3051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3050,
        0
      ]
    ]
  ],
  [
    3054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3051,
        0
      ],
      [
        3053,
        0
      ]
    ]
  ],
  [
    3055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3054,
        0
      ]
    ]
  ],
  [
    3056,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3055,
        0
      ]
    ]
  ],
  [
    3057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3056,
        0
      ]
    ]
  ],
  [
    3058,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3045,
        0
      ],
      [
        3057,
        0
      ]
    ]
  ],
  [
    3060,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3059,
        0
      ],
      [
        3058,
        0
      ]
    ]
  ],
  [
    5889,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3060,
        0
      ],
      [
        5888,
        0
      ]
    ]
  ],
  [
    5891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5889,
        0
      ]
    ]
  ],
  [
    5890,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5889,
        0
      ]
    ]
  ],
  [
    3064,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5890,
        0
      ]
    ]
  ],
  [
    3065,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5890,
        0
      ],
      [
        3064,
        0
      ]
    ]
  ],
  [
    3066,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3065,
        0
      ],
      [
        5891,
        0
      ]
    ]
  ],
  [
    3067,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3066,
        0
      ],
      [
        1500,
        0
      ]
    ]
  ],
  [
    3068,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3045,
        0
      ],
      [
        3067,
        0
      ]
    ]
  ],
  [
    1498,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1192,
        0
      ]
    ]
  ],
  [
    3126,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1191,
        0
      ]
    ]
  ],
  [
    3098,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1189,
        0
      ]
    ]
  ],
  [
    1499,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1190,
        0
      ]
    ]
  ],
  [
    5892,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1499,
        0
      ],
      [
        3098,
        0
      ],
      [
        3126,
        0
      ]
    ]
  ],
  [
    3082,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1196,
        0
      ]
    ]
  ],
  [
    3076,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5584,
        0
      ]
    ]
  ],
  [
    3072,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3071,
        0
      ]
    ]
  ],
  [
    3069,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3068,
        0
      ],
      [
        3068,
        0
      ]
    ]
  ],
  [
    3070,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3069,
        0
      ]
    ]
  ],
  [
    3073,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3070,
        0
      ],
      [
        3072,
        0
      ]
    ]
  ],
  [
    3074,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3073,
        0
      ]
    ]
  ],
  [
    3077,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3074,
        0
      ],
      [
        3076,
        0
      ]
    ]
  ],
  [
    3078,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3077,
        0
      ]
    ]
  ],
  [
    3079,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3078,
        0
      ]
    ]
  ],
  [
    3080,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3079,
        0
      ]
    ]
  ],
  [
    3081,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3068,
        0
      ],
      [
        3080,
        0
      ]
    ]
  ],
  [
    3083,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3082,
        0
      ],
      [
        3081,
        0
      ]
    ]
  ],
  [
    5893,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3083,
        0
      ],
      [
        5892,
        0
      ]
    ]
  ],
  [
    5896,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5893,
        0
      ]
    ]
  ],
  [
    3128,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5896,
        0
      ]
    ]
  ],
  [
    3129,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3128,
        0
      ]
    ]
  ],
  [
    3123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5589,
        0
      ]
    ]
  ],
  [
    3120,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        258,
        0
      ]
    ]
  ],
  [
    3094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5586,
        0
      ]
    ]
  ],
  [
    5894,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5893,
        0
      ]
    ]
  ],
  [
    3085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5894,
        0
      ]
    ]
  ],
  [
    3095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3085,
        0
      ],
      [
        3094,
        0
      ]
    ]
  ],
  [
    3091,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5585,
        0
      ]
    ]
  ],
  [
    3088,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3085,
        0
      ]
    ]
  ],
  [
    3086,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3085,
        0
      ]
    ]
  ],
  [
    3087,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3086,
        0
      ]
    ]
  ],
  [
    3089,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3087,
        0
      ],
      [
        3088,
        0
      ]
    ]
  ],
  [
    3092,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3089,
        0
      ],
      [
        3091,
        0
      ]
    ]
  ],
  [
    3096,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3095,
        0
      ],
      [
        3092,
        0
      ]
    ]
  ],
  [
    3097,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3096,
        0
      ]
    ]
  ],
  [
    3102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5587,
        0
      ]
    ]
  ],
  [
    5895,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5893,
        0
      ]
    ]
  ],
  [
    3100,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5895,
        0
      ]
    ]
  ],
  [
    3103,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3100,
        0
      ],
      [
        3102,
        0
      ]
    ]
  ],
  [
    3104,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3103,
        0
      ]
    ]
  ],
  [
    3111,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5588,
        0
      ]
    ]
  ],
  [
    3105,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3100,
        0
      ]
    ]
  ],
  [
    3108,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3105,
        0
      ]
    ]
  ],
  [
    3106,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3105,
        0
      ]
    ]
  ],
  [
    3107,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3106,
        0
      ]
    ]
  ],
  [
    3109,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3107,
        0
      ],
      [
        3108,
        0
      ]
    ]
  ],
  [
    3112,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3109,
        0
      ],
      [
        3111,
        0
      ]
    ]
  ],
  [
    3113,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3104,
        0
      ],
      [
        3112,
        0
      ]
    ]
  ],
  [
    3118,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3113,
        0
      ],
      [
        3097,
        0
      ]
    ]
  ],
  [
    3121,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3118,
        0
      ],
      [
        3120,
        0
      ]
    ]
  ],
  [
    3124,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3121,
        0
      ],
      [
        3123,
        0
      ]
    ]
  ],
  [
    6172,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3124,
        0
      ]
    ]
  ],
  [
    6173,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3124,
        0
      ],
      [
        6172,
        0
      ]
    ]
  ],
  [
    6174,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6173,
        0
      ]
    ]
  ],
  [
    6175,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6173,
        0
      ],
      [
        6174,
        0
      ]
    ]
  ],
  [
    3134,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6175,
        0
      ],
      [
        3129,
        0
      ]
    ]
  ],
  [
    3136,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3134,
        0
      ]
    ]
  ],
  [
    3137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3136,
        0
      ]
    ]
  ],
  [
    3138,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3137,
        0
      ],
      [
        1498,
        0
      ]
    ]
  ],
  [
    3139,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3068,
        0
      ],
      [
        3138,
        0
      ]
    ]
  ],
  [
    1496,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1195,
        0
      ]
    ]
  ],
  [
    1497,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1194,
        0
      ]
    ]
  ],
  [
    3156,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1193,
        0
      ]
    ]
  ],
  [
    5897,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3156,
        0
      ],
      [
        1497,
        0
      ]
    ]
  ],
  [
    3153,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1197,
        0
      ]
    ]
  ],
  [
    3147,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5590,
        0
      ]
    ]
  ],
  [
    3143,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3142,
        0
      ]
    ]
  ],
  [
    3140,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3139,
        0
      ],
      [
        3139,
        0
      ]
    ]
  ],
  [
    3141,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3140,
        0
      ]
    ]
  ],
  [
    3144,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3141,
        0
      ],
      [
        3143,
        0
      ]
    ]
  ],
  [
    3145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3144,
        0
      ]
    ]
  ],
  [
    3148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3145,
        0
      ],
      [
        3147,
        0
      ]
    ]
  ],
  [
    3149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3148,
        0
      ]
    ]
  ],
  [
    3150,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3149,
        0
      ]
    ]
  ],
  [
    3151,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3150,
        0
      ]
    ]
  ],
  [
    3152,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3139,
        0
      ],
      [
        3151,
        0
      ]
    ]
  ],
  [
    3154,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3153,
        0
      ],
      [
        3152,
        0
      ]
    ]
  ],
  [
    5898,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3154,
        0
      ],
      [
        5897,
        0
      ]
    ]
  ],
  [
    5900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5898,
        0
      ]
    ]
  ],
  [
    5899,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5898,
        0
      ]
    ]
  ],
  [
    3158,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5899,
        0
      ]
    ]
  ],
  [
    3159,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5899,
        0
      ],
      [
        3158,
        0
      ]
    ]
  ],
  [
    3160,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3159,
        0
      ],
      [
        5900,
        0
      ]
    ]
  ],
  [
    3161,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3160,
        0
      ],
      [
        1496,
        0
      ]
    ]
  ],
  [
    3162,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3139,
        0
      ],
      [
        3161,
        0
      ]
    ]
  ],
  [
    1494,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1201,
        0
      ]
    ]
  ],
  [
    3220,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1200,
        0
      ]
    ]
  ],
  [
    3192,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1198,
        0
      ]
    ]
  ],
  [
    1495,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1199,
        0
      ]
    ]
  ],
  [
    5901,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1495,
        0
      ],
      [
        3192,
        0
      ],
      [
        3220,
        0
      ]
    ]
  ],
  [
    3176,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1205,
        0
      ]
    ]
  ],
  [
    3170,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5591,
        0
      ]
    ]
  ],
  [
    3166,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3165,
        0
      ]
    ]
  ],
  [
    3163,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3162,
        0
      ],
      [
        3162,
        0
      ]
    ]
  ],
  [
    3164,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3163,
        0
      ]
    ]
  ],
  [
    3167,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3164,
        0
      ],
      [
        3166,
        0
      ]
    ]
  ],
  [
    3168,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3167,
        0
      ]
    ]
  ],
  [
    3171,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3168,
        0
      ],
      [
        3170,
        0
      ]
    ]
  ],
  [
    3172,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3171,
        0
      ]
    ]
  ],
  [
    3173,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3172,
        0
      ]
    ]
  ],
  [
    3174,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3173,
        0
      ]
    ]
  ],
  [
    3175,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3162,
        0
      ],
      [
        3174,
        0
      ]
    ]
  ],
  [
    3177,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3176,
        0
      ],
      [
        3175,
        0
      ]
    ]
  ],
  [
    5902,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3177,
        0
      ],
      [
        5901,
        0
      ]
    ]
  ],
  [
    5905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5902,
        0
      ]
    ]
  ],
  [
    3222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5905,
        0
      ]
    ]
  ],
  [
    3223,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3222,
        0
      ]
    ]
  ],
  [
    3217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5596,
        0
      ]
    ]
  ],
  [
    3214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        272,
        0
      ]
    ]
  ],
  [
    3188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5593,
        0
      ]
    ]
  ],
  [
    5903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5902,
        0
      ]
    ]
  ],
  [
    3179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5903,
        0
      ]
    ]
  ],
  [
    3189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3179,
        0
      ],
      [
        3188,
        0
      ]
    ]
  ],
  [
    3185,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5592,
        0
      ]
    ]
  ],
  [
    3182,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3179,
        0
      ]
    ]
  ],
  [
    3180,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3179,
        0
      ]
    ]
  ],
  [
    3181,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3180,
        0
      ]
    ]
  ],
  [
    3183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3181,
        0
      ],
      [
        3182,
        0
      ]
    ]
  ],
  [
    3186,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3183,
        0
      ],
      [
        3185,
        0
      ]
    ]
  ],
  [
    3190,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3189,
        0
      ],
      [
        3186,
        0
      ]
    ]
  ],
  [
    3191,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3190,
        0
      ]
    ]
  ],
  [
    3196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5594,
        0
      ]
    ]
  ],
  [
    5904,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5902,
        0
      ]
    ]
  ],
  [
    3194,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5904,
        0
      ]
    ]
  ],
  [
    3197,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3194,
        0
      ],
      [
        3196,
        0
      ]
    ]
  ],
  [
    3198,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3197,
        0
      ]
    ]
  ],
  [
    3205,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5595,
        0
      ]
    ]
  ],
  [
    3199,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3194,
        0
      ]
    ]
  ],
  [
    3202,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3199,
        0
      ]
    ]
  ],
  [
    3200,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3199,
        0
      ]
    ]
  ],
  [
    3201,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3200,
        0
      ]
    ]
  ],
  [
    3203,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3201,
        0
      ],
      [
        3202,
        0
      ]
    ]
  ],
  [
    3206,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3203,
        0
      ],
      [
        3205,
        0
      ]
    ]
  ],
  [
    3207,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3198,
        0
      ],
      [
        3206,
        0
      ]
    ]
  ],
  [
    3212,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3207,
        0
      ],
      [
        3191,
        0
      ]
    ]
  ],
  [
    3215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3212,
        0
      ],
      [
        3214,
        0
      ]
    ]
  ],
  [
    3218,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3215,
        0
      ],
      [
        3217,
        0
      ]
    ]
  ],
  [
    6176,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3218,
        0
      ]
    ]
  ],
  [
    6177,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3218,
        0
      ],
      [
        6176,
        0
      ]
    ]
  ],
  [
    6178,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6177,
        0
      ]
    ]
  ],
  [
    6179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6177,
        0
      ],
      [
        6178,
        0
      ]
    ]
  ],
  [
    3228,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6179,
        0
      ],
      [
        3223,
        0
      ]
    ]
  ],
  [
    3230,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3228,
        0
      ]
    ]
  ],
  [
    3231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3230,
        0
      ]
    ]
  ],
  [
    3232,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3231,
        0
      ],
      [
        1494,
        0
      ]
    ]
  ],
  [
    3233,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3162,
        0
      ],
      [
        3232,
        0
      ]
    ]
  ],
  [
    1492,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1204,
        0
      ]
    ]
  ],
  [
    1493,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1203,
        0
      ]
    ]
  ],
  [
    3250,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1202,
        0
      ]
    ]
  ],
  [
    5906,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3250,
        0
      ],
      [
        1493,
        0
      ]
    ]
  ],
  [
    3247,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1206,
        0
      ]
    ]
  ],
  [
    3241,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5597,
        0
      ]
    ]
  ],
  [
    3237,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3236,
        0
      ]
    ]
  ],
  [
    3234,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3233,
        0
      ],
      [
        3233,
        0
      ]
    ]
  ],
  [
    3235,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3234,
        0
      ]
    ]
  ],
  [
    3238,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3235,
        0
      ],
      [
        3237,
        0
      ]
    ]
  ],
  [
    3239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3238,
        0
      ]
    ]
  ],
  [
    3242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3239,
        0
      ],
      [
        3241,
        0
      ]
    ]
  ],
  [
    3243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3242,
        0
      ]
    ]
  ],
  [
    3244,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3243,
        0
      ]
    ]
  ],
  [
    3245,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3244,
        0
      ]
    ]
  ],
  [
    3246,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3233,
        0
      ],
      [
        3245,
        0
      ]
    ]
  ],
  [
    3248,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3247,
        0
      ],
      [
        3246,
        0
      ]
    ]
  ],
  [
    5907,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3248,
        0
      ],
      [
        5906,
        0
      ]
    ]
  ],
  [
    5909,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5907,
        0
      ]
    ]
  ],
  [
    5908,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5907,
        0
      ]
    ]
  ],
  [
    3252,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5908,
        0
      ]
    ]
  ],
  [
    3253,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5908,
        0
      ],
      [
        3252,
        0
      ]
    ]
  ],
  [
    3254,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3253,
        0
      ],
      [
        5909,
        0
      ]
    ]
  ],
  [
    3255,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3254,
        0
      ],
      [
        1492,
        0
      ]
    ]
  ],
  [
    3256,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3233,
        0
      ],
      [
        3255,
        0
      ]
    ]
  ],
  [
    1490,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1210,
        0
      ]
    ]
  ],
  [
    3314,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1209,
        0
      ]
    ]
  ],
  [
    3286,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1207,
        0
      ]
    ]
  ],
  [
    1491,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1208,
        0
      ]
    ]
  ],
  [
    5910,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1491,
        0
      ],
      [
        3286,
        0
      ],
      [
        3314,
        0
      ]
    ]
  ],
  [
    3270,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1214,
        0
      ]
    ]
  ],
  [
    3264,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5598,
        0
      ]
    ]
  ],
  [
    3260,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3259,
        0
      ]
    ]
  ],
  [
    3257,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3256,
        0
      ],
      [
        3256,
        0
      ]
    ]
  ],
  [
    3258,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3257,
        0
      ]
    ]
  ],
  [
    3261,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3258,
        0
      ],
      [
        3260,
        0
      ]
    ]
  ],
  [
    3262,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3261,
        0
      ]
    ]
  ],
  [
    3265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3262,
        0
      ],
      [
        3264,
        0
      ]
    ]
  ],
  [
    3266,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3265,
        0
      ]
    ]
  ],
  [
    3267,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3266,
        0
      ]
    ]
  ],
  [
    3268,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3267,
        0
      ]
    ]
  ],
  [
    3269,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3256,
        0
      ],
      [
        3268,
        0
      ]
    ]
  ],
  [
    3271,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3270,
        0
      ],
      [
        3269,
        0
      ]
    ]
  ],
  [
    5911,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3271,
        0
      ],
      [
        5910,
        0
      ]
    ]
  ],
  [
    5914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5911,
        0
      ]
    ]
  ],
  [
    3316,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5914,
        0
      ]
    ]
  ],
  [
    3317,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3316,
        0
      ]
    ]
  ],
  [
    3311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5603,
        0
      ]
    ]
  ],
  [
    3308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        286,
        0
      ]
    ]
  ],
  [
    3282,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5600,
        0
      ]
    ]
  ],
  [
    5912,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5911,
        0
      ]
    ]
  ],
  [
    3273,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5912,
        0
      ]
    ]
  ],
  [
    3283,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3273,
        0
      ],
      [
        3282,
        0
      ]
    ]
  ],
  [
    3279,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5599,
        0
      ]
    ]
  ],
  [
    3276,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3273,
        0
      ]
    ]
  ],
  [
    3274,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3273,
        0
      ]
    ]
  ],
  [
    3275,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3274,
        0
      ]
    ]
  ],
  [
    3277,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3275,
        0
      ],
      [
        3276,
        0
      ]
    ]
  ],
  [
    3280,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3277,
        0
      ],
      [
        3279,
        0
      ]
    ]
  ],
  [
    3284,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3283,
        0
      ],
      [
        3280,
        0
      ]
    ]
  ],
  [
    3285,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3284,
        0
      ]
    ]
  ],
  [
    3290,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5601,
        0
      ]
    ]
  ],
  [
    5913,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5911,
        0
      ]
    ]
  ],
  [
    3288,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5913,
        0
      ]
    ]
  ],
  [
    3291,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3288,
        0
      ],
      [
        3290,
        0
      ]
    ]
  ],
  [
    3292,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3291,
        0
      ]
    ]
  ],
  [
    3299,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5602,
        0
      ]
    ]
  ],
  [
    3293,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3288,
        0
      ]
    ]
  ],
  [
    3296,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3293,
        0
      ]
    ]
  ],
  [
    3294,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3293,
        0
      ]
    ]
  ],
  [
    3295,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3294,
        0
      ]
    ]
  ],
  [
    3297,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3295,
        0
      ],
      [
        3296,
        0
      ]
    ]
  ],
  [
    3300,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3297,
        0
      ],
      [
        3299,
        0
      ]
    ]
  ],
  [
    3301,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3292,
        0
      ],
      [
        3300,
        0
      ]
    ]
  ],
  [
    3306,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3301,
        0
      ],
      [
        3285,
        0
      ]
    ]
  ],
  [
    3309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3306,
        0
      ],
      [
        3308,
        0
      ]
    ]
  ],
  [
    3312,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3309,
        0
      ],
      [
        3311,
        0
      ]
    ]
  ],
  [
    6180,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3312,
        0
      ]
    ]
  ],
  [
    6181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3312,
        0
      ],
      [
        6180,
        0
      ]
    ]
  ],
  [
    6182,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6181,
        0
      ]
    ]
  ],
  [
    6183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6181,
        0
      ],
      [
        6182,
        0
      ]
    ]
  ],
  [
    3322,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6183,
        0
      ],
      [
        3317,
        0
      ]
    ]
  ],
  [
    3324,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3322,
        0
      ]
    ]
  ],
  [
    3325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3324,
        0
      ]
    ]
  ],
  [
    3326,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3325,
        0
      ],
      [
        1490,
        0
      ]
    ]
  ],
  [
    3327,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3256,
        0
      ],
      [
        3326,
        0
      ]
    ]
  ],
  [
    1488,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1213,
        0
      ]
    ]
  ],
  [
    1489,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1212,
        0
      ]
    ]
  ],
  [
    3344,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1211,
        0
      ]
    ]
  ],
  [
    5915,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3344,
        0
      ],
      [
        1489,
        0
      ]
    ]
  ],
  [
    3341,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1215,
        0
      ]
    ]
  ],
  [
    3335,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5604,
        0
      ]
    ]
  ],
  [
    3331,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3330,
        0
      ]
    ]
  ],
  [
    3328,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3327,
        0
      ],
      [
        3327,
        0
      ]
    ]
  ],
  [
    3329,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3328,
        0
      ]
    ]
  ],
  [
    3332,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3329,
        0
      ],
      [
        3331,
        0
      ]
    ]
  ],
  [
    3333,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3332,
        0
      ]
    ]
  ],
  [
    3336,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3333,
        0
      ],
      [
        3335,
        0
      ]
    ]
  ],
  [
    3337,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3336,
        0
      ]
    ]
  ],
  [
    3338,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3337,
        0
      ]
    ]
  ],
  [
    3339,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3338,
        0
      ]
    ]
  ],
  [
    3340,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3327,
        0
      ],
      [
        3339,
        0
      ]
    ]
  ],
  [
    3342,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3341,
        0
      ],
      [
        3340,
        0
      ]
    ]
  ],
  [
    5916,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3342,
        0
      ],
      [
        5915,
        0
      ]
    ]
  ],
  [
    5918,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5916,
        0
      ]
    ]
  ],
  [
    5917,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5916,
        0
      ]
    ]
  ],
  [
    3346,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5917,
        0
      ]
    ]
  ],
  [
    3347,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5917,
        0
      ],
      [
        3346,
        0
      ]
    ]
  ],
  [
    3348,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3347,
        0
      ],
      [
        5918,
        0
      ]
    ]
  ],
  [
    3349,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3348,
        0
      ],
      [
        1488,
        0
      ]
    ]
  ],
  [
    3350,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3327,
        0
      ],
      [
        3349,
        0
      ]
    ]
  ],
  [
    1486,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1219,
        0
      ]
    ]
  ],
  [
    3408,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1218,
        0
      ]
    ]
  ],
  [
    3380,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1216,
        0
      ]
    ]
  ],
  [
    1487,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1217,
        0
      ]
    ]
  ],
  [
    5919,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1487,
        0
      ],
      [
        3380,
        0
      ],
      [
        3408,
        0
      ]
    ]
  ],
  [
    3364,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1223,
        0
      ]
    ]
  ],
  [
    3358,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5605,
        0
      ]
    ]
  ],
  [
    3354,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3353,
        0
      ]
    ]
  ],
  [
    3351,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3350,
        0
      ],
      [
        3350,
        0
      ]
    ]
  ],
  [
    3352,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3351,
        0
      ]
    ]
  ],
  [
    3355,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3352,
        0
      ],
      [
        3354,
        0
      ]
    ]
  ],
  [
    3356,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3355,
        0
      ]
    ]
  ],
  [
    3359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3356,
        0
      ],
      [
        3358,
        0
      ]
    ]
  ],
  [
    3360,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3359,
        0
      ]
    ]
  ],
  [
    3361,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3360,
        0
      ]
    ]
  ],
  [
    3362,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3361,
        0
      ]
    ]
  ],
  [
    3363,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3350,
        0
      ],
      [
        3362,
        0
      ]
    ]
  ],
  [
    3365,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3364,
        0
      ],
      [
        3363,
        0
      ]
    ]
  ],
  [
    5920,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3365,
        0
      ],
      [
        5919,
        0
      ]
    ]
  ],
  [
    5923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5920,
        0
      ]
    ]
  ],
  [
    3410,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5923,
        0
      ]
    ]
  ],
  [
    3411,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3410,
        0
      ]
    ]
  ],
  [
    3405,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5610,
        0
      ]
    ]
  ],
  [
    3402,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        300,
        0
      ]
    ]
  ],
  [
    3376,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5607,
        0
      ]
    ]
  ],
  [
    5921,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5920,
        0
      ]
    ]
  ],
  [
    3367,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5921,
        0
      ]
    ]
  ],
  [
    3377,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3367,
        0
      ],
      [
        3376,
        0
      ]
    ]
  ],
  [
    3373,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5606,
        0
      ]
    ]
  ],
  [
    3370,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3367,
        0
      ]
    ]
  ],
  [
    3368,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3367,
        0
      ]
    ]
  ],
  [
    3369,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3368,
        0
      ]
    ]
  ],
  [
    3371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3369,
        0
      ],
      [
        3370,
        0
      ]
    ]
  ],
  [
    3374,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3371,
        0
      ],
      [
        3373,
        0
      ]
    ]
  ],
  [
    3378,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3377,
        0
      ],
      [
        3374,
        0
      ]
    ]
  ],
  [
    3379,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3378,
        0
      ]
    ]
  ],
  [
    3384,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5608,
        0
      ]
    ]
  ],
  [
    5922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5920,
        0
      ]
    ]
  ],
  [
    3382,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5922,
        0
      ]
    ]
  ],
  [
    3385,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3382,
        0
      ],
      [
        3384,
        0
      ]
    ]
  ],
  [
    3386,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3385,
        0
      ]
    ]
  ],
  [
    3393,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5609,
        0
      ]
    ]
  ],
  [
    3387,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3382,
        0
      ]
    ]
  ],
  [
    3390,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3387,
        0
      ]
    ]
  ],
  [
    3388,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3387,
        0
      ]
    ]
  ],
  [
    3389,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3388,
        0
      ]
    ]
  ],
  [
    3391,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3389,
        0
      ],
      [
        3390,
        0
      ]
    ]
  ],
  [
    3394,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3391,
        0
      ],
      [
        3393,
        0
      ]
    ]
  ],
  [
    3395,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3386,
        0
      ],
      [
        3394,
        0
      ]
    ]
  ],
  [
    3400,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3395,
        0
      ],
      [
        3379,
        0
      ]
    ]
  ],
  [
    3403,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3400,
        0
      ],
      [
        3402,
        0
      ]
    ]
  ],
  [
    3406,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3403,
        0
      ],
      [
        3405,
        0
      ]
    ]
  ],
  [
    6184,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3406,
        0
      ]
    ]
  ],
  [
    6185,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3406,
        0
      ],
      [
        6184,
        0
      ]
    ]
  ],
  [
    6186,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6185,
        0
      ]
    ]
  ],
  [
    6187,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6185,
        0
      ],
      [
        6186,
        0
      ]
    ]
  ],
  [
    3416,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6187,
        0
      ],
      [
        3411,
        0
      ]
    ]
  ],
  [
    3418,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3416,
        0
      ]
    ]
  ],
  [
    3419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3418,
        0
      ]
    ]
  ],
  [
    3420,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3419,
        0
      ],
      [
        1486,
        0
      ]
    ]
  ],
  [
    3421,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3350,
        0
      ],
      [
        3420,
        0
      ]
    ]
  ],
  [
    1484,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1222,
        0
      ]
    ]
  ],
  [
    1485,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1221,
        0
      ]
    ]
  ],
  [
    3438,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1220,
        0
      ]
    ]
  ],
  [
    5924,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3438,
        0
      ],
      [
        1485,
        0
      ]
    ]
  ],
  [
    3435,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1224,
        0
      ]
    ]
  ],
  [
    3429,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5611,
        0
      ]
    ]
  ],
  [
    3425,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3424,
        0
      ]
    ]
  ],
  [
    3422,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3421,
        0
      ],
      [
        3421,
        0
      ]
    ]
  ],
  [
    3423,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3422,
        0
      ]
    ]
  ],
  [
    3426,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3423,
        0
      ],
      [
        3425,
        0
      ]
    ]
  ],
  [
    3427,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3426,
        0
      ]
    ]
  ],
  [
    3430,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3427,
        0
      ],
      [
        3429,
        0
      ]
    ]
  ],
  [
    3431,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3430,
        0
      ]
    ]
  ],
  [
    3432,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3431,
        0
      ]
    ]
  ],
  [
    3433,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3432,
        0
      ]
    ]
  ],
  [
    3434,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3421,
        0
      ],
      [
        3433,
        0
      ]
    ]
  ],
  [
    3436,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3435,
        0
      ],
      [
        3434,
        0
      ]
    ]
  ],
  [
    5925,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3436,
        0
      ],
      [
        5924,
        0
      ]
    ]
  ],
  [
    5927,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5925,
        0
      ]
    ]
  ],
  [
    5926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5925,
        0
      ]
    ]
  ],
  [
    3440,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5926,
        0
      ]
    ]
  ],
  [
    3441,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5926,
        0
      ],
      [
        3440,
        0
      ]
    ]
  ],
  [
    3442,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3441,
        0
      ],
      [
        5927,
        0
      ]
    ]
  ],
  [
    3443,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3442,
        0
      ],
      [
        1484,
        0
      ]
    ]
  ],
  [
    3444,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3421,
        0
      ],
      [
        3443,
        0
      ]
    ]
  ],
  [
    1482,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1228,
        0
      ]
    ]
  ],
  [
    3502,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1227,
        0
      ]
    ]
  ],
  [
    3474,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1225,
        0
      ]
    ]
  ],
  [
    1483,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1226,
        0
      ]
    ]
  ],
  [
    5928,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1483,
        0
      ],
      [
        3474,
        0
      ],
      [
        3502,
        0
      ]
    ]
  ],
  [
    3458,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1232,
        0
      ]
    ]
  ],
  [
    3452,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5612,
        0
      ]
    ]
  ],
  [
    3448,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3447,
        0
      ]
    ]
  ],
  [
    3445,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3444,
        0
      ],
      [
        3444,
        0
      ]
    ]
  ],
  [
    3446,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3445,
        0
      ]
    ]
  ],
  [
    3449,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3446,
        0
      ],
      [
        3448,
        0
      ]
    ]
  ],
  [
    3450,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3449,
        0
      ]
    ]
  ],
  [
    3453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3450,
        0
      ],
      [
        3452,
        0
      ]
    ]
  ],
  [
    3454,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3453,
        0
      ]
    ]
  ],
  [
    3455,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3454,
        0
      ]
    ]
  ],
  [
    3456,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3455,
        0
      ]
    ]
  ],
  [
    3457,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3444,
        0
      ],
      [
        3456,
        0
      ]
    ]
  ],
  [
    3459,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3458,
        0
      ],
      [
        3457,
        0
      ]
    ]
  ],
  [
    5929,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3459,
        0
      ],
      [
        5928,
        0
      ]
    ]
  ],
  [
    5932,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5929,
        0
      ]
    ]
  ],
  [
    3504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5932,
        0
      ]
    ]
  ],
  [
    3505,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3504,
        0
      ]
    ]
  ],
  [
    3499,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5617,
        0
      ]
    ]
  ],
  [
    3496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        314,
        0
      ]
    ]
  ],
  [
    3470,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5614,
        0
      ]
    ]
  ],
  [
    5930,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5929,
        0
      ]
    ]
  ],
  [
    3461,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5930,
        0
      ]
    ]
  ],
  [
    3471,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3461,
        0
      ],
      [
        3470,
        0
      ]
    ]
  ],
  [
    3467,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5613,
        0
      ]
    ]
  ],
  [
    3464,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3461,
        0
      ]
    ]
  ],
  [
    3462,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3461,
        0
      ]
    ]
  ],
  [
    3463,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3462,
        0
      ]
    ]
  ],
  [
    3465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3463,
        0
      ],
      [
        3464,
        0
      ]
    ]
  ],
  [
    3468,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3465,
        0
      ],
      [
        3467,
        0
      ]
    ]
  ],
  [
    3472,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3471,
        0
      ],
      [
        3468,
        0
      ]
    ]
  ],
  [
    3473,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3472,
        0
      ]
    ]
  ],
  [
    3478,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5615,
        0
      ]
    ]
  ],
  [
    5931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5929,
        0
      ]
    ]
  ],
  [
    3476,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5931,
        0
      ]
    ]
  ],
  [
    3479,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3476,
        0
      ],
      [
        3478,
        0
      ]
    ]
  ],
  [
    3480,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3479,
        0
      ]
    ]
  ],
  [
    3487,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5616,
        0
      ]
    ]
  ],
  [
    3481,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3476,
        0
      ]
    ]
  ],
  [
    3484,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3481,
        0
      ]
    ]
  ],
  [
    3482,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3481,
        0
      ]
    ]
  ],
  [
    3483,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3482,
        0
      ]
    ]
  ],
  [
    3485,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3483,
        0
      ],
      [
        3484,
        0
      ]
    ]
  ],
  [
    3488,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3485,
        0
      ],
      [
        3487,
        0
      ]
    ]
  ],
  [
    3489,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3480,
        0
      ],
      [
        3488,
        0
      ]
    ]
  ],
  [
    3494,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3489,
        0
      ],
      [
        3473,
        0
      ]
    ]
  ],
  [
    3497,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3494,
        0
      ],
      [
        3496,
        0
      ]
    ]
  ],
  [
    3500,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3497,
        0
      ],
      [
        3499,
        0
      ]
    ]
  ],
  [
    6188,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3500,
        0
      ]
    ]
  ],
  [
    6189,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3500,
        0
      ],
      [
        6188,
        0
      ]
    ]
  ],
  [
    6190,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6189,
        0
      ]
    ]
  ],
  [
    6191,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6189,
        0
      ],
      [
        6190,
        0
      ]
    ]
  ],
  [
    3510,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6191,
        0
      ],
      [
        3505,
        0
      ]
    ]
  ],
  [
    3512,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3510,
        0
      ]
    ]
  ],
  [
    3513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3512,
        0
      ]
    ]
  ],
  [
    3514,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3513,
        0
      ],
      [
        1482,
        0
      ]
    ]
  ],
  [
    3515,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3444,
        0
      ],
      [
        3514,
        0
      ]
    ]
  ],
  [
    1480,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1231,
        0
      ]
    ]
  ],
  [
    1481,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1230,
        0
      ]
    ]
  ],
  [
    3532,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1229,
        0
      ]
    ]
  ],
  [
    5933,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3532,
        0
      ],
      [
        1481,
        0
      ]
    ]
  ],
  [
    3529,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1233,
        0
      ]
    ]
  ],
  [
    3523,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5618,
        0
      ]
    ]
  ],
  [
    3519,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3518,
        0
      ]
    ]
  ],
  [
    3516,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3515,
        0
      ],
      [
        3515,
        0
      ]
    ]
  ],
  [
    3517,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3516,
        0
      ]
    ]
  ],
  [
    3520,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3517,
        0
      ],
      [
        3519,
        0
      ]
    ]
  ],
  [
    3521,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3520,
        0
      ]
    ]
  ],
  [
    3524,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3521,
        0
      ],
      [
        3523,
        0
      ]
    ]
  ],
  [
    3525,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3524,
        0
      ]
    ]
  ],
  [
    3526,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3525,
        0
      ]
    ]
  ],
  [
    3527,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3526,
        0
      ]
    ]
  ],
  [
    3528,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3515,
        0
      ],
      [
        3527,
        0
      ]
    ]
  ],
  [
    3530,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3529,
        0
      ],
      [
        3528,
        0
      ]
    ]
  ],
  [
    5934,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3530,
        0
      ],
      [
        5933,
        0
      ]
    ]
  ],
  [
    5936,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5934,
        0
      ]
    ]
  ],
  [
    5935,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5934,
        0
      ]
    ]
  ],
  [
    3534,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5935,
        0
      ]
    ]
  ],
  [
    3535,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5935,
        0
      ],
      [
        3534,
        0
      ]
    ]
  ],
  [
    3536,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3535,
        0
      ],
      [
        5936,
        0
      ]
    ]
  ],
  [
    3537,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3536,
        0
      ],
      [
        1480,
        0
      ]
    ]
  ],
  [
    3538,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3515,
        0
      ],
      [
        3537,
        0
      ]
    ]
  ],
  [
    1478,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1237,
        0
      ]
    ]
  ],
  [
    3596,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1236,
        0
      ]
    ]
  ],
  [
    3568,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1234,
        0
      ]
    ]
  ],
  [
    1479,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1235,
        0
      ]
    ]
  ],
  [
    5937,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1479,
        0
      ],
      [
        3568,
        0
      ],
      [
        3596,
        0
      ]
    ]
  ],
  [
    3552,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1241,
        0
      ]
    ]
  ],
  [
    3546,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5619,
        0
      ]
    ]
  ],
  [
    3542,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3541,
        0
      ]
    ]
  ],
  [
    3539,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3538,
        0
      ],
      [
        3538,
        0
      ]
    ]
  ],
  [
    3540,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3539,
        0
      ]
    ]
  ],
  [
    3543,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3540,
        0
      ],
      [
        3542,
        0
      ]
    ]
  ],
  [
    3544,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3543,
        0
      ]
    ]
  ],
  [
    3547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3544,
        0
      ],
      [
        3546,
        0
      ]
    ]
  ],
  [
    3548,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3547,
        0
      ]
    ]
  ],
  [
    3549,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3548,
        0
      ]
    ]
  ],
  [
    3550,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3549,
        0
      ]
    ]
  ],
  [
    3551,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3538,
        0
      ],
      [
        3550,
        0
      ]
    ]
  ],
  [
    3553,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3552,
        0
      ],
      [
        3551,
        0
      ]
    ]
  ],
  [
    5938,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3553,
        0
      ],
      [
        5937,
        0
      ]
    ]
  ],
  [
    5941,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5938,
        0
      ]
    ]
  ],
  [
    3598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5941,
        0
      ]
    ]
  ],
  [
    3599,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3598,
        0
      ]
    ]
  ],
  [
    3593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5624,
        0
      ]
    ]
  ],
  [
    3590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        328,
        0
      ]
    ]
  ],
  [
    3564,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5621,
        0
      ]
    ]
  ],
  [
    5939,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5938,
        0
      ]
    ]
  ],
  [
    3555,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5939,
        0
      ]
    ]
  ],
  [
    3565,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3555,
        0
      ],
      [
        3564,
        0
      ]
    ]
  ],
  [
    3561,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5620,
        0
      ]
    ]
  ],
  [
    3558,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3555,
        0
      ]
    ]
  ],
  [
    3556,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3555,
        0
      ]
    ]
  ],
  [
    3557,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3556,
        0
      ]
    ]
  ],
  [
    3559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3557,
        0
      ],
      [
        3558,
        0
      ]
    ]
  ],
  [
    3562,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3559,
        0
      ],
      [
        3561,
        0
      ]
    ]
  ],
  [
    3566,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3565,
        0
      ],
      [
        3562,
        0
      ]
    ]
  ],
  [
    3567,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3566,
        0
      ]
    ]
  ],
  [
    3572,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5622,
        0
      ]
    ]
  ],
  [
    5940,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5938,
        0
      ]
    ]
  ],
  [
    3570,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5940,
        0
      ]
    ]
  ],
  [
    3573,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3570,
        0
      ],
      [
        3572,
        0
      ]
    ]
  ],
  [
    3574,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3573,
        0
      ]
    ]
  ],
  [
    3581,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5623,
        0
      ]
    ]
  ],
  [
    3575,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3570,
        0
      ]
    ]
  ],
  [
    3578,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3575,
        0
      ]
    ]
  ],
  [
    3576,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3575,
        0
      ]
    ]
  ],
  [
    3577,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3576,
        0
      ]
    ]
  ],
  [
    3579,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3577,
        0
      ],
      [
        3578,
        0
      ]
    ]
  ],
  [
    3582,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3579,
        0
      ],
      [
        3581,
        0
      ]
    ]
  ],
  [
    3583,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3574,
        0
      ],
      [
        3582,
        0
      ]
    ]
  ],
  [
    3588,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3583,
        0
      ],
      [
        3567,
        0
      ]
    ]
  ],
  [
    3591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3588,
        0
      ],
      [
        3590,
        0
      ]
    ]
  ],
  [
    3594,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3591,
        0
      ],
      [
        3593,
        0
      ]
    ]
  ],
  [
    6192,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3594,
        0
      ]
    ]
  ],
  [
    6193,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3594,
        0
      ],
      [
        6192,
        0
      ]
    ]
  ],
  [
    6194,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6193,
        0
      ]
    ]
  ],
  [
    6195,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6193,
        0
      ],
      [
        6194,
        0
      ]
    ]
  ],
  [
    3604,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6195,
        0
      ],
      [
        3599,
        0
      ]
    ]
  ],
  [
    3606,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3604,
        0
      ]
    ]
  ],
  [
    3607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3606,
        0
      ]
    ]
  ],
  [
    3608,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3607,
        0
      ],
      [
        1478,
        0
      ]
    ]
  ],
  [
    3609,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3538,
        0
      ],
      [
        3608,
        0
      ]
    ]
  ],
  [
    1476,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1240,
        0
      ]
    ]
  ],
  [
    1477,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1239,
        0
      ]
    ]
  ],
  [
    3626,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1238,
        0
      ]
    ]
  ],
  [
    5942,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3626,
        0
      ],
      [
        1477,
        0
      ]
    ]
  ],
  [
    3623,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1242,
        0
      ]
    ]
  ],
  [
    3617,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5625,
        0
      ]
    ]
  ],
  [
    3613,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3612,
        0
      ]
    ]
  ],
  [
    3610,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3609,
        0
      ],
      [
        3609,
        0
      ]
    ]
  ],
  [
    3611,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3610,
        0
      ]
    ]
  ],
  [
    3614,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3611,
        0
      ],
      [
        3613,
        0
      ]
    ]
  ],
  [
    3615,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3614,
        0
      ]
    ]
  ],
  [
    3618,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3615,
        0
      ],
      [
        3617,
        0
      ]
    ]
  ],
  [
    3619,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3618,
        0
      ]
    ]
  ],
  [
    3620,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3619,
        0
      ]
    ]
  ],
  [
    3621,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3620,
        0
      ]
    ]
  ],
  [
    3622,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3609,
        0
      ],
      [
        3621,
        0
      ]
    ]
  ],
  [
    3624,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3623,
        0
      ],
      [
        3622,
        0
      ]
    ]
  ],
  [
    5943,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3624,
        0
      ],
      [
        5942,
        0
      ]
    ]
  ],
  [
    5945,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5943,
        0
      ]
    ]
  ],
  [
    5944,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5943,
        0
      ]
    ]
  ],
  [
    3628,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5944,
        0
      ]
    ]
  ],
  [
    3629,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5944,
        0
      ],
      [
        3628,
        0
      ]
    ]
  ],
  [
    3630,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3629,
        0
      ],
      [
        5945,
        0
      ]
    ]
  ],
  [
    3631,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3630,
        0
      ],
      [
        1476,
        0
      ]
    ]
  ],
  [
    3632,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3609,
        0
      ],
      [
        3631,
        0
      ]
    ]
  ],
  [
    1474,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1246,
        0
      ]
    ]
  ],
  [
    3690,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1245,
        0
      ]
    ]
  ],
  [
    3662,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1243,
        0
      ]
    ]
  ],
  [
    1475,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1244,
        0
      ]
    ]
  ],
  [
    5946,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1475,
        0
      ],
      [
        3662,
        0
      ],
      [
        3690,
        0
      ]
    ]
  ],
  [
    3646,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1250,
        0
      ]
    ]
  ],
  [
    3640,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5626,
        0
      ]
    ]
  ],
  [
    3636,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3635,
        0
      ]
    ]
  ],
  [
    3633,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3632,
        0
      ],
      [
        3632,
        0
      ]
    ]
  ],
  [
    3634,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3633,
        0
      ]
    ]
  ],
  [
    3637,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3634,
        0
      ],
      [
        3636,
        0
      ]
    ]
  ],
  [
    3638,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3637,
        0
      ]
    ]
  ],
  [
    3641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3638,
        0
      ],
      [
        3640,
        0
      ]
    ]
  ],
  [
    3642,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3641,
        0
      ]
    ]
  ],
  [
    3643,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3642,
        0
      ]
    ]
  ],
  [
    3644,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3643,
        0
      ]
    ]
  ],
  [
    3645,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3632,
        0
      ],
      [
        3644,
        0
      ]
    ]
  ],
  [
    3647,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3646,
        0
      ],
      [
        3645,
        0
      ]
    ]
  ],
  [
    5947,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3647,
        0
      ],
      [
        5946,
        0
      ]
    ]
  ],
  [
    5950,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5947,
        0
      ]
    ]
  ],
  [
    3692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5950,
        0
      ]
    ]
  ],
  [
    3693,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3692,
        0
      ]
    ]
  ],
  [
    3687,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5631,
        0
      ]
    ]
  ],
  [
    3684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        342,
        0
      ]
    ]
  ],
  [
    3658,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5628,
        0
      ]
    ]
  ],
  [
    5948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5947,
        0
      ]
    ]
  ],
  [
    3649,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5948,
        0
      ]
    ]
  ],
  [
    3659,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3649,
        0
      ],
      [
        3658,
        0
      ]
    ]
  ],
  [
    3655,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5627,
        0
      ]
    ]
  ],
  [
    3652,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3649,
        0
      ]
    ]
  ],
  [
    3650,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3649,
        0
      ]
    ]
  ],
  [
    3651,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3650,
        0
      ]
    ]
  ],
  [
    3653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3651,
        0
      ],
      [
        3652,
        0
      ]
    ]
  ],
  [
    3656,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3653,
        0
      ],
      [
        3655,
        0
      ]
    ]
  ],
  [
    3660,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3659,
        0
      ],
      [
        3656,
        0
      ]
    ]
  ],
  [
    3661,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3660,
        0
      ]
    ]
  ],
  [
    3666,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5629,
        0
      ]
    ]
  ],
  [
    5949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5947,
        0
      ]
    ]
  ],
  [
    3664,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5949,
        0
      ]
    ]
  ],
  [
    3667,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3664,
        0
      ],
      [
        3666,
        0
      ]
    ]
  ],
  [
    3668,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3667,
        0
      ]
    ]
  ],
  [
    3675,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5630,
        0
      ]
    ]
  ],
  [
    3669,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3664,
        0
      ]
    ]
  ],
  [
    3672,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3669,
        0
      ]
    ]
  ],
  [
    3670,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3669,
        0
      ]
    ]
  ],
  [
    3671,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3670,
        0
      ]
    ]
  ],
  [
    3673,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3671,
        0
      ],
      [
        3672,
        0
      ]
    ]
  ],
  [
    3676,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3673,
        0
      ],
      [
        3675,
        0
      ]
    ]
  ],
  [
    3677,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3668,
        0
      ],
      [
        3676,
        0
      ]
    ]
  ],
  [
    3682,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3677,
        0
      ],
      [
        3661,
        0
      ]
    ]
  ],
  [
    3685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3682,
        0
      ],
      [
        3684,
        0
      ]
    ]
  ],
  [
    3688,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3685,
        0
      ],
      [
        3687,
        0
      ]
    ]
  ],
  [
    6196,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3688,
        0
      ]
    ]
  ],
  [
    6197,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3688,
        0
      ],
      [
        6196,
        0
      ]
    ]
  ],
  [
    6198,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6197,
        0
      ]
    ]
  ],
  [
    6199,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6197,
        0
      ],
      [
        6198,
        0
      ]
    ]
  ],
  [
    3698,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6199,
        0
      ],
      [
        3693,
        0
      ]
    ]
  ],
  [
    3700,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3698,
        0
      ]
    ]
  ],
  [
    3701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3700,
        0
      ]
    ]
  ],
  [
    3702,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3701,
        0
      ],
      [
        1474,
        0
      ]
    ]
  ],
  [
    3703,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3632,
        0
      ],
      [
        3702,
        0
      ]
    ]
  ],
  [
    1472,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1249,
        0
      ]
    ]
  ],
  [
    1473,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1248,
        0
      ]
    ]
  ],
  [
    3720,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1247,
        0
      ]
    ]
  ],
  [
    5951,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3720,
        0
      ],
      [
        1473,
        0
      ]
    ]
  ],
  [
    3717,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1251,
        0
      ]
    ]
  ],
  [
    3711,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5632,
        0
      ]
    ]
  ],
  [
    3707,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3706,
        0
      ]
    ]
  ],
  [
    3704,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3703,
        0
      ],
      [
        3703,
        0
      ]
    ]
  ],
  [
    3705,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3704,
        0
      ]
    ]
  ],
  [
    3708,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3705,
        0
      ],
      [
        3707,
        0
      ]
    ]
  ],
  [
    3709,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3708,
        0
      ]
    ]
  ],
  [
    3712,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3709,
        0
      ],
      [
        3711,
        0
      ]
    ]
  ],
  [
    3713,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3712,
        0
      ]
    ]
  ],
  [
    3714,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3713,
        0
      ]
    ]
  ],
  [
    3715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3714,
        0
      ]
    ]
  ],
  [
    3716,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3703,
        0
      ],
      [
        3715,
        0
      ]
    ]
  ],
  [
    3718,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3717,
        0
      ],
      [
        3716,
        0
      ]
    ]
  ],
  [
    5952,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3718,
        0
      ],
      [
        5951,
        0
      ]
    ]
  ],
  [
    5954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5952,
        0
      ]
    ]
  ],
  [
    5953,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5952,
        0
      ]
    ]
  ],
  [
    3722,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5953,
        0
      ]
    ]
  ],
  [
    3723,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5953,
        0
      ],
      [
        3722,
        0
      ]
    ]
  ],
  [
    3724,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3723,
        0
      ],
      [
        5954,
        0
      ]
    ]
  ],
  [
    3725,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3724,
        0
      ],
      [
        1472,
        0
      ]
    ]
  ],
  [
    3726,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3703,
        0
      ],
      [
        3725,
        0
      ]
    ]
  ],
  [
    1470,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1255,
        0
      ]
    ]
  ],
  [
    3784,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1254,
        0
      ]
    ]
  ],
  [
    3756,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1252,
        0
      ]
    ]
  ],
  [
    1471,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1253,
        0
      ]
    ]
  ],
  [
    5955,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1471,
        0
      ],
      [
        3756,
        0
      ],
      [
        3784,
        0
      ]
    ]
  ],
  [
    3740,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1259,
        0
      ]
    ]
  ],
  [
    3734,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5633,
        0
      ]
    ]
  ],
  [
    3730,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3729,
        0
      ]
    ]
  ],
  [
    3727,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3726,
        0
      ],
      [
        3726,
        0
      ]
    ]
  ],
  [
    3728,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3727,
        0
      ]
    ]
  ],
  [
    3731,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3728,
        0
      ],
      [
        3730,
        0
      ]
    ]
  ],
  [
    3732,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3731,
        0
      ]
    ]
  ],
  [
    3735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3732,
        0
      ],
      [
        3734,
        0
      ]
    ]
  ],
  [
    3736,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3735,
        0
      ]
    ]
  ],
  [
    3737,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3736,
        0
      ]
    ]
  ],
  [
    3738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3737,
        0
      ]
    ]
  ],
  [
    3739,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3726,
        0
      ],
      [
        3738,
        0
      ]
    ]
  ],
  [
    3741,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3740,
        0
      ],
      [
        3739,
        0
      ]
    ]
  ],
  [
    5956,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3741,
        0
      ],
      [
        5955,
        0
      ]
    ]
  ],
  [
    5959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5956,
        0
      ]
    ]
  ],
  [
    3786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5959,
        0
      ]
    ]
  ],
  [
    3787,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3786,
        0
      ]
    ]
  ],
  [
    3781,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5638,
        0
      ]
    ]
  ],
  [
    3778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        356,
        0
      ]
    ]
  ],
  [
    3752,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5635,
        0
      ]
    ]
  ],
  [
    5957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5956,
        0
      ]
    ]
  ],
  [
    3743,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5957,
        0
      ]
    ]
  ],
  [
    3753,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3743,
        0
      ],
      [
        3752,
        0
      ]
    ]
  ],
  [
    3749,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5634,
        0
      ]
    ]
  ],
  [
    3746,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3743,
        0
      ]
    ]
  ],
  [
    3744,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3743,
        0
      ]
    ]
  ],
  [
    3745,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3744,
        0
      ]
    ]
  ],
  [
    3747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3745,
        0
      ],
      [
        3746,
        0
      ]
    ]
  ],
  [
    3750,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3747,
        0
      ],
      [
        3749,
        0
      ]
    ]
  ],
  [
    3754,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3753,
        0
      ],
      [
        3750,
        0
      ]
    ]
  ],
  [
    3755,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3754,
        0
      ]
    ]
  ],
  [
    3760,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5636,
        0
      ]
    ]
  ],
  [
    5958,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5956,
        0
      ]
    ]
  ],
  [
    3758,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5958,
        0
      ]
    ]
  ],
  [
    3761,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3758,
        0
      ],
      [
        3760,
        0
      ]
    ]
  ],
  [
    3762,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3761,
        0
      ]
    ]
  ],
  [
    3769,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5637,
        0
      ]
    ]
  ],
  [
    3763,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3758,
        0
      ]
    ]
  ],
  [
    3766,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3763,
        0
      ]
    ]
  ],
  [
    3764,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3763,
        0
      ]
    ]
  ],
  [
    3765,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3764,
        0
      ]
    ]
  ],
  [
    3767,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3765,
        0
      ],
      [
        3766,
        0
      ]
    ]
  ],
  [
    3770,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3767,
        0
      ],
      [
        3769,
        0
      ]
    ]
  ],
  [
    3771,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3762,
        0
      ],
      [
        3770,
        0
      ]
    ]
  ],
  [
    3776,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3771,
        0
      ],
      [
        3755,
        0
      ]
    ]
  ],
  [
    3779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3776,
        0
      ],
      [
        3778,
        0
      ]
    ]
  ],
  [
    3782,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3779,
        0
      ],
      [
        3781,
        0
      ]
    ]
  ],
  [
    6200,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3782,
        0
      ]
    ]
  ],
  [
    6201,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3782,
        0
      ],
      [
        6200,
        0
      ]
    ]
  ],
  [
    6202,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6201,
        0
      ]
    ]
  ],
  [
    6203,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6201,
        0
      ],
      [
        6202,
        0
      ]
    ]
  ],
  [
    3792,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6203,
        0
      ],
      [
        3787,
        0
      ]
    ]
  ],
  [
    3794,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3792,
        0
      ]
    ]
  ],
  [
    3795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3794,
        0
      ]
    ]
  ],
  [
    3796,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3795,
        0
      ],
      [
        1470,
        0
      ]
    ]
  ],
  [
    3797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3726,
        0
      ],
      [
        3796,
        0
      ]
    ]
  ],
  [
    1468,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1258,
        0
      ]
    ]
  ],
  [
    1469,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1257,
        0
      ]
    ]
  ],
  [
    3814,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1256,
        0
      ]
    ]
  ],
  [
    5960,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3814,
        0
      ],
      [
        1469,
        0
      ]
    ]
  ],
  [
    3811,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1260,
        0
      ]
    ]
  ],
  [
    3805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5639,
        0
      ]
    ]
  ],
  [
    3801,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3800,
        0
      ]
    ]
  ],
  [
    3798,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3797,
        0
      ],
      [
        3797,
        0
      ]
    ]
  ],
  [
    3799,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3798,
        0
      ]
    ]
  ],
  [
    3802,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3799,
        0
      ],
      [
        3801,
        0
      ]
    ]
  ],
  [
    3803,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3802,
        0
      ]
    ]
  ],
  [
    3806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3803,
        0
      ],
      [
        3805,
        0
      ]
    ]
  ],
  [
    3807,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3806,
        0
      ]
    ]
  ],
  [
    3808,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3807,
        0
      ]
    ]
  ],
  [
    3809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3808,
        0
      ]
    ]
  ],
  [
    3810,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3797,
        0
      ],
      [
        3809,
        0
      ]
    ]
  ],
  [
    3812,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3811,
        0
      ],
      [
        3810,
        0
      ]
    ]
  ],
  [
    5961,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3812,
        0
      ],
      [
        5960,
        0
      ]
    ]
  ],
  [
    5963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5961,
        0
      ]
    ]
  ],
  [
    5962,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5961,
        0
      ]
    ]
  ],
  [
    3816,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5962,
        0
      ]
    ]
  ],
  [
    3817,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5962,
        0
      ],
      [
        3816,
        0
      ]
    ]
  ],
  [
    3818,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3817,
        0
      ],
      [
        5963,
        0
      ]
    ]
  ],
  [
    3819,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3818,
        0
      ],
      [
        1468,
        0
      ]
    ]
  ],
  [
    3820,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3797,
        0
      ],
      [
        3819,
        0
      ]
    ]
  ],
  [
    1466,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1264,
        0
      ]
    ]
  ],
  [
    3878,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1263,
        0
      ]
    ]
  ],
  [
    3850,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1261,
        0
      ]
    ]
  ],
  [
    1467,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1262,
        0
      ]
    ]
  ],
  [
    5964,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1467,
        0
      ],
      [
        3850,
        0
      ],
      [
        3878,
        0
      ]
    ]
  ],
  [
    3834,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1268,
        0
      ]
    ]
  ],
  [
    3828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5640,
        0
      ]
    ]
  ],
  [
    3824,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3823,
        0
      ]
    ]
  ],
  [
    3821,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3820,
        0
      ],
      [
        3820,
        0
      ]
    ]
  ],
  [
    3822,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3821,
        0
      ]
    ]
  ],
  [
    3825,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3822,
        0
      ],
      [
        3824,
        0
      ]
    ]
  ],
  [
    3826,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3825,
        0
      ]
    ]
  ],
  [
    3829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3826,
        0
      ],
      [
        3828,
        0
      ]
    ]
  ],
  [
    3830,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3829,
        0
      ]
    ]
  ],
  [
    3831,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3830,
        0
      ]
    ]
  ],
  [
    3832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3831,
        0
      ]
    ]
  ],
  [
    3833,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3820,
        0
      ],
      [
        3832,
        0
      ]
    ]
  ],
  [
    3835,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3834,
        0
      ],
      [
        3833,
        0
      ]
    ]
  ],
  [
    5965,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3835,
        0
      ],
      [
        5964,
        0
      ]
    ]
  ],
  [
    5968,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5965,
        0
      ]
    ]
  ],
  [
    3880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5968,
        0
      ]
    ]
  ],
  [
    3881,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3880,
        0
      ]
    ]
  ],
  [
    3875,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5645,
        0
      ]
    ]
  ],
  [
    3872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        370,
        0
      ]
    ]
  ],
  [
    3846,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5642,
        0
      ]
    ]
  ],
  [
    5966,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5965,
        0
      ]
    ]
  ],
  [
    3837,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5966,
        0
      ]
    ]
  ],
  [
    3847,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3837,
        0
      ],
      [
        3846,
        0
      ]
    ]
  ],
  [
    3843,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5641,
        0
      ]
    ]
  ],
  [
    3840,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3837,
        0
      ]
    ]
  ],
  [
    3838,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3837,
        0
      ]
    ]
  ],
  [
    3839,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3838,
        0
      ]
    ]
  ],
  [
    3841,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3839,
        0
      ],
      [
        3840,
        0
      ]
    ]
  ],
  [
    3844,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3841,
        0
      ],
      [
        3843,
        0
      ]
    ]
  ],
  [
    3848,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3847,
        0
      ],
      [
        3844,
        0
      ]
    ]
  ],
  [
    3849,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3848,
        0
      ]
    ]
  ],
  [
    3854,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5643,
        0
      ]
    ]
  ],
  [
    5967,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5965,
        0
      ]
    ]
  ],
  [
    3852,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5967,
        0
      ]
    ]
  ],
  [
    3855,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3852,
        0
      ],
      [
        3854,
        0
      ]
    ]
  ],
  [
    3856,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3855,
        0
      ]
    ]
  ],
  [
    3863,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5644,
        0
      ]
    ]
  ],
  [
    3857,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3852,
        0
      ]
    ]
  ],
  [
    3860,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3857,
        0
      ]
    ]
  ],
  [
    3858,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3857,
        0
      ]
    ]
  ],
  [
    3859,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3858,
        0
      ]
    ]
  ],
  [
    3861,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3859,
        0
      ],
      [
        3860,
        0
      ]
    ]
  ],
  [
    3864,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3861,
        0
      ],
      [
        3863,
        0
      ]
    ]
  ],
  [
    3865,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3856,
        0
      ],
      [
        3864,
        0
      ]
    ]
  ],
  [
    3870,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3865,
        0
      ],
      [
        3849,
        0
      ]
    ]
  ],
  [
    3873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3870,
        0
      ],
      [
        3872,
        0
      ]
    ]
  ],
  [
    3876,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3873,
        0
      ],
      [
        3875,
        0
      ]
    ]
  ],
  [
    6204,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3876,
        0
      ]
    ]
  ],
  [
    6205,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3876,
        0
      ],
      [
        6204,
        0
      ]
    ]
  ],
  [
    6206,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6205,
        0
      ]
    ]
  ],
  [
    6207,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6205,
        0
      ],
      [
        6206,
        0
      ]
    ]
  ],
  [
    3886,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6207,
        0
      ],
      [
        3881,
        0
      ]
    ]
  ],
  [
    3888,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3886,
        0
      ]
    ]
  ],
  [
    3889,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3888,
        0
      ]
    ]
  ],
  [
    3890,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3889,
        0
      ],
      [
        1466,
        0
      ]
    ]
  ],
  [
    3891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3820,
        0
      ],
      [
        3890,
        0
      ]
    ]
  ],
  [
    1464,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1267,
        0
      ]
    ]
  ],
  [
    1465,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1266,
        0
      ]
    ]
  ],
  [
    3908,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1265,
        0
      ]
    ]
  ],
  [
    5969,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3908,
        0
      ],
      [
        1465,
        0
      ]
    ]
  ],
  [
    3905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1269,
        0
      ]
    ]
  ],
  [
    3899,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5646,
        0
      ]
    ]
  ],
  [
    3895,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3894,
        0
      ]
    ]
  ],
  [
    3892,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3891,
        0
      ],
      [
        3891,
        0
      ]
    ]
  ],
  [
    3893,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3892,
        0
      ]
    ]
  ],
  [
    3896,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3893,
        0
      ],
      [
        3895,
        0
      ]
    ]
  ],
  [
    3897,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3896,
        0
      ]
    ]
  ],
  [
    3900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3897,
        0
      ],
      [
        3899,
        0
      ]
    ]
  ],
  [
    3901,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3900,
        0
      ]
    ]
  ],
  [
    3902,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3901,
        0
      ]
    ]
  ],
  [
    3903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3902,
        0
      ]
    ]
  ],
  [
    3904,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3891,
        0
      ],
      [
        3903,
        0
      ]
    ]
  ],
  [
    3906,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3905,
        0
      ],
      [
        3904,
        0
      ]
    ]
  ],
  [
    5970,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3906,
        0
      ],
      [
        5969,
        0
      ]
    ]
  ],
  [
    5972,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5970,
        0
      ]
    ]
  ],
  [
    5971,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5970,
        0
      ]
    ]
  ],
  [
    3910,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5971,
        0
      ]
    ]
  ],
  [
    3911,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5971,
        0
      ],
      [
        3910,
        0
      ]
    ]
  ],
  [
    3912,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3911,
        0
      ],
      [
        5972,
        0
      ]
    ]
  ],
  [
    3913,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3912,
        0
      ],
      [
        1464,
        0
      ]
    ]
  ],
  [
    3914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3891,
        0
      ],
      [
        3913,
        0
      ]
    ]
  ],
  [
    1462,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1273,
        0
      ]
    ]
  ],
  [
    3972,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1272,
        0
      ]
    ]
  ],
  [
    3944,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1270,
        0
      ]
    ]
  ],
  [
    1463,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1271,
        0
      ]
    ]
  ],
  [
    5973,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1463,
        0
      ],
      [
        3944,
        0
      ],
      [
        3972,
        0
      ]
    ]
  ],
  [
    3928,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1277,
        0
      ]
    ]
  ],
  [
    3922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5647,
        0
      ]
    ]
  ],
  [
    3918,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3917,
        0
      ]
    ]
  ],
  [
    3915,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3914,
        0
      ],
      [
        3914,
        0
      ]
    ]
  ],
  [
    3916,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3915,
        0
      ]
    ]
  ],
  [
    3919,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3916,
        0
      ],
      [
        3918,
        0
      ]
    ]
  ],
  [
    3920,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3919,
        0
      ]
    ]
  ],
  [
    3923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3920,
        0
      ],
      [
        3922,
        0
      ]
    ]
  ],
  [
    3924,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3923,
        0
      ]
    ]
  ],
  [
    3925,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3924,
        0
      ]
    ]
  ],
  [
    3926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3925,
        0
      ]
    ]
  ],
  [
    3927,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3914,
        0
      ],
      [
        3926,
        0
      ]
    ]
  ],
  [
    3929,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3928,
        0
      ],
      [
        3927,
        0
      ]
    ]
  ],
  [
    5974,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3929,
        0
      ],
      [
        5973,
        0
      ]
    ]
  ],
  [
    5977,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5974,
        0
      ]
    ]
  ],
  [
    3974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5977,
        0
      ]
    ]
  ],
  [
    3975,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3974,
        0
      ]
    ]
  ],
  [
    3969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5652,
        0
      ]
    ]
  ],
  [
    3966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        384,
        0
      ]
    ]
  ],
  [
    3940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5649,
        0
      ]
    ]
  ],
  [
    5975,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5974,
        0
      ]
    ]
  ],
  [
    3931,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5975,
        0
      ]
    ]
  ],
  [
    3941,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3931,
        0
      ],
      [
        3940,
        0
      ]
    ]
  ],
  [
    3937,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5648,
        0
      ]
    ]
  ],
  [
    3934,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3931,
        0
      ]
    ]
  ],
  [
    3932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3931,
        0
      ]
    ]
  ],
  [
    3933,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3932,
        0
      ]
    ]
  ],
  [
    3935,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3933,
        0
      ],
      [
        3934,
        0
      ]
    ]
  ],
  [
    3938,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3935,
        0
      ],
      [
        3937,
        0
      ]
    ]
  ],
  [
    3942,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3941,
        0
      ],
      [
        3938,
        0
      ]
    ]
  ],
  [
    3943,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3942,
        0
      ]
    ]
  ],
  [
    3948,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5650,
        0
      ]
    ]
  ],
  [
    5976,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5974,
        0
      ]
    ]
  ],
  [
    3946,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5976,
        0
      ]
    ]
  ],
  [
    3949,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3946,
        0
      ],
      [
        3948,
        0
      ]
    ]
  ],
  [
    3950,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3949,
        0
      ]
    ]
  ],
  [
    3957,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5651,
        0
      ]
    ]
  ],
  [
    3951,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3946,
        0
      ]
    ]
  ],
  [
    3954,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3951,
        0
      ]
    ]
  ],
  [
    3952,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3951,
        0
      ]
    ]
  ],
  [
    3953,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3952,
        0
      ]
    ]
  ],
  [
    3955,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3953,
        0
      ],
      [
        3954,
        0
      ]
    ]
  ],
  [
    3958,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3955,
        0
      ],
      [
        3957,
        0
      ]
    ]
  ],
  [
    3959,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3950,
        0
      ],
      [
        3958,
        0
      ]
    ]
  ],
  [
    3964,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3959,
        0
      ],
      [
        3943,
        0
      ]
    ]
  ],
  [
    3967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3964,
        0
      ],
      [
        3966,
        0
      ]
    ]
  ],
  [
    3970,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3967,
        0
      ],
      [
        3969,
        0
      ]
    ]
  ],
  [
    6208,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3970,
        0
      ]
    ]
  ],
  [
    6209,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3970,
        0
      ],
      [
        6208,
        0
      ]
    ]
  ],
  [
    6210,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6209,
        0
      ]
    ]
  ],
  [
    6211,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6209,
        0
      ],
      [
        6210,
        0
      ]
    ]
  ],
  [
    3980,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6211,
        0
      ],
      [
        3975,
        0
      ]
    ]
  ],
  [
    3982,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3980,
        0
      ]
    ]
  ],
  [
    3983,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3982,
        0
      ]
    ]
  ],
  [
    3984,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3983,
        0
      ],
      [
        1462,
        0
      ]
    ]
  ],
  [
    3985,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3914,
        0
      ],
      [
        3984,
        0
      ]
    ]
  ],
  [
    1460,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1276,
        0
      ]
    ]
  ],
  [
    1461,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1275,
        0
      ]
    ]
  ],
  [
    4002,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1274,
        0
      ]
    ]
  ],
  [
    5978,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4002,
        0
      ],
      [
        1461,
        0
      ]
    ]
  ],
  [
    3999,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1278,
        0
      ]
    ]
  ],
  [
    3993,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5653,
        0
      ]
    ]
  ],
  [
    3989,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3988,
        0
      ]
    ]
  ],
  [
    3986,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3985,
        0
      ],
      [
        3985,
        0
      ]
    ]
  ],
  [
    3987,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3986,
        0
      ]
    ]
  ],
  [
    3990,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3987,
        0
      ],
      [
        3989,
        0
      ]
    ]
  ],
  [
    3991,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3990,
        0
      ]
    ]
  ],
  [
    3994,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3991,
        0
      ],
      [
        3993,
        0
      ]
    ]
  ],
  [
    3995,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3994,
        0
      ]
    ]
  ],
  [
    3996,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3995,
        0
      ]
    ]
  ],
  [
    3997,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3996,
        0
      ]
    ]
  ],
  [
    3998,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3985,
        0
      ],
      [
        3997,
        0
      ]
    ]
  ],
  [
    4000,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3999,
        0
      ],
      [
        3998,
        0
      ]
    ]
  ],
  [
    5979,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4000,
        0
      ],
      [
        5978,
        0
      ]
    ]
  ],
  [
    5981,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5979,
        0
      ]
    ]
  ],
  [
    5980,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5979,
        0
      ]
    ]
  ],
  [
    4004,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5980,
        0
      ]
    ]
  ],
  [
    4005,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5980,
        0
      ],
      [
        4004,
        0
      ]
    ]
  ],
  [
    4006,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4005,
        0
      ],
      [
        5981,
        0
      ]
    ]
  ],
  [
    4007,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4006,
        0
      ],
      [
        1460,
        0
      ]
    ]
  ],
  [
    4008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3985,
        0
      ],
      [
        4007,
        0
      ]
    ]
  ],
  [
    1458,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1282,
        0
      ]
    ]
  ],
  [
    4066,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1281,
        0
      ]
    ]
  ],
  [
    4038,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1279,
        0
      ]
    ]
  ],
  [
    1459,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1280,
        0
      ]
    ]
  ],
  [
    5982,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1459,
        0
      ],
      [
        4038,
        0
      ],
      [
        4066,
        0
      ]
    ]
  ],
  [
    4022,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1286,
        0
      ]
    ]
  ],
  [
    4016,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5654,
        0
      ]
    ]
  ],
  [
    4012,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4011,
        0
      ]
    ]
  ],
  [
    4009,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4008,
        0
      ],
      [
        4008,
        0
      ]
    ]
  ],
  [
    4010,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4009,
        0
      ]
    ]
  ],
  [
    4013,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4010,
        0
      ],
      [
        4012,
        0
      ]
    ]
  ],
  [
    4014,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4013,
        0
      ]
    ]
  ],
  [
    4017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4014,
        0
      ],
      [
        4016,
        0
      ]
    ]
  ],
  [
    4018,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4017,
        0
      ]
    ]
  ],
  [
    4019,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4018,
        0
      ]
    ]
  ],
  [
    4020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4019,
        0
      ]
    ]
  ],
  [
    4021,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4008,
        0
      ],
      [
        4020,
        0
      ]
    ]
  ],
  [
    4023,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4022,
        0
      ],
      [
        4021,
        0
      ]
    ]
  ],
  [
    5983,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4023,
        0
      ],
      [
        5982,
        0
      ]
    ]
  ],
  [
    5986,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5983,
        0
      ]
    ]
  ],
  [
    4068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5986,
        0
      ]
    ]
  ],
  [
    4069,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4068,
        0
      ]
    ]
  ],
  [
    4063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5659,
        0
      ]
    ]
  ],
  [
    4060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        398,
        0
      ]
    ]
  ],
  [
    4034,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5656,
        0
      ]
    ]
  ],
  [
    5984,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5983,
        0
      ]
    ]
  ],
  [
    4025,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5984,
        0
      ]
    ]
  ],
  [
    4035,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4025,
        0
      ],
      [
        4034,
        0
      ]
    ]
  ],
  [
    4031,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5655,
        0
      ]
    ]
  ],
  [
    4028,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4025,
        0
      ]
    ]
  ],
  [
    4026,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4025,
        0
      ]
    ]
  ],
  [
    4027,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4026,
        0
      ]
    ]
  ],
  [
    4029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4027,
        0
      ],
      [
        4028,
        0
      ]
    ]
  ],
  [
    4032,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4029,
        0
      ],
      [
        4031,
        0
      ]
    ]
  ],
  [
    4036,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4035,
        0
      ],
      [
        4032,
        0
      ]
    ]
  ],
  [
    4037,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4036,
        0
      ]
    ]
  ],
  [
    4042,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5657,
        0
      ]
    ]
  ],
  [
    5985,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5983,
        0
      ]
    ]
  ],
  [
    4040,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5985,
        0
      ]
    ]
  ],
  [
    4043,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4040,
        0
      ],
      [
        4042,
        0
      ]
    ]
  ],
  [
    4044,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4043,
        0
      ]
    ]
  ],
  [
    4051,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5658,
        0
      ]
    ]
  ],
  [
    4045,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4040,
        0
      ]
    ]
  ],
  [
    4048,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4045,
        0
      ]
    ]
  ],
  [
    4046,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4045,
        0
      ]
    ]
  ],
  [
    4047,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4046,
        0
      ]
    ]
  ],
  [
    4049,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4047,
        0
      ],
      [
        4048,
        0
      ]
    ]
  ],
  [
    4052,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4049,
        0
      ],
      [
        4051,
        0
      ]
    ]
  ],
  [
    4053,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4044,
        0
      ],
      [
        4052,
        0
      ]
    ]
  ],
  [
    4058,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4053,
        0
      ],
      [
        4037,
        0
      ]
    ]
  ],
  [
    4061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4058,
        0
      ],
      [
        4060,
        0
      ]
    ]
  ],
  [
    4064,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4061,
        0
      ],
      [
        4063,
        0
      ]
    ]
  ],
  [
    6212,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4064,
        0
      ]
    ]
  ],
  [
    6213,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4064,
        0
      ],
      [
        6212,
        0
      ]
    ]
  ],
  [
    6214,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6213,
        0
      ]
    ]
  ],
  [
    6215,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6213,
        0
      ],
      [
        6214,
        0
      ]
    ]
  ],
  [
    4074,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6215,
        0
      ],
      [
        4069,
        0
      ]
    ]
  ],
  [
    4076,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4074,
        0
      ]
    ]
  ],
  [
    4077,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4076,
        0
      ]
    ]
  ],
  [
    4078,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4077,
        0
      ],
      [
        1458,
        0
      ]
    ]
  ],
  [
    4079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4008,
        0
      ],
      [
        4078,
        0
      ]
    ]
  ],
  [
    1456,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1285,
        0
      ]
    ]
  ],
  [
    1457,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1284,
        0
      ]
    ]
  ],
  [
    4096,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1283,
        0
      ]
    ]
  ],
  [
    5987,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4096,
        0
      ],
      [
        1457,
        0
      ]
    ]
  ],
  [
    4093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1287,
        0
      ]
    ]
  ],
  [
    4087,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5660,
        0
      ]
    ]
  ],
  [
    4083,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4082,
        0
      ]
    ]
  ],
  [
    4080,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4079,
        0
      ],
      [
        4079,
        0
      ]
    ]
  ],
  [
    4081,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4080,
        0
      ]
    ]
  ],
  [
    4084,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4081,
        0
      ],
      [
        4083,
        0
      ]
    ]
  ],
  [
    4085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4084,
        0
      ]
    ]
  ],
  [
    4088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4085,
        0
      ],
      [
        4087,
        0
      ]
    ]
  ],
  [
    4089,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4088,
        0
      ]
    ]
  ],
  [
    4090,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4089,
        0
      ]
    ]
  ],
  [
    4091,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4090,
        0
      ]
    ]
  ],
  [
    4092,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4079,
        0
      ],
      [
        4091,
        0
      ]
    ]
  ],
  [
    4094,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4093,
        0
      ],
      [
        4092,
        0
      ]
    ]
  ],
  [
    5988,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4094,
        0
      ],
      [
        5987,
        0
      ]
    ]
  ],
  [
    5990,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5988,
        0
      ]
    ]
  ],
  [
    5989,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5988,
        0
      ]
    ]
  ],
  [
    4098,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5989,
        0
      ]
    ]
  ],
  [
    4099,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5989,
        0
      ],
      [
        4098,
        0
      ]
    ]
  ],
  [
    4100,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4099,
        0
      ],
      [
        5990,
        0
      ]
    ]
  ],
  [
    4101,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4100,
        0
      ],
      [
        1456,
        0
      ]
    ]
  ],
  [
    4102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4079,
        0
      ],
      [
        4101,
        0
      ]
    ]
  ],
  [
    1454,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1291,
        0
      ]
    ]
  ],
  [
    4160,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1290,
        0
      ]
    ]
  ],
  [
    4132,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1288,
        0
      ]
    ]
  ],
  [
    1455,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1289,
        0
      ]
    ]
  ],
  [
    5991,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1455,
        0
      ],
      [
        4132,
        0
      ],
      [
        4160,
        0
      ]
    ]
  ],
  [
    4116,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1295,
        0
      ]
    ]
  ],
  [
    4110,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5505,
        0
      ]
    ]
  ],
  [
    4106,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4105,
        0
      ]
    ]
  ],
  [
    4103,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4102,
        0
      ],
      [
        4102,
        0
      ]
    ]
  ],
  [
    4104,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4103,
        0
      ]
    ]
  ],
  [
    4107,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4104,
        0
      ],
      [
        4106,
        0
      ]
    ]
  ],
  [
    4108,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4107,
        0
      ]
    ]
  ],
  [
    4111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4108,
        0
      ],
      [
        4110,
        0
      ]
    ]
  ],
  [
    4112,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4111,
        0
      ]
    ]
  ],
  [
    4113,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4112,
        0
      ]
    ]
  ],
  [
    4114,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4113,
        0
      ]
    ]
  ],
  [
    4115,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4102,
        0
      ],
      [
        4114,
        0
      ]
    ]
  ],
  [
    4117,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4116,
        0
      ],
      [
        4115,
        0
      ]
    ]
  ],
  [
    5992,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4117,
        0
      ],
      [
        5991,
        0
      ]
    ]
  ],
  [
    5995,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5992,
        0
      ]
    ]
  ],
  [
    4162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5995,
        0
      ]
    ]
  ],
  [
    4163,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4162,
        0
      ]
    ]
  ],
  [
    4157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5663,
        0
      ]
    ]
  ],
  [
    4154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        412,
        0
      ]
    ]
  ],
  [
    4128,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5507,
        0
      ]
    ]
  ],
  [
    5993,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5992,
        0
      ]
    ]
  ],
  [
    4119,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5993,
        0
      ]
    ]
  ],
  [
    4129,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4119,
        0
      ],
      [
        4128,
        0
      ]
    ]
  ],
  [
    4125,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5506,
        0
      ]
    ]
  ],
  [
    4122,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4119,
        0
      ]
    ]
  ],
  [
    4120,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4119,
        0
      ]
    ]
  ],
  [
    4121,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4120,
        0
      ]
    ]
  ],
  [
    4123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4121,
        0
      ],
      [
        4122,
        0
      ]
    ]
  ],
  [
    4126,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4123,
        0
      ],
      [
        4125,
        0
      ]
    ]
  ],
  [
    4130,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4129,
        0
      ],
      [
        4126,
        0
      ]
    ]
  ],
  [
    4131,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4130,
        0
      ]
    ]
  ],
  [
    4136,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5661,
        0
      ]
    ]
  ],
  [
    5994,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5992,
        0
      ]
    ]
  ],
  [
    4134,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5994,
        0
      ]
    ]
  ],
  [
    4137,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4134,
        0
      ],
      [
        4136,
        0
      ]
    ]
  ],
  [
    4138,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4137,
        0
      ]
    ]
  ],
  [
    4145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5662,
        0
      ]
    ]
  ],
  [
    4139,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4134,
        0
      ]
    ]
  ],
  [
    4142,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4139,
        0
      ]
    ]
  ],
  [
    4140,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4139,
        0
      ]
    ]
  ],
  [
    4141,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4140,
        0
      ]
    ]
  ],
  [
    4143,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4141,
        0
      ],
      [
        4142,
        0
      ]
    ]
  ],
  [
    4146,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4143,
        0
      ],
      [
        4145,
        0
      ]
    ]
  ],
  [
    4147,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4138,
        0
      ],
      [
        4146,
        0
      ]
    ]
  ],
  [
    4152,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4147,
        0
      ],
      [
        4131,
        0
      ]
    ]
  ],
  [
    4155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4152,
        0
      ],
      [
        4154,
        0
      ]
    ]
  ],
  [
    4158,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4155,
        0
      ],
      [
        4157,
        0
      ]
    ]
  ],
  [
    6216,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4158,
        0
      ]
    ]
  ],
  [
    6217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4158,
        0
      ],
      [
        6216,
        0
      ]
    ]
  ],
  [
    6218,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6217,
        0
      ]
    ]
  ],
  [
    6219,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6217,
        0
      ],
      [
        6218,
        0
      ]
    ]
  ],
  [
    4168,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6219,
        0
      ],
      [
        4163,
        0
      ]
    ]
  ],
  [
    4170,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4168,
        0
      ]
    ]
  ],
  [
    4171,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4170,
        0
      ]
    ]
  ],
  [
    4172,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4171,
        0
      ],
      [
        1454,
        0
      ]
    ]
  ],
  [
    4173,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4102,
        0
      ],
      [
        4172,
        0
      ]
    ]
  ],
  [
    1452,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1294,
        0
      ]
    ]
  ],
  [
    1453,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1293,
        0
      ]
    ]
  ],
  [
    4190,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1292,
        0
      ]
    ]
  ],
  [
    5996,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4190,
        0
      ],
      [
        1453,
        0
      ]
    ]
  ],
  [
    4187,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1296,
        0
      ]
    ]
  ],
  [
    4181,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5664,
        0
      ]
    ]
  ],
  [
    4177,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4176,
        0
      ]
    ]
  ],
  [
    4174,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4173,
        0
      ],
      [
        4173,
        0
      ]
    ]
  ],
  [
    4175,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4174,
        0
      ]
    ]
  ],
  [
    4178,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4175,
        0
      ],
      [
        4177,
        0
      ]
    ]
  ],
  [
    4179,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4178,
        0
      ]
    ]
  ],
  [
    4182,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4179,
        0
      ],
      [
        4181,
        0
      ]
    ]
  ],
  [
    4183,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4182,
        0
      ]
    ]
  ],
  [
    4184,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4183,
        0
      ]
    ]
  ],
  [
    4185,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4184,
        0
      ]
    ]
  ],
  [
    4186,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4173,
        0
      ],
      [
        4185,
        0
      ]
    ]
  ],
  [
    4188,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4187,
        0
      ],
      [
        4186,
        0
      ]
    ]
  ],
  [
    5997,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4188,
        0
      ],
      [
        5996,
        0
      ]
    ]
  ],
  [
    5999,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5997,
        0
      ]
    ]
  ],
  [
    5998,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5997,
        0
      ]
    ]
  ],
  [
    4192,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5998,
        0
      ]
    ]
  ],
  [
    4193,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5998,
        0
      ],
      [
        4192,
        0
      ]
    ]
  ],
  [
    4194,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4193,
        0
      ],
      [
        5999,
        0
      ]
    ]
  ],
  [
    4195,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4194,
        0
      ],
      [
        1452,
        0
      ]
    ]
  ],
  [
    4196,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4173,
        0
      ],
      [
        4195,
        0
      ]
    ]
  ],
  [
    1450,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1300,
        0
      ]
    ]
  ],
  [
    4254,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1299,
        0
      ]
    ]
  ],
  [
    4226,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1297,
        0
      ]
    ]
  ],
  [
    1451,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1298,
        0
      ]
    ]
  ],
  [
    6000,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1451,
        0
      ],
      [
        4226,
        0
      ],
      [
        4254,
        0
      ]
    ]
  ],
  [
    4210,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1304,
        0
      ]
    ]
  ],
  [
    4204,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5665,
        0
      ]
    ]
  ],
  [
    4200,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4199,
        0
      ]
    ]
  ],
  [
    4197,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4196,
        0
      ],
      [
        4196,
        0
      ]
    ]
  ],
  [
    4198,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4197,
        0
      ]
    ]
  ],
  [
    4201,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4198,
        0
      ],
      [
        4200,
        0
      ]
    ]
  ],
  [
    4202,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4201,
        0
      ]
    ]
  ],
  [
    4205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4202,
        0
      ],
      [
        4204,
        0
      ]
    ]
  ],
  [
    4206,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4205,
        0
      ]
    ]
  ],
  [
    4207,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4206,
        0
      ]
    ]
  ],
  [
    4208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4207,
        0
      ]
    ]
  ],
  [
    4209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4196,
        0
      ],
      [
        4208,
        0
      ]
    ]
  ],
  [
    4211,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4210,
        0
      ],
      [
        4209,
        0
      ]
    ]
  ],
  [
    6001,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4211,
        0
      ],
      [
        6000,
        0
      ]
    ]
  ],
  [
    6004,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6004,
        0
      ]
    ]
  ],
  [
    4257,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4256,
        0
      ]
    ]
  ],
  [
    4251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5670,
        0
      ]
    ]
  ],
  [
    4248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        426,
        0
      ]
    ]
  ],
  [
    4222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5667,
        0
      ]
    ]
  ],
  [
    6002,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4213,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6002,
        0
      ]
    ]
  ],
  [
    4223,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4213,
        0
      ],
      [
        4222,
        0
      ]
    ]
  ],
  [
    4219,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5666,
        0
      ]
    ]
  ],
  [
    4216,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4213,
        0
      ]
    ]
  ],
  [
    4214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4213,
        0
      ]
    ]
  ],
  [
    4215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4214,
        0
      ]
    ]
  ],
  [
    4217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4215,
        0
      ],
      [
        4216,
        0
      ]
    ]
  ],
  [
    4220,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4217,
        0
      ],
      [
        4219,
        0
      ]
    ]
  ],
  [
    4224,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4223,
        0
      ],
      [
        4220,
        0
      ]
    ]
  ],
  [
    4225,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4224,
        0
      ]
    ]
  ],
  [
    4230,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5668,
        0
      ]
    ]
  ],
  [
    6003,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4228,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6003,
        0
      ]
    ]
  ],
  [
    4231,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4228,
        0
      ],
      [
        4230,
        0
      ]
    ]
  ],
  [
    4232,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4231,
        0
      ]
    ]
  ],
  [
    4239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5669,
        0
      ]
    ]
  ],
  [
    4233,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4228,
        0
      ]
    ]
  ],
  [
    4236,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4234,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4235,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4234,
        0
      ]
    ]
  ],
  [
    4237,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4235,
        0
      ],
      [
        4236,
        0
      ]
    ]
  ],
  [
    4240,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4237,
        0
      ],
      [
        4239,
        0
      ]
    ]
  ],
  [
    4241,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4232,
        0
      ],
      [
        4240,
        0
      ]
    ]
  ],
  [
    4246,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4241,
        0
      ],
      [
        4225,
        0
      ]
    ]
  ],
  [
    4249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4246,
        0
      ],
      [
        4248,
        0
      ]
    ]
  ],
  [
    4252,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4249,
        0
      ],
      [
        4251,
        0
      ]
    ]
  ],
  [
    6220,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4252,
        0
      ]
    ]
  ],
  [
    6221,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4252,
        0
      ],
      [
        6220,
        0
      ]
    ]
  ],
  [
    6222,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6221,
        0
      ]
    ]
  ],
  [
    6223,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6221,
        0
      ],
      [
        6222,
        0
      ]
    ]
  ],
  [
    4262,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6223,
        0
      ],
      [
        4257,
        0
      ]
    ]
  ],
  [
    4264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4262,
        0
      ]
    ]
  ],
  [
    4265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4264,
        0
      ]
    ]
  ],
  [
    4266,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4265,
        0
      ],
      [
        1450,
        0
      ]
    ]
  ],
  [
    4267,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4196,
        0
      ],
      [
        4266,
        0
      ]
    ]
  ],
  [
    1448,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1303,
        0
      ]
    ]
  ],
  [
    1449,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1302,
        0
      ]
    ]
  ],
  [
    4284,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1301,
        0
      ]
    ]
  ],
  [
    6005,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4284,
        0
      ],
      [
        1449,
        0
      ]
    ]
  ],
  [
    4281,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1305,
        0
      ]
    ]
  ],
  [
    4275,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5671,
        0
      ]
    ]
  ],
  [
    4271,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4270,
        0
      ]
    ]
  ],
  [
    4268,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4267,
        0
      ],
      [
        4267,
        0
      ]
    ]
  ],
  [
    4269,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4268,
        0
      ]
    ]
  ],
  [
    4272,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4269,
        0
      ],
      [
        4271,
        0
      ]
    ]
  ],
  [
    4273,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4272,
        0
      ]
    ]
  ],
  [
    4276,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4273,
        0
      ],
      [
        4275,
        0
      ]
    ]
  ],
  [
    4277,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4276,
        0
      ]
    ]
  ],
  [
    4278,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4277,
        0
      ]
    ]
  ],
  [
    4279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4278,
        0
      ]
    ]
  ],
  [
    4280,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4267,
        0
      ],
      [
        4279,
        0
      ]
    ]
  ],
  [
    4282,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4281,
        0
      ],
      [
        4280,
        0
      ]
    ]
  ],
  [
    6006,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4282,
        0
      ],
      [
        6005,
        0
      ]
    ]
  ],
  [
    6008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6006,
        0
      ]
    ]
  ],
  [
    6007,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6006,
        0
      ]
    ]
  ],
  [
    4286,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6007,
        0
      ]
    ]
  ],
  [
    4287,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6007,
        0
      ],
      [
        4286,
        0
      ]
    ]
  ],
  [
    4288,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4287,
        0
      ],
      [
        6008,
        0
      ]
    ]
  ],
  [
    4289,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4288,
        0
      ],
      [
        1448,
        0
      ]
    ]
  ],
  [
    4290,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4267,
        0
      ],
      [
        4289,
        0
      ]
    ]
  ],
  [
    1446,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1309,
        0
      ]
    ]
  ],
  [
    4348,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1308,
        0
      ]
    ]
  ],
  [
    4320,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1306,
        0
      ]
    ]
  ],
  [
    1447,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1307,
        0
      ]
    ]
  ],
  [
    6009,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1447,
        0
      ],
      [
        4320,
        0
      ],
      [
        4348,
        0
      ]
    ]
  ],
  [
    4304,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1313,
        0
      ]
    ]
  ],
  [
    4298,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5672,
        0
      ]
    ]
  ],
  [
    4294,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4293,
        0
      ]
    ]
  ],
  [
    4291,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4290,
        0
      ],
      [
        4290,
        0
      ]
    ]
  ],
  [
    4292,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4291,
        0
      ]
    ]
  ],
  [
    4295,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4292,
        0
      ],
      [
        4294,
        0
      ]
    ]
  ],
  [
    4296,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4295,
        0
      ]
    ]
  ],
  [
    4299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4296,
        0
      ],
      [
        4298,
        0
      ]
    ]
  ],
  [
    4300,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4299,
        0
      ]
    ]
  ],
  [
    4301,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4300,
        0
      ]
    ]
  ],
  [
    4302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4301,
        0
      ]
    ]
  ],
  [
    4303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4290,
        0
      ],
      [
        4302,
        0
      ]
    ]
  ],
  [
    4305,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4304,
        0
      ],
      [
        4303,
        0
      ]
    ]
  ],
  [
    6010,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4305,
        0
      ],
      [
        6009,
        0
      ]
    ]
  ],
  [
    6013,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6010,
        0
      ]
    ]
  ],
  [
    4350,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6013,
        0
      ]
    ]
  ],
  [
    4351,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4350,
        0
      ]
    ]
  ],
  [
    4345,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5677,
        0
      ]
    ]
  ],
  [
    4342,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        440,
        0
      ]
    ]
  ],
  [
    4316,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5674,
        0
      ]
    ]
  ],
  [
    6011,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6010,
        0
      ]
    ]
  ],
  [
    4307,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6011,
        0
      ]
    ]
  ],
  [
    4317,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4307,
        0
      ],
      [
        4316,
        0
      ]
    ]
  ],
  [
    4313,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5673,
        0
      ]
    ]
  ],
  [
    4310,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4307,
        0
      ]
    ]
  ],
  [
    4308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4307,
        0
      ]
    ]
  ],
  [
    4309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4308,
        0
      ]
    ]
  ],
  [
    4311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4309,
        0
      ],
      [
        4310,
        0
      ]
    ]
  ],
  [
    4314,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4311,
        0
      ],
      [
        4313,
        0
      ]
    ]
  ],
  [
    4318,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4317,
        0
      ],
      [
        4314,
        0
      ]
    ]
  ],
  [
    4319,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4318,
        0
      ]
    ]
  ],
  [
    4324,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5675,
        0
      ]
    ]
  ],
  [
    6012,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6010,
        0
      ]
    ]
  ],
  [
    4322,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6012,
        0
      ]
    ]
  ],
  [
    4325,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4322,
        0
      ],
      [
        4324,
        0
      ]
    ]
  ],
  [
    4326,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4325,
        0
      ]
    ]
  ],
  [
    4333,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5676,
        0
      ]
    ]
  ],
  [
    4327,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4322,
        0
      ]
    ]
  ],
  [
    4330,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4327,
        0
      ]
    ]
  ],
  [
    4328,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4327,
        0
      ]
    ]
  ],
  [
    4329,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4328,
        0
      ]
    ]
  ],
  [
    4331,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4329,
        0
      ],
      [
        4330,
        0
      ]
    ]
  ],
  [
    4334,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4331,
        0
      ],
      [
        4333,
        0
      ]
    ]
  ],
  [
    4335,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4326,
        0
      ],
      [
        4334,
        0
      ]
    ]
  ],
  [
    4340,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4335,
        0
      ],
      [
        4319,
        0
      ]
    ]
  ],
  [
    4343,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4340,
        0
      ],
      [
        4342,
        0
      ]
    ]
  ],
  [
    4346,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4343,
        0
      ],
      [
        4345,
        0
      ]
    ]
  ],
  [
    6224,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4346,
        0
      ]
    ]
  ],
  [
    6225,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4346,
        0
      ],
      [
        6224,
        0
      ]
    ]
  ],
  [
    6226,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6225,
        0
      ]
    ]
  ],
  [
    6227,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6225,
        0
      ],
      [
        6226,
        0
      ]
    ]
  ],
  [
    4356,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6227,
        0
      ],
      [
        4351,
        0
      ]
    ]
  ],
  [
    4358,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4356,
        0
      ]
    ]
  ],
  [
    4359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4358,
        0
      ]
    ]
  ],
  [
    4360,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4359,
        0
      ],
      [
        1446,
        0
      ]
    ]
  ],
  [
    4361,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4290,
        0
      ],
      [
        4360,
        0
      ]
    ]
  ],
  [
    1444,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1312,
        0
      ]
    ]
  ],
  [
    1445,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1311,
        0
      ]
    ]
  ],
  [
    4378,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1310,
        0
      ]
    ]
  ],
  [
    6014,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4378,
        0
      ],
      [
        1445,
        0
      ]
    ]
  ],
  [
    4375,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1314,
        0
      ]
    ]
  ],
  [
    4369,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5678,
        0
      ]
    ]
  ],
  [
    4365,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4364,
        0
      ]
    ]
  ],
  [
    4362,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4361,
        0
      ],
      [
        4361,
        0
      ]
    ]
  ],
  [
    4363,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4362,
        0
      ]
    ]
  ],
  [
    4366,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4363,
        0
      ],
      [
        4365,
        0
      ]
    ]
  ],
  [
    4367,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4366,
        0
      ]
    ]
  ],
  [
    4370,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4367,
        0
      ],
      [
        4369,
        0
      ]
    ]
  ],
  [
    4371,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4370,
        0
      ]
    ]
  ],
  [
    4372,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4371,
        0
      ]
    ]
  ],
  [
    4373,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4372,
        0
      ]
    ]
  ],
  [
    4374,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4361,
        0
      ],
      [
        4373,
        0
      ]
    ]
  ],
  [
    4376,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4375,
        0
      ],
      [
        4374,
        0
      ]
    ]
  ],
  [
    6015,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4376,
        0
      ],
      [
        6014,
        0
      ]
    ]
  ],
  [
    6017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6015,
        0
      ]
    ]
  ],
  [
    6016,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6015,
        0
      ]
    ]
  ],
  [
    4380,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6016,
        0
      ]
    ]
  ],
  [
    4381,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6016,
        0
      ],
      [
        4380,
        0
      ]
    ]
  ],
  [
    4382,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4381,
        0
      ],
      [
        6017,
        0
      ]
    ]
  ],
  [
    4383,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4382,
        0
      ],
      [
        1444,
        0
      ]
    ]
  ],
  [
    4384,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4361,
        0
      ],
      [
        4383,
        0
      ]
    ]
  ],
  [
    1442,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1318,
        0
      ]
    ]
  ],
  [
    4442,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1317,
        0
      ]
    ]
  ],
  [
    4414,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1315,
        0
      ]
    ]
  ],
  [
    1443,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1316,
        0
      ]
    ]
  ],
  [
    6018,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1443,
        0
      ],
      [
        4414,
        0
      ],
      [
        4442,
        0
      ]
    ]
  ],
  [
    4398,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1322,
        0
      ]
    ]
  ],
  [
    4392,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5679,
        0
      ]
    ]
  ],
  [
    4388,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4387,
        0
      ]
    ]
  ],
  [
    4385,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4384,
        0
      ],
      [
        4384,
        0
      ]
    ]
  ],
  [
    4386,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4385,
        0
      ]
    ]
  ],
  [
    4389,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4386,
        0
      ],
      [
        4388,
        0
      ]
    ]
  ],
  [
    4390,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4389,
        0
      ]
    ]
  ],
  [
    4393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4390,
        0
      ],
      [
        4392,
        0
      ]
    ]
  ],
  [
    4394,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4393,
        0
      ]
    ]
  ],
  [
    4395,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4394,
        0
      ]
    ]
  ],
  [
    4396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4395,
        0
      ]
    ]
  ],
  [
    4397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4384,
        0
      ],
      [
        4396,
        0
      ]
    ]
  ],
  [
    4399,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4398,
        0
      ],
      [
        4397,
        0
      ]
    ]
  ],
  [
    6019,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4399,
        0
      ],
      [
        6018,
        0
      ]
    ]
  ],
  [
    6022,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6019,
        0
      ]
    ]
  ],
  [
    4444,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6022,
        0
      ]
    ]
  ],
  [
    4445,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4444,
        0
      ]
    ]
  ],
  [
    4439,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5684,
        0
      ]
    ]
  ],
  [
    4436,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        454,
        0
      ]
    ]
  ],
  [
    4410,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5681,
        0
      ]
    ]
  ],
  [
    6020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6019,
        0
      ]
    ]
  ],
  [
    4401,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6020,
        0
      ]
    ]
  ],
  [
    4411,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4401,
        0
      ],
      [
        4410,
        0
      ]
    ]
  ],
  [
    4407,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5680,
        0
      ]
    ]
  ],
  [
    4404,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4401,
        0
      ]
    ]
  ],
  [
    4402,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4401,
        0
      ]
    ]
  ],
  [
    4403,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4402,
        0
      ]
    ]
  ],
  [
    4405,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4403,
        0
      ],
      [
        4404,
        0
      ]
    ]
  ],
  [
    4408,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4405,
        0
      ],
      [
        4407,
        0
      ]
    ]
  ],
  [
    4412,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4411,
        0
      ],
      [
        4408,
        0
      ]
    ]
  ],
  [
    4413,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4412,
        0
      ]
    ]
  ],
  [
    4418,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5682,
        0
      ]
    ]
  ],
  [
    6021,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6019,
        0
      ]
    ]
  ],
  [
    4416,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6021,
        0
      ]
    ]
  ],
  [
    4419,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4416,
        0
      ],
      [
        4418,
        0
      ]
    ]
  ],
  [
    4420,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4419,
        0
      ]
    ]
  ],
  [
    4427,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5683,
        0
      ]
    ]
  ],
  [
    4421,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4416,
        0
      ]
    ]
  ],
  [
    4424,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4421,
        0
      ]
    ]
  ],
  [
    4422,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4421,
        0
      ]
    ]
  ],
  [
    4423,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4422,
        0
      ]
    ]
  ],
  [
    4425,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4423,
        0
      ],
      [
        4424,
        0
      ]
    ]
  ],
  [
    4428,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4425,
        0
      ],
      [
        4427,
        0
      ]
    ]
  ],
  [
    4429,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4420,
        0
      ],
      [
        4428,
        0
      ]
    ]
  ],
  [
    4434,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4429,
        0
      ],
      [
        4413,
        0
      ]
    ]
  ],
  [
    4437,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4434,
        0
      ],
      [
        4436,
        0
      ]
    ]
  ],
  [
    4440,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4437,
        0
      ],
      [
        4439,
        0
      ]
    ]
  ],
  [
    6228,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4440,
        0
      ]
    ]
  ],
  [
    6229,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4440,
        0
      ],
      [
        6228,
        0
      ]
    ]
  ],
  [
    6230,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6229,
        0
      ]
    ]
  ],
  [
    6231,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6229,
        0
      ],
      [
        6230,
        0
      ]
    ]
  ],
  [
    4450,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6231,
        0
      ],
      [
        4445,
        0
      ]
    ]
  ],
  [
    4452,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4450,
        0
      ]
    ]
  ],
  [
    4453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4452,
        0
      ]
    ]
  ],
  [
    4454,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4453,
        0
      ],
      [
        1442,
        0
      ]
    ]
  ],
  [
    4455,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4384,
        0
      ],
      [
        4454,
        0
      ]
    ]
  ],
  [
    1440,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1321,
        0
      ]
    ]
  ],
  [
    1441,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1320,
        0
      ]
    ]
  ],
  [
    4472,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1319,
        0
      ]
    ]
  ],
  [
    6023,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4472,
        0
      ],
      [
        1441,
        0
      ]
    ]
  ],
  [
    4469,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1323,
        0
      ]
    ]
  ],
  [
    4463,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5685,
        0
      ]
    ]
  ],
  [
    4459,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4458,
        0
      ]
    ]
  ],
  [
    4456,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4455,
        0
      ],
      [
        4455,
        0
      ]
    ]
  ],
  [
    4457,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4456,
        0
      ]
    ]
  ],
  [
    4460,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4457,
        0
      ],
      [
        4459,
        0
      ]
    ]
  ],
  [
    4461,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4460,
        0
      ]
    ]
  ],
  [
    4464,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4461,
        0
      ],
      [
        4463,
        0
      ]
    ]
  ],
  [
    4465,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4464,
        0
      ]
    ]
  ],
  [
    4466,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4465,
        0
      ]
    ]
  ],
  [
    4467,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4466,
        0
      ]
    ]
  ],
  [
    4468,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4455,
        0
      ],
      [
        4467,
        0
      ]
    ]
  ],
  [
    4470,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4469,
        0
      ],
      [
        4468,
        0
      ]
    ]
  ],
  [
    6024,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4470,
        0
      ],
      [
        6023,
        0
      ]
    ]
  ],
  [
    6026,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6024,
        0
      ]
    ]
  ],
  [
    6025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6024,
        0
      ]
    ]
  ],
  [
    4474,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6025,
        0
      ]
    ]
  ],
  [
    4475,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6025,
        0
      ],
      [
        4474,
        0
      ]
    ]
  ],
  [
    4476,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4475,
        0
      ],
      [
        6026,
        0
      ]
    ]
  ],
  [
    4477,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4476,
        0
      ],
      [
        1440,
        0
      ]
    ]
  ],
  [
    4478,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4455,
        0
      ],
      [
        4477,
        0
      ]
    ]
  ],
  [
    1438,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1327,
        0
      ]
    ]
  ],
  [
    4536,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1326,
        0
      ]
    ]
  ],
  [
    4508,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1324,
        0
      ]
    ]
  ],
  [
    1439,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1325,
        0
      ]
    ]
  ],
  [
    6027,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1439,
        0
      ],
      [
        4508,
        0
      ],
      [
        4536,
        0
      ]
    ]
  ],
  [
    4492,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1331,
        0
      ]
    ]
  ],
  [
    4486,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5686,
        0
      ]
    ]
  ],
  [
    4482,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4481,
        0
      ]
    ]
  ],
  [
    4479,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4478,
        0
      ],
      [
        4478,
        0
      ]
    ]
  ],
  [
    4480,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4479,
        0
      ]
    ]
  ],
  [
    4483,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4480,
        0
      ],
      [
        4482,
        0
      ]
    ]
  ],
  [
    4484,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4483,
        0
      ]
    ]
  ],
  [
    4487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4484,
        0
      ],
      [
        4486,
        0
      ]
    ]
  ],
  [
    4488,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4487,
        0
      ]
    ]
  ],
  [
    4489,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4488,
        0
      ]
    ]
  ],
  [
    4490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4489,
        0
      ]
    ]
  ],
  [
    4491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4478,
        0
      ],
      [
        4490,
        0
      ]
    ]
  ],
  [
    4493,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4492,
        0
      ],
      [
        4491,
        0
      ]
    ]
  ],
  [
    6028,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4493,
        0
      ],
      [
        6027,
        0
      ]
    ]
  ],
  [
    6031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6028,
        0
      ]
    ]
  ],
  [
    4538,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6031,
        0
      ]
    ]
  ],
  [
    4539,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4538,
        0
      ]
    ]
  ],
  [
    4533,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5578,
        0
      ]
    ]
  ],
  [
    4530,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        468,
        0
      ]
    ]
  ],
  [
    4504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5688,
        0
      ]
    ]
  ],
  [
    6029,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6028,
        0
      ]
    ]
  ],
  [
    4495,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6029,
        0
      ]
    ]
  ],
  [
    4505,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4495,
        0
      ],
      [
        4504,
        0
      ]
    ]
  ],
  [
    4501,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5687,
        0
      ]
    ]
  ],
  [
    4498,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4495,
        0
      ]
    ]
  ],
  [
    4496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4495,
        0
      ]
    ]
  ],
  [
    4497,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4496,
        0
      ]
    ]
  ],
  [
    4499,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4497,
        0
      ],
      [
        4498,
        0
      ]
    ]
  ],
  [
    4502,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4499,
        0
      ],
      [
        4501,
        0
      ]
    ]
  ],
  [
    4506,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4505,
        0
      ],
      [
        4502,
        0
      ]
    ]
  ],
  [
    4507,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4506,
        0
      ]
    ]
  ],
  [
    4512,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5689,
        0
      ]
    ]
  ],
  [
    6030,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6028,
        0
      ]
    ]
  ],
  [
    4510,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6030,
        0
      ]
    ]
  ],
  [
    4513,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4510,
        0
      ],
      [
        4512,
        0
      ]
    ]
  ],
  [
    4514,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4513,
        0
      ]
    ]
  ],
  [
    4521,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5690,
        0
      ]
    ]
  ],
  [
    4515,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4510,
        0
      ]
    ]
  ],
  [
    4518,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4515,
        0
      ]
    ]
  ],
  [
    4516,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4515,
        0
      ]
    ]
  ],
  [
    4517,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4516,
        0
      ]
    ]
  ],
  [
    4519,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4517,
        0
      ],
      [
        4518,
        0
      ]
    ]
  ],
  [
    4522,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4519,
        0
      ],
      [
        4521,
        0
      ]
    ]
  ],
  [
    4523,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4514,
        0
      ],
      [
        4522,
        0
      ]
    ]
  ],
  [
    4528,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4523,
        0
      ],
      [
        4507,
        0
      ]
    ]
  ],
  [
    4531,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4528,
        0
      ],
      [
        4530,
        0
      ]
    ]
  ],
  [
    4534,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4531,
        0
      ],
      [
        4533,
        0
      ]
    ]
  ],
  [
    6232,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4534,
        0
      ]
    ]
  ],
  [
    6233,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4534,
        0
      ],
      [
        6232,
        0
      ]
    ]
  ],
  [
    6234,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6233,
        0
      ]
    ]
  ],
  [
    6235,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6233,
        0
      ],
      [
        6234,
        0
      ]
    ]
  ],
  [
    4544,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6235,
        0
      ],
      [
        4539,
        0
      ]
    ]
  ],
  [
    4546,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4544,
        0
      ]
    ]
  ],
  [
    4547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4546,
        0
      ]
    ]
  ],
  [
    4548,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4547,
        0
      ],
      [
        1438,
        0
      ]
    ]
  ],
  [
    4549,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4478,
        0
      ],
      [
        4548,
        0
      ]
    ]
  ],
  [
    1436,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1330,
        0
      ]
    ]
  ],
  [
    1437,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1329,
        0
      ]
    ]
  ],
  [
    4566,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1328,
        0
      ]
    ]
  ],
  [
    6032,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4566,
        0
      ],
      [
        1437,
        0
      ]
    ]
  ],
  [
    4563,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1332,
        0
      ]
    ]
  ],
  [
    4557,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5579,
        0
      ]
    ]
  ],
  [
    4553,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4552,
        0
      ]
    ]
  ],
  [
    4550,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4549,
        0
      ],
      [
        4549,
        0
      ]
    ]
  ],
  [
    4551,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4550,
        0
      ]
    ]
  ],
  [
    4554,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4551,
        0
      ],
      [
        4553,
        0
      ]
    ]
  ],
  [
    4555,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4554,
        0
      ]
    ]
  ],
  [
    4558,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4555,
        0
      ],
      [
        4557,
        0
      ]
    ]
  ],
  [
    4559,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4558,
        0
      ]
    ]
  ],
  [
    4560,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4559,
        0
      ]
    ]
  ],
  [
    4561,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4560,
        0
      ]
    ]
  ],
  [
    4562,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4549,
        0
      ],
      [
        4561,
        0
      ]
    ]
  ],
  [
    4564,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4563,
        0
      ],
      [
        4562,
        0
      ]
    ]
  ],
  [
    6033,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4564,
        0
      ],
      [
        6032,
        0
      ]
    ]
  ],
  [
    6035,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6033,
        0
      ]
    ]
  ],
  [
    6034,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6033,
        0
      ]
    ]
  ],
  [
    4568,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6034,
        0
      ]
    ]
  ],
  [
    4569,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6034,
        0
      ],
      [
        4568,
        0
      ]
    ]
  ],
  [
    4570,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4569,
        0
      ],
      [
        6035,
        0
      ]
    ]
  ],
  [
    4571,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4570,
        0
      ],
      [
        1436,
        0
      ]
    ]
  ],
  [
    4572,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4549,
        0
      ],
      [
        4571,
        0
      ]
    ]
  ],
  [
    1434,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1336,
        0
      ]
    ]
  ],
  [
    4630,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1335,
        0
      ]
    ]
  ],
  [
    4602,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1333,
        0
      ]
    ]
  ],
  [
    1435,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1334,
        0
      ]
    ]
  ],
  [
    6036,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1435,
        0
      ],
      [
        4602,
        0
      ],
      [
        4630,
        0
      ]
    ]
  ],
  [
    4586,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1340,
        0
      ]
    ]
  ],
  [
    4580,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5691,
        0
      ]
    ]
  ],
  [
    4576,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4575,
        0
      ]
    ]
  ],
  [
    4573,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4572,
        0
      ],
      [
        4572,
        0
      ]
    ]
  ],
  [
    4574,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4573,
        0
      ]
    ]
  ],
  [
    4577,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4574,
        0
      ],
      [
        4576,
        0
      ]
    ]
  ],
  [
    4578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4577,
        0
      ]
    ]
  ],
  [
    4581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4578,
        0
      ],
      [
        4580,
        0
      ]
    ]
  ],
  [
    4582,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4581,
        0
      ]
    ]
  ],
  [
    4583,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4582,
        0
      ]
    ]
  ],
  [
    4584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4583,
        0
      ]
    ]
  ],
  [
    4585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4572,
        0
      ],
      [
        4584,
        0
      ]
    ]
  ],
  [
    4587,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4586,
        0
      ],
      [
        4585,
        0
      ]
    ]
  ],
  [
    6037,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4587,
        0
      ],
      [
        6036,
        0
      ]
    ]
  ],
  [
    6040,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6037,
        0
      ]
    ]
  ],
  [
    4632,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6040,
        0
      ]
    ]
  ],
  [
    4633,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4632,
        0
      ]
    ]
  ],
  [
    4627,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5696,
        0
      ]
    ]
  ],
  [
    4624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        482,
        0
      ]
    ]
  ],
  [
    4598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5693,
        0
      ]
    ]
  ],
  [
    6038,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6037,
        0
      ]
    ]
  ],
  [
    4589,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6038,
        0
      ]
    ]
  ],
  [
    4599,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4589,
        0
      ],
      [
        4598,
        0
      ]
    ]
  ],
  [
    4595,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5692,
        0
      ]
    ]
  ],
  [
    4592,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4589,
        0
      ]
    ]
  ],
  [
    4590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4589,
        0
      ]
    ]
  ],
  [
    4591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4590,
        0
      ]
    ]
  ],
  [
    4593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4591,
        0
      ],
      [
        4592,
        0
      ]
    ]
  ],
  [
    4596,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4593,
        0
      ],
      [
        4595,
        0
      ]
    ]
  ],
  [
    4600,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4599,
        0
      ],
      [
        4596,
        0
      ]
    ]
  ],
  [
    4601,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4600,
        0
      ]
    ]
  ],
  [
    4606,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5694,
        0
      ]
    ]
  ],
  [
    6039,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6037,
        0
      ]
    ]
  ],
  [
    4604,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6039,
        0
      ]
    ]
  ],
  [
    4607,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4604,
        0
      ],
      [
        4606,
        0
      ]
    ]
  ],
  [
    4608,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4607,
        0
      ]
    ]
  ],
  [
    4615,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5695,
        0
      ]
    ]
  ],
  [
    4609,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4604,
        0
      ]
    ]
  ],
  [
    4612,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4609,
        0
      ]
    ]
  ],
  [
    4610,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4609,
        0
      ]
    ]
  ],
  [
    4611,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4610,
        0
      ]
    ]
  ],
  [
    4613,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4611,
        0
      ],
      [
        4612,
        0
      ]
    ]
  ],
  [
    4616,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4613,
        0
      ],
      [
        4615,
        0
      ]
    ]
  ],
  [
    4617,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4608,
        0
      ],
      [
        4616,
        0
      ]
    ]
  ],
  [
    4622,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4617,
        0
      ],
      [
        4601,
        0
      ]
    ]
  ],
  [
    4625,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4622,
        0
      ],
      [
        4624,
        0
      ]
    ]
  ],
  [
    4628,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4625,
        0
      ],
      [
        4627,
        0
      ]
    ]
  ],
  [
    6236,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4628,
        0
      ]
    ]
  ],
  [
    6237,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4628,
        0
      ],
      [
        6236,
        0
      ]
    ]
  ],
  [
    6238,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6237,
        0
      ]
    ]
  ],
  [
    6239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6237,
        0
      ],
      [
        6238,
        0
      ]
    ]
  ],
  [
    4638,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6239,
        0
      ],
      [
        4633,
        0
      ]
    ]
  ],
  [
    4640,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4638,
        0
      ]
    ]
  ],
  [
    4641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4640,
        0
      ]
    ]
  ],
  [
    4642,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4641,
        0
      ],
      [
        1434,
        0
      ]
    ]
  ],
  [
    4643,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4572,
        0
      ],
      [
        4642,
        0
      ]
    ]
  ],
  [
    1432,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1339,
        0
      ]
    ]
  ],
  [
    1433,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1338,
        0
      ]
    ]
  ],
  [
    4660,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1337,
        0
      ]
    ]
  ],
  [
    6041,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4660,
        0
      ],
      [
        1433,
        0
      ]
    ]
  ],
  [
    4657,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1341,
        0
      ]
    ]
  ],
  [
    4651,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5697,
        0
      ]
    ]
  ],
  [
    4647,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4646,
        0
      ]
    ]
  ],
  [
    4644,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4643,
        0
      ],
      [
        4643,
        0
      ]
    ]
  ],
  [
    4645,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4644,
        0
      ]
    ]
  ],
  [
    4648,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4645,
        0
      ],
      [
        4647,
        0
      ]
    ]
  ],
  [
    4649,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4648,
        0
      ]
    ]
  ],
  [
    4652,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4649,
        0
      ],
      [
        4651,
        0
      ]
    ]
  ],
  [
    4653,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4652,
        0
      ]
    ]
  ],
  [
    4654,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4653,
        0
      ]
    ]
  ],
  [
    4655,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4654,
        0
      ]
    ]
  ],
  [
    4656,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4643,
        0
      ],
      [
        4655,
        0
      ]
    ]
  ],
  [
    4658,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4657,
        0
      ],
      [
        4656,
        0
      ]
    ]
  ],
  [
    6042,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4658,
        0
      ],
      [
        6041,
        0
      ]
    ]
  ],
  [
    6044,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6042,
        0
      ]
    ]
  ],
  [
    6043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6042,
        0
      ]
    ]
  ],
  [
    4662,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6043,
        0
      ]
    ]
  ],
  [
    4663,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6043,
        0
      ],
      [
        4662,
        0
      ]
    ]
  ],
  [
    4664,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4663,
        0
      ],
      [
        6044,
        0
      ]
    ]
  ],
  [
    4665,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4664,
        0
      ],
      [
        1432,
        0
      ]
    ]
  ],
  [
    4666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4643,
        0
      ],
      [
        4665,
        0
      ]
    ]
  ],
  [
    1430,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1345,
        0
      ]
    ]
  ],
  [
    4724,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1344,
        0
      ]
    ]
  ],
  [
    4696,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1342,
        0
      ]
    ]
  ],
  [
    1431,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1343,
        0
      ]
    ]
  ],
  [
    6045,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1431,
        0
      ],
      [
        4696,
        0
      ],
      [
        4724,
        0
      ]
    ]
  ],
  [
    4680,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1349,
        0
      ]
    ]
  ],
  [
    4674,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5698,
        0
      ]
    ]
  ],
  [
    4670,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4669,
        0
      ]
    ]
  ],
  [
    4667,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4666,
        0
      ],
      [
        4666,
        0
      ]
    ]
  ],
  [
    4668,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4667,
        0
      ]
    ]
  ],
  [
    4671,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4668,
        0
      ],
      [
        4670,
        0
      ]
    ]
  ],
  [
    4672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4671,
        0
      ]
    ]
  ],
  [
    4675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4672,
        0
      ],
      [
        4674,
        0
      ]
    ]
  ],
  [
    4676,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4675,
        0
      ]
    ]
  ],
  [
    4677,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4676,
        0
      ]
    ]
  ],
  [
    4678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4677,
        0
      ]
    ]
  ],
  [
    4679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4666,
        0
      ],
      [
        4678,
        0
      ]
    ]
  ],
  [
    4681,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4680,
        0
      ],
      [
        4679,
        0
      ]
    ]
  ],
  [
    6046,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4681,
        0
      ],
      [
        6045,
        0
      ]
    ]
  ],
  [
    6049,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6046,
        0
      ]
    ]
  ],
  [
    4726,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6049,
        0
      ]
    ]
  ],
  [
    4727,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4726,
        0
      ]
    ]
  ],
  [
    4721,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5703,
        0
      ]
    ]
  ],
  [
    4718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        496,
        0
      ]
    ]
  ],
  [
    4692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5700,
        0
      ]
    ]
  ],
  [
    6047,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6046,
        0
      ]
    ]
  ],
  [
    4683,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6047,
        0
      ]
    ]
  ],
  [
    4693,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4683,
        0
      ],
      [
        4692,
        0
      ]
    ]
  ],
  [
    4689,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5699,
        0
      ]
    ]
  ],
  [
    4686,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4683,
        0
      ]
    ]
  ],
  [
    4684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4683,
        0
      ]
    ]
  ],
  [
    4685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4684,
        0
      ]
    ]
  ],
  [
    4687,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4685,
        0
      ],
      [
        4686,
        0
      ]
    ]
  ],
  [
    4690,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4687,
        0
      ],
      [
        4689,
        0
      ]
    ]
  ],
  [
    4694,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4693,
        0
      ],
      [
        4690,
        0
      ]
    ]
  ],
  [
    4695,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4694,
        0
      ]
    ]
  ],
  [
    4700,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5701,
        0
      ]
    ]
  ],
  [
    6048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6046,
        0
      ]
    ]
  ],
  [
    4698,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6048,
        0
      ]
    ]
  ],
  [
    4701,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4698,
        0
      ],
      [
        4700,
        0
      ]
    ]
  ],
  [
    4702,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4701,
        0
      ]
    ]
  ],
  [
    4709,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5702,
        0
      ]
    ]
  ],
  [
    4703,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4698,
        0
      ]
    ]
  ],
  [
    4706,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4703,
        0
      ]
    ]
  ],
  [
    4704,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4703,
        0
      ]
    ]
  ],
  [
    4705,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4704,
        0
      ]
    ]
  ],
  [
    4707,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4705,
        0
      ],
      [
        4706,
        0
      ]
    ]
  ],
  [
    4710,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4707,
        0
      ],
      [
        4709,
        0
      ]
    ]
  ],
  [
    4711,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4702,
        0
      ],
      [
        4710,
        0
      ]
    ]
  ],
  [
    4716,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4711,
        0
      ],
      [
        4695,
        0
      ]
    ]
  ],
  [
    4719,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4716,
        0
      ],
      [
        4718,
        0
      ]
    ]
  ],
  [
    4722,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4719,
        0
      ],
      [
        4721,
        0
      ]
    ]
  ],
  [
    6240,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4722,
        0
      ]
    ]
  ],
  [
    6241,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4722,
        0
      ],
      [
        6240,
        0
      ]
    ]
  ],
  [
    6242,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6241,
        0
      ]
    ]
  ],
  [
    6243,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6241,
        0
      ],
      [
        6242,
        0
      ]
    ]
  ],
  [
    4732,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6243,
        0
      ],
      [
        4727,
        0
      ]
    ]
  ],
  [
    4734,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4732,
        0
      ]
    ]
  ],
  [
    4735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4734,
        0
      ]
    ]
  ],
  [
    4736,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4735,
        0
      ],
      [
        1430,
        0
      ]
    ]
  ],
  [
    4737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4666,
        0
      ],
      [
        4736,
        0
      ]
    ]
  ],
  [
    1428,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1348,
        0
      ]
    ]
  ],
  [
    1429,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1347,
        0
      ]
    ]
  ],
  [
    4754,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1346,
        0
      ]
    ]
  ],
  [
    6050,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4754,
        0
      ],
      [
        1429,
        0
      ]
    ]
  ],
  [
    4751,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1350,
        0
      ]
    ]
  ],
  [
    4745,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5704,
        0
      ]
    ]
  ],
  [
    4741,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4740,
        0
      ]
    ]
  ],
  [
    4738,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4737,
        0
      ],
      [
        4737,
        0
      ]
    ]
  ],
  [
    4739,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4738,
        0
      ]
    ]
  ],
  [
    4742,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4739,
        0
      ],
      [
        4741,
        0
      ]
    ]
  ],
  [
    4743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4742,
        0
      ]
    ]
  ],
  [
    4746,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4743,
        0
      ],
      [
        4745,
        0
      ]
    ]
  ],
  [
    4747,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4746,
        0
      ]
    ]
  ],
  [
    4748,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4747,
        0
      ]
    ]
  ],
  [
    4749,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4748,
        0
      ]
    ]
  ],
  [
    4750,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4737,
        0
      ],
      [
        4749,
        0
      ]
    ]
  ],
  [
    4752,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4751,
        0
      ],
      [
        4750,
        0
      ]
    ]
  ],
  [
    6051,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4752,
        0
      ],
      [
        6050,
        0
      ]
    ]
  ],
  [
    6053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6051,
        0
      ]
    ]
  ],
  [
    6052,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6051,
        0
      ]
    ]
  ],
  [
    4756,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6052,
        0
      ]
    ]
  ],
  [
    4757,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6052,
        0
      ],
      [
        4756,
        0
      ]
    ]
  ],
  [
    4758,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4757,
        0
      ],
      [
        6053,
        0
      ]
    ]
  ],
  [
    4759,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4758,
        0
      ],
      [
        1428,
        0
      ]
    ]
  ],
  [
    4760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4737,
        0
      ],
      [
        4759,
        0
      ]
    ]
  ],
  [
    1426,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1354,
        0
      ]
    ]
  ],
  [
    4818,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    4790,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1351,
        0
      ]
    ]
  ],
  [
    1427,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1352,
        0
      ]
    ]
  ],
  [
    6054,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1427,
        0
      ],
      [
        4790,
        0
      ],
      [
        4818,
        0
      ]
    ]
  ],
  [
    4774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1358,
        0
      ]
    ]
  ],
  [
    4768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5705,
        0
      ]
    ]
  ],
  [
    4764,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4763,
        0
      ]
    ]
  ],
  [
    4761,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4760,
        0
      ],
      [
        4760,
        0
      ]
    ]
  ],
  [
    4762,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4761,
        0
      ]
    ]
  ],
  [
    4765,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4762,
        0
      ],
      [
        4764,
        0
      ]
    ]
  ],
  [
    4766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4765,
        0
      ]
    ]
  ],
  [
    4769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4766,
        0
      ],
      [
        4768,
        0
      ]
    ]
  ],
  [
    4770,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4769,
        0
      ]
    ]
  ],
  [
    4771,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4770,
        0
      ]
    ]
  ],
  [
    4772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4771,
        0
      ]
    ]
  ],
  [
    4773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4760,
        0
      ],
      [
        4772,
        0
      ]
    ]
  ],
  [
    4775,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4774,
        0
      ],
      [
        4773,
        0
      ]
    ]
  ],
  [
    6055,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4775,
        0
      ],
      [
        6054,
        0
      ]
    ]
  ],
  [
    6058,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6055,
        0
      ]
    ]
  ],
  [
    4820,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6058,
        0
      ]
    ]
  ],
  [
    4821,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4820,
        0
      ]
    ]
  ],
  [
    4815,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5710,
        0
      ]
    ]
  ],
  [
    4812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        510,
        0
      ]
    ]
  ],
  [
    4786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5707,
        0
      ]
    ]
  ],
  [
    6056,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6055,
        0
      ]
    ]
  ],
  [
    4777,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6056,
        0
      ]
    ]
  ],
  [
    4787,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4777,
        0
      ],
      [
        4786,
        0
      ]
    ]
  ],
  [
    4783,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5706,
        0
      ]
    ]
  ],
  [
    4780,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    4778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    4779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4778,
        0
      ]
    ]
  ],
  [
    4781,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4779,
        0
      ],
      [
        4780,
        0
      ]
    ]
  ],
  [
    4784,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4781,
        0
      ],
      [
        4783,
        0
      ]
    ]
  ],
  [
    4788,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4787,
        0
      ],
      [
        4784,
        0
      ]
    ]
  ],
  [
    4789,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4788,
        0
      ]
    ]
  ],
  [
    4794,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5708,
        0
      ]
    ]
  ],
  [
    6057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6055,
        0
      ]
    ]
  ],
  [
    4792,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6057,
        0
      ]
    ]
  ],
  [
    4795,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4792,
        0
      ],
      [
        4794,
        0
      ]
    ]
  ],
  [
    4796,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4795,
        0
      ]
    ]
  ],
  [
    4803,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5709,
        0
      ]
    ]
  ],
  [
    4797,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4792,
        0
      ]
    ]
  ],
  [
    4800,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4797,
        0
      ]
    ]
  ],
  [
    4798,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4797,
        0
      ]
    ]
  ],
  [
    4799,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4798,
        0
      ]
    ]
  ],
  [
    4801,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4799,
        0
      ],
      [
        4800,
        0
      ]
    ]
  ],
  [
    4804,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4801,
        0
      ],
      [
        4803,
        0
      ]
    ]
  ],
  [
    4805,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4796,
        0
      ],
      [
        4804,
        0
      ]
    ]
  ],
  [
    4810,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4805,
        0
      ],
      [
        4789,
        0
      ]
    ]
  ],
  [
    4813,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4810,
        0
      ],
      [
        4812,
        0
      ]
    ]
  ],
  [
    4816,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4813,
        0
      ],
      [
        4815,
        0
      ]
    ]
  ],
  [
    6244,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4816,
        0
      ]
    ]
  ],
  [
    6245,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4816,
        0
      ],
      [
        6244,
        0
      ]
    ]
  ],
  [
    6246,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6245,
        0
      ]
    ]
  ],
  [
    6247,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6245,
        0
      ],
      [
        6246,
        0
      ]
    ]
  ],
  [
    4826,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6247,
        0
      ],
      [
        4821,
        0
      ]
    ]
  ],
  [
    4828,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4826,
        0
      ]
    ]
  ],
  [
    4829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4828,
        0
      ]
    ]
  ],
  [
    4830,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4829,
        0
      ],
      [
        1426,
        0
      ]
    ]
  ],
  [
    4831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4760,
        0
      ],
      [
        4830,
        0
      ]
    ]
  ],
  [
    1424,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1357,
        0
      ]
    ]
  ],
  [
    1425,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1356,
        0
      ]
    ]
  ],
  [
    4848,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1355,
        0
      ]
    ]
  ],
  [
    6059,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4848,
        0
      ],
      [
        1425,
        0
      ]
    ]
  ],
  [
    4845,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1359,
        0
      ]
    ]
  ],
  [
    4839,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5711,
        0
      ]
    ]
  ],
  [
    4835,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4834,
        0
      ]
    ]
  ],
  [
    4832,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4831,
        0
      ],
      [
        4831,
        0
      ]
    ]
  ],
  [
    4833,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4832,
        0
      ]
    ]
  ],
  [
    4836,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4833,
        0
      ],
      [
        4835,
        0
      ]
    ]
  ],
  [
    4837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4836,
        0
      ]
    ]
  ],
  [
    4840,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4837,
        0
      ],
      [
        4839,
        0
      ]
    ]
  ],
  [
    4841,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4840,
        0
      ]
    ]
  ],
  [
    4842,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4841,
        0
      ]
    ]
  ],
  [
    4843,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4842,
        0
      ]
    ]
  ],
  [
    4844,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4831,
        0
      ],
      [
        4843,
        0
      ]
    ]
  ],
  [
    4846,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4845,
        0
      ],
      [
        4844,
        0
      ]
    ]
  ],
  [
    6060,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4846,
        0
      ],
      [
        6059,
        0
      ]
    ]
  ],
  [
    6062,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6060,
        0
      ]
    ]
  ],
  [
    6061,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6060,
        0
      ]
    ]
  ],
  [
    4850,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6061,
        0
      ]
    ]
  ],
  [
    4851,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6061,
        0
      ],
      [
        4850,
        0
      ]
    ]
  ],
  [
    4852,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4851,
        0
      ],
      [
        6062,
        0
      ]
    ]
  ],
  [
    4853,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4852,
        0
      ],
      [
        1424,
        0
      ]
    ]
  ],
  [
    4854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4831,
        0
      ],
      [
        4853,
        0
      ]
    ]
  ],
  [
    1422,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1363,
        0
      ]
    ]
  ],
  [
    4912,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1362,
        0
      ]
    ]
  ],
  [
    4884,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1360,
        0
      ]
    ]
  ],
  [
    1423,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1361,
        0
      ]
    ]
  ],
  [
    6063,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1423,
        0
      ],
      [
        4884,
        0
      ],
      [
        4912,
        0
      ]
    ]
  ],
  [
    4868,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1367,
        0
      ]
    ]
  ],
  [
    4862,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5712,
        0
      ]
    ]
  ],
  [
    4858,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4857,
        0
      ]
    ]
  ],
  [
    4855,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4854,
        0
      ],
      [
        4854,
        0
      ]
    ]
  ],
  [
    4856,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4855,
        0
      ]
    ]
  ],
  [
    4859,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4856,
        0
      ],
      [
        4858,
        0
      ]
    ]
  ],
  [
    4860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4859,
        0
      ]
    ]
  ],
  [
    4863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4860,
        0
      ],
      [
        4862,
        0
      ]
    ]
  ],
  [
    4864,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4863,
        0
      ]
    ]
  ],
  [
    4865,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4864,
        0
      ]
    ]
  ],
  [
    4866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4865,
        0
      ]
    ]
  ],
  [
    4867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4854,
        0
      ],
      [
        4866,
        0
      ]
    ]
  ],
  [
    4869,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4868,
        0
      ],
      [
        4867,
        0
      ]
    ]
  ],
  [
    6064,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4869,
        0
      ],
      [
        6063,
        0
      ]
    ]
  ],
  [
    6067,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6064,
        0
      ]
    ]
  ],
  [
    4914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6067,
        0
      ]
    ]
  ],
  [
    4915,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4914,
        0
      ]
    ]
  ],
  [
    4909,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5717,
        0
      ]
    ]
  ],
  [
    4906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        524,
        0
      ]
    ]
  ],
  [
    4880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5714,
        0
      ]
    ]
  ],
  [
    6065,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6064,
        0
      ]
    ]
  ],
  [
    4871,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6065,
        0
      ]
    ]
  ],
  [
    4881,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4871,
        0
      ],
      [
        4880,
        0
      ]
    ]
  ],
  [
    4877,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5713,
        0
      ]
    ]
  ],
  [
    4874,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4871,
        0
      ]
    ]
  ],
  [
    4872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4871,
        0
      ]
    ]
  ],
  [
    4873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4872,
        0
      ]
    ]
  ],
  [
    4875,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4873,
        0
      ],
      [
        4874,
        0
      ]
    ]
  ],
  [
    4878,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4875,
        0
      ],
      [
        4877,
        0
      ]
    ]
  ],
  [
    4882,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4881,
        0
      ],
      [
        4878,
        0
      ]
    ]
  ],
  [
    4883,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4882,
        0
      ]
    ]
  ],
  [
    4888,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5715,
        0
      ]
    ]
  ],
  [
    6066,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6064,
        0
      ]
    ]
  ],
  [
    4886,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6066,
        0
      ]
    ]
  ],
  [
    4889,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4886,
        0
      ],
      [
        4888,
        0
      ]
    ]
  ],
  [
    4890,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4889,
        0
      ]
    ]
  ],
  [
    4897,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5716,
        0
      ]
    ]
  ],
  [
    4891,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4886,
        0
      ]
    ]
  ],
  [
    4894,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4891,
        0
      ]
    ]
  ],
  [
    4892,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4891,
        0
      ]
    ]
  ],
  [
    4893,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4892,
        0
      ]
    ]
  ],
  [
    4895,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4893,
        0
      ],
      [
        4894,
        0
      ]
    ]
  ],
  [
    4898,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4895,
        0
      ],
      [
        4897,
        0
      ]
    ]
  ],
  [
    4899,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4890,
        0
      ],
      [
        4898,
        0
      ]
    ]
  ],
  [
    4904,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4899,
        0
      ],
      [
        4883,
        0
      ]
    ]
  ],
  [
    4907,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4904,
        0
      ],
      [
        4906,
        0
      ]
    ]
  ],
  [
    4910,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4907,
        0
      ],
      [
        4909,
        0
      ]
    ]
  ],
  [
    6248,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4910,
        0
      ]
    ]
  ],
  [
    6249,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4910,
        0
      ],
      [
        6248,
        0
      ]
    ]
  ],
  [
    6250,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6249,
        0
      ]
    ]
  ],
  [
    6251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6249,
        0
      ],
      [
        6250,
        0
      ]
    ]
  ],
  [
    4920,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6251,
        0
      ],
      [
        4915,
        0
      ]
    ]
  ],
  [
    4922,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4920,
        0
      ]
    ]
  ],
  [
    4923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4922,
        0
      ]
    ]
  ],
  [
    4924,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4923,
        0
      ],
      [
        1422,
        0
      ]
    ]
  ],
  [
    4925,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4854,
        0
      ],
      [
        4924,
        0
      ]
    ]
  ],
  [
    1420,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1366,
        0
      ]
    ]
  ],
  [
    1421,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1365,
        0
      ]
    ]
  ],
  [
    4942,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1364,
        0
      ]
    ]
  ],
  [
    6068,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4942,
        0
      ],
      [
        1421,
        0
      ]
    ]
  ],
  [
    4939,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1368,
        0
      ]
    ]
  ],
  [
    4933,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5718,
        0
      ]
    ]
  ],
  [
    4929,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4928,
        0
      ]
    ]
  ],
  [
    4926,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4925,
        0
      ],
      [
        4925,
        0
      ]
    ]
  ],
  [
    4927,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4926,
        0
      ]
    ]
  ],
  [
    4930,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4927,
        0
      ],
      [
        4929,
        0
      ]
    ]
  ],
  [
    4931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4930,
        0
      ]
    ]
  ],
  [
    4934,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4931,
        0
      ],
      [
        4933,
        0
      ]
    ]
  ],
  [
    4935,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4934,
        0
      ]
    ]
  ],
  [
    4936,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4935,
        0
      ]
    ]
  ],
  [
    4937,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4936,
        0
      ]
    ]
  ],
  [
    4938,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4925,
        0
      ],
      [
        4937,
        0
      ]
    ]
  ],
  [
    4940,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4939,
        0
      ],
      [
        4938,
        0
      ]
    ]
  ],
  [
    6069,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4940,
        0
      ],
      [
        6068,
        0
      ]
    ]
  ],
  [
    6071,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6069,
        0
      ]
    ]
  ],
  [
    6070,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6069,
        0
      ]
    ]
  ],
  [
    4944,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6070,
        0
      ]
    ]
  ],
  [
    4945,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6070,
        0
      ],
      [
        4944,
        0
      ]
    ]
  ],
  [
    4946,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4945,
        0
      ],
      [
        6071,
        0
      ]
    ]
  ],
  [
    4947,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4946,
        0
      ],
      [
        1420,
        0
      ]
    ]
  ],
  [
    4948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4925,
        0
      ],
      [
        4947,
        0
      ]
    ]
  ],
  [
    1418,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1372,
        0
      ]
    ]
  ],
  [
    5006,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1371,
        0
      ]
    ]
  ],
  [
    4978,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1369,
        0
      ]
    ]
  ],
  [
    1419,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1370,
        0
      ]
    ]
  ],
  [
    6072,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1419,
        0
      ],
      [
        4978,
        0
      ],
      [
        5006,
        0
      ]
    ]
  ],
  [
    4962,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1376,
        0
      ]
    ]
  ],
  [
    4956,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5719,
        0
      ]
    ]
  ],
  [
    4952,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4951,
        0
      ]
    ]
  ],
  [
    4949,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4948,
        0
      ],
      [
        4948,
        0
      ]
    ]
  ],
  [
    4950,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4949,
        0
      ]
    ]
  ],
  [
    4953,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4950,
        0
      ],
      [
        4952,
        0
      ]
    ]
  ],
  [
    4954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4953,
        0
      ]
    ]
  ],
  [
    4957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4954,
        0
      ],
      [
        4956,
        0
      ]
    ]
  ],
  [
    4958,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4957,
        0
      ]
    ]
  ],
  [
    4959,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4958,
        0
      ]
    ]
  ],
  [
    4960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4959,
        0
      ]
    ]
  ],
  [
    4961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4948,
        0
      ],
      [
        4960,
        0
      ]
    ]
  ],
  [
    4963,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4962,
        0
      ],
      [
        4961,
        0
      ]
    ]
  ],
  [
    6073,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4963,
        0
      ],
      [
        6072,
        0
      ]
    ]
  ],
  [
    6076,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6073,
        0
      ]
    ]
  ],
  [
    5008,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6076,
        0
      ]
    ]
  ],
  [
    5009,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5008,
        0
      ]
    ]
  ],
  [
    5003,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5724,
        0
      ]
    ]
  ],
  [
    5000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        538,
        0
      ]
    ]
  ],
  [
    4974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5721,
        0
      ]
    ]
  ],
  [
    6074,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6073,
        0
      ]
    ]
  ],
  [
    4965,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6074,
        0
      ]
    ]
  ],
  [
    4975,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4965,
        0
      ],
      [
        4974,
        0
      ]
    ]
  ],
  [
    4971,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5720,
        0
      ]
    ]
  ],
  [
    4968,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4965,
        0
      ]
    ]
  ],
  [
    4966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4965,
        0
      ]
    ]
  ],
  [
    4967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4966,
        0
      ]
    ]
  ],
  [
    4969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4967,
        0
      ],
      [
        4968,
        0
      ]
    ]
  ],
  [
    4972,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4969,
        0
      ],
      [
        4971,
        0
      ]
    ]
  ],
  [
    4976,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4975,
        0
      ],
      [
        4972,
        0
      ]
    ]
  ],
  [
    4977,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4976,
        0
      ]
    ]
  ],
  [
    4982,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5722,
        0
      ]
    ]
  ],
  [
    6075,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6073,
        0
      ]
    ]
  ],
  [
    4980,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6075,
        0
      ]
    ]
  ],
  [
    4983,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4980,
        0
      ],
      [
        4982,
        0
      ]
    ]
  ],
  [
    4984,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4983,
        0
      ]
    ]
  ],
  [
    4991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5723,
        0
      ]
    ]
  ],
  [
    4985,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4980,
        0
      ]
    ]
  ],
  [
    4988,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4985,
        0
      ]
    ]
  ],
  [
    4986,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4985,
        0
      ]
    ]
  ],
  [
    4987,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4986,
        0
      ]
    ]
  ],
  [
    4989,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4987,
        0
      ],
      [
        4988,
        0
      ]
    ]
  ],
  [
    4992,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4989,
        0
      ],
      [
        4991,
        0
      ]
    ]
  ],
  [
    4993,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4984,
        0
      ],
      [
        4992,
        0
      ]
    ]
  ],
  [
    4998,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4993,
        0
      ],
      [
        4977,
        0
      ]
    ]
  ],
  [
    5001,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4998,
        0
      ],
      [
        5000,
        0
      ]
    ]
  ],
  [
    5004,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5001,
        0
      ],
      [
        5003,
        0
      ]
    ]
  ],
  [
    6252,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5004,
        0
      ]
    ]
  ],
  [
    6253,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5004,
        0
      ],
      [
        6252,
        0
      ]
    ]
  ],
  [
    6254,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6253,
        0
      ]
    ]
  ],
  [
    6255,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6253,
        0
      ],
      [
        6254,
        0
      ]
    ]
  ],
  [
    5014,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6255,
        0
      ],
      [
        5009,
        0
      ]
    ]
  ],
  [
    5016,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5014,
        0
      ]
    ]
  ],
  [
    5017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5016,
        0
      ]
    ]
  ],
  [
    5018,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5017,
        0
      ],
      [
        1418,
        0
      ]
    ]
  ],
  [
    5019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4948,
        0
      ],
      [
        5018,
        0
      ]
    ]
  ],
  [
    1416,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1375,
        0
      ]
    ]
  ],
  [
    1417,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1374,
        0
      ]
    ]
  ],
  [
    5036,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1373,
        0
      ]
    ]
  ],
  [
    6077,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5036,
        0
      ],
      [
        1417,
        0
      ]
    ]
  ],
  [
    5033,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1377,
        0
      ]
    ]
  ],
  [
    5027,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5725,
        0
      ]
    ]
  ],
  [
    5023,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5022,
        0
      ]
    ]
  ],
  [
    5020,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5019,
        0
      ],
      [
        5019,
        0
      ]
    ]
  ],
  [
    5021,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5020,
        0
      ]
    ]
  ],
  [
    5024,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5021,
        0
      ],
      [
        5023,
        0
      ]
    ]
  ],
  [
    5025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5024,
        0
      ]
    ]
  ],
  [
    5028,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5025,
        0
      ],
      [
        5027,
        0
      ]
    ]
  ],
  [
    5029,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5028,
        0
      ]
    ]
  ],
  [
    5030,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5029,
        0
      ]
    ]
  ],
  [
    5031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5030,
        0
      ]
    ]
  ],
  [
    5032,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5019,
        0
      ],
      [
        5031,
        0
      ]
    ]
  ],
  [
    5034,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5033,
        0
      ],
      [
        5032,
        0
      ]
    ]
  ],
  [
    6078,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5034,
        0
      ],
      [
        6077,
        0
      ]
    ]
  ],
  [
    6080,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6078,
        0
      ]
    ]
  ],
  [
    6079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6078,
        0
      ]
    ]
  ],
  [
    5038,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6079,
        0
      ]
    ]
  ],
  [
    5039,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6079,
        0
      ],
      [
        5038,
        0
      ]
    ]
  ],
  [
    5040,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5039,
        0
      ],
      [
        6080,
        0
      ]
    ]
  ],
  [
    5041,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5040,
        0
      ],
      [
        1416,
        0
      ]
    ]
  ],
  [
    5042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5019,
        0
      ],
      [
        5041,
        0
      ]
    ]
  ],
  [
    1414,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1381,
        0
      ]
    ]
  ],
  [
    5100,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1380,
        0
      ]
    ]
  ],
  [
    5072,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1378,
        0
      ]
    ]
  ],
  [
    1415,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1379,
        0
      ]
    ]
  ],
  [
    6081,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1415,
        0
      ],
      [
        5072,
        0
      ],
      [
        5100,
        0
      ]
    ]
  ],
  [
    5056,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1385,
        0
      ]
    ]
  ],
  [
    5050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5726,
        0
      ]
    ]
  ],
  [
    5046,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5045,
        0
      ]
    ]
  ],
  [
    5043,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5042,
        0
      ],
      [
        5042,
        0
      ]
    ]
  ],
  [
    5044,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5043,
        0
      ]
    ]
  ],
  [
    5047,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5044,
        0
      ],
      [
        5046,
        0
      ]
    ]
  ],
  [
    5048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5047,
        0
      ]
    ]
  ],
  [
    5051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5048,
        0
      ],
      [
        5050,
        0
      ]
    ]
  ],
  [
    5052,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5051,
        0
      ]
    ]
  ],
  [
    5053,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5052,
        0
      ]
    ]
  ],
  [
    5054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5053,
        0
      ]
    ]
  ],
  [
    5055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5042,
        0
      ],
      [
        5054,
        0
      ]
    ]
  ],
  [
    5057,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5056,
        0
      ],
      [
        5055,
        0
      ]
    ]
  ],
  [
    6082,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        5057,
        0
      ],
      [
        6081,
        0
      ]
    ]
  ],
  [
    6085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6085,
        0
      ]
    ]
  ],
  [
    5103,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5102,
        0
      ]
    ]
  ],
  [
    5097,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5731,
        0
      ]
    ]
  ],
  [
    5094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        552,
        0
      ]
    ]
  ],
  [
    5068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5728,
        0
      ]
    ]
  ],
  [
    6083,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5059,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6083,
        0
      ]
    ]
  ],
  [
    5069,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5059,
        0
      ],
      [
        5068,
        0
      ]
    ]
  ],
  [
    5065,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5727,
        0
      ]
    ]
  ],
  [
    5062,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5059,
        0
      ]
    ]
  ],
  [
    5060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5059,
        0
      ]
    ]
  ],
  [
    5061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        5060,
        0
      ]
    ]
  ],
  [
    5063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        5061,
        0
      ],
      [
        5062,
        0
      ]
    ]
  ],
  [
    5066,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5063,
        0
      ],
      [
        5065,
        0
      ]
    ]
  ],
  [
    5070,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        5069,
        0
      ],
      [
        5066,
        0
      ]
    ]
  ],
  [
    5071,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5070,
        0
      ]
    ]
  ],
  [
    5076,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5729,
        0
      ]
    ]
  ],
  [
    6084,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5074,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6084,
        0
      ]
    ]
  ],
  [
    5077,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5074,
        0
      ],
      [
        5076,
        0
      ]
    ]
  ],
  [
    5078,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5077,
        0
      ]
    ]
  ],
  [
    5085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5730,
        0
      ]
    ]
  ],
  [
    5079,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5074,
        0
      ]
    ]
  ],
  [
    5082,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5079,
        0
      ]
    ]
  ],
  [
    5080,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5079,
        0
      ]
    ]
  ],
  [
    5081,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        5080,
        0
      ]
    ]
  ],
  [
    5083,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        5081,
        0
      ],
      [
        5082,
        0
      ]
    ]
  ],
  [
    5086,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        5083,
        0
      ],
      [
        5085,
        0
      ]
    ]
  ],
  [
    5087,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        5078,
        0
      ],
      [
        5086,
        0
      ]
    ]
  ],
  [
    5092,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5087,
        0
      ],
      [
        5071,
        0
      ]
    ]
  ],
  [
    5095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        5092,
        0
      ],
      [
        5094,
        0
      ]
    ]
  ],
  [
    5098,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5095,
        0
      ],
      [
        5097,
        0
      ]
    ]
  ],
  [
    6256,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5098,
        0
      ]
    ]
  ],
  [
    6257,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5098,
        0
      ],
      [
        6256,
        0
      ]
    ]
  ],
  [
    6258,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6257,
        0
      ]
    ]
  ],
  [
    6259,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6257,
        0
      ],
      [
        6258,
        0
      ]
    ]
  ],
  [
    5108,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6259,
        0
      ],
      [
        5103,
        0
      ]
    ]
  ],
  [
    5110,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5108,
        0
      ]
    ]
  ],
  [
    5111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5110,
        0
      ]
    ]
  ],
  [
    5112,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5111,
        0
      ],
      [
        1414,
        0
      ]
    ]
  ],
  [
    5113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5042,
        0
      ],
      [
        5112,
        0
      ]
    ]
  ],
  [
    1412,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1384,
        0
      ]
    ]
  ],
  [
    1413,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1383,
        0
      ]
    ]
  ],
  [
    5130,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1382,
        0
      ]
    ]
  ],
  [
    6086,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5130,
        0
      ],
      [
        1413,
        0
      ]
    ]
  ],
  [
    5127,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1386,
        0
      ]
    ]
  ],
  [
    5121,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5732,
        0
      ]
    ]
  ],
  [
    5117,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5116,
        0
      ]
    ]
  ],
  [
    5114,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5113,
        0
      ],
      [
        5113,
        0
      ]
    ]
  ],
  [
    5115,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5114,
        0
      ]
    ]
  ],
  [
    5118,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5115,
        0
      ],
      [
        5117,
        0
      ]
    ]
  ],
  [
    5119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5118,
        0
      ]
    ]
  ],
  [
    5122,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5119,
        0
      ],
      [
        5121,
        0
      ]
    ]
  ],
  [
    5123,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5122,
        0
      ]
    ]
  ],
  [
    5124,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5123,
        0
      ]
    ]
  ],
  [
    5125,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5124,
        0
      ]
    ]
  ],
  [
    5126,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5113,
        0
      ],
      [
        5125,
        0
      ]
    ]
  ],
  [
    5128,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5127,
        0
      ],
      [
        5126,
        0
      ]
    ]
  ],
  [
    6087,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5128,
        0
      ],
      [
        6086,
        0
      ]
    ]
  ],
  [
    6089,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6087,
        0
      ]
    ]
  ],
  [
    6088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6087,
        0
      ]
    ]
  ],
  [
    5132,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6088,
        0
      ]
    ]
  ],
  [
    5133,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6088,
        0
      ],
      [
        5132,
        0
      ]
    ]
  ],
  [
    5134,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5133,
        0
      ],
      [
        6089,
        0
      ]
    ]
  ],
  [
    5135,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5134,
        0
      ],
      [
        1412,
        0
      ]
    ]
  ],
  [
    5136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5113,
        0
      ],
      [
        5135,
        0
      ]
    ]
  ],
  [
    1410,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1390,
        0
      ]
    ]
  ],
  [
    5194,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1389,
        0
      ]
    ]
  ],
  [
    5166,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1387,
        0
      ]
    ]
  ],
  [
    1411,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1388,
        0
      ]
    ]
  ],
  [
    6090,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1411,
        0
      ],
      [
        5166,
        0
      ],
      [
        5194,
        0
      ]
    ]
  ],
  [
    5150,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1394,
        0
      ]
    ]
  ],
  [
    5144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5733,
        0
      ]
    ]
  ],
  [
    5140,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5139,
        0
      ]
    ]
  ],
  [
    5137,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5136,
        0
      ],
      [
        5136,
        0
      ]
    ]
  ],
  [
    5138,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5137,
        0
      ]
    ]
  ],
  [
    5141,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5138,
        0
      ],
      [
        5140,
        0
      ]
    ]
  ],
  [
    5142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5141,
        0
      ]
    ]
  ],
  [
    5145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5142,
        0
      ],
      [
        5144,
        0
      ]
    ]
  ],
  [
    5146,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5145,
        0
      ]
    ]
  ],
  [
    5147,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5146,
        0
      ]
    ]
  ],
  [
    5148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5147,
        0
      ]
    ]
  ],
  [
    5149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5136,
        0
      ],
      [
        5148,
        0
      ]
    ]
  ],
  [
    5151,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5150,
        0
      ],
      [
        5149,
        0
      ]
    ]
  ],
  [
    6091,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        5151,
        0
      ],
      [
        6090,
        0
      ]
    ]
  ],
  [
    6094,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6094,
        0
      ]
    ]
  ],
  [
    5197,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5196,
        0
      ]
    ]
  ],
  [
    5191,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5738,
        0
      ]
    ]
  ],
  [
    5188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        566,
        0
      ]
    ]
  ],
  [
    5162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5735,
        0
      ]
    ]
  ],
  [
    6092,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5153,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6092,
        0
      ]
    ]
  ],
  [
    5163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5153,
        0
      ],
      [
        5162,
        0
      ]
    ]
  ],
  [
    5159,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5734,
        0
      ]
    ]
  ],
  [
    5156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5153,
        0
      ]
    ]
  ],
  [
    5154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5153,
        0
      ]
    ]
  ],
  [
    5155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        5154,
        0
      ]
    ]
  ],
  [
    5157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        5155,
        0
      ],
      [
        5156,
        0
      ]
    ]
  ],
  [
    5160,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5157,
        0
      ],
      [
        5159,
        0
      ]
    ]
  ],
  [
    5164,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        5163,
        0
      ],
      [
        5160,
        0
      ]
    ]
  ],
  [
    5165,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5164,
        0
      ]
    ]
  ],
  [
    5170,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5736,
        0
      ]
    ]
  ],
  [
    6093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6093,
        0
      ]
    ]
  ],
  [
    5171,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5168,
        0
      ],
      [
        5170,
        0
      ]
    ]
  ],
  [
    5172,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5171,
        0
      ]
    ]
  ],
  [
    5179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5737,
        0
      ]
    ]
  ],
  [
    5173,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5168,
        0
      ]
    ]
  ],
  [
    5176,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5173,
        0
      ]
    ]
  ],
  [
    5174,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5173,
        0
      ]
    ]
  ],
  [
    5175,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        5174,
        0
      ]
    ]
  ],
  [
    5177,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        5175,
        0
      ],
      [
        5176,
        0
      ]
    ]
  ],
  [
    5180,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        5177,
        0
      ],
      [
        5179,
        0
      ]
    ]
  ],
  [
    5181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        5172,
        0
      ],
      [
        5180,
        0
      ]
    ]
  ],
  [
    5186,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5181,
        0
      ],
      [
        5165,
        0
      ]
    ]
  ],
  [
    5189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        5186,
        0
      ],
      [
        5188,
        0
      ]
    ]
  ],
  [
    5192,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5189,
        0
      ],
      [
        5191,
        0
      ]
    ]
  ],
  [
    6260,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5192,
        0
      ]
    ]
  ],
  [
    6261,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5192,
        0
      ],
      [
        6260,
        0
      ]
    ]
  ],
  [
    6262,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6261,
        0
      ]
    ]
  ],
  [
    6263,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6261,
        0
      ],
      [
        6262,
        0
      ]
    ]
  ],
  [
    5202,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6263,
        0
      ],
      [
        5197,
        0
      ]
    ]
  ],
  [
    5204,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5202,
        0
      ]
    ]
  ],
  [
    5205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5204,
        0
      ]
    ]
  ],
  [
    5206,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5205,
        0
      ],
      [
        1410,
        0
      ]
    ]
  ],
  [
    5207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5136,
        0
      ],
      [
        5206,
        0
      ]
    ]
  ],
  [
    1408,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1393,
        0
      ]
    ]
  ],
  [
    1409,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1392,
        0
      ]
    ]
  ],
  [
    5224,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1391,
        0
      ]
    ]
  ],
  [
    6095,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5224,
        0
      ],
      [
        1409,
        0
      ]
    ]
  ],
  [
    5221,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1395,
        0
      ]
    ]
  ],
  [
    5215,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5739,
        0
      ]
    ]
  ],
  [
    5211,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5210,
        0
      ]
    ]
  ],
  [
    5208,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5207,
        0
      ],
      [
        5207,
        0
      ]
    ]
  ],
  [
    5209,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5208,
        0
      ]
    ]
  ],
  [
    5212,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5209,
        0
      ],
      [
        5211,
        0
      ]
    ]
  ],
  [
    5213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5212,
        0
      ]
    ]
  ],
  [
    5216,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5213,
        0
      ],
      [
        5215,
        0
      ]
    ]
  ],
  [
    5217,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5216,
        0
      ]
    ]
  ],
  [
    5218,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5217,
        0
      ]
    ]
  ],
  [
    5219,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5218,
        0
      ]
    ]
  ],
  [
    5220,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5207,
        0
      ],
      [
        5219,
        0
      ]
    ]
  ],
  [
    5222,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5221,
        0
      ],
      [
        5220,
        0
      ]
    ]
  ],
  [
    6096,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5222,
        0
      ],
      [
        6095,
        0
      ]
    ]
  ],
  [
    6098,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6096,
        0
      ]
    ]
  ],
  [
    6097,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6096,
        0
      ]
    ]
  ],
  [
    5226,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6097,
        0
      ]
    ]
  ],
  [
    5227,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6097,
        0
      ],
      [
        5226,
        0
      ]
    ]
  ],
  [
    5228,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5227,
        0
      ],
      [
        6098,
        0
      ]
    ]
  ],
  [
    5229,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5228,
        0
      ],
      [
        1408,
        0
      ]
    ]
  ],
  [
    2128,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5207,
        0
      ],
      [
        5229,
        0
      ]
    ]
  ],
  [
    1538,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1102,
        0
      ]
    ]
  ],
  [
    2186,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1101,
        0
      ]
    ]
  ],
  [
    2158,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1099,
        0
      ]
    ]
  ],
  [
    1539,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1100,
        0
      ]
    ]
  ],
  [
    5802,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1539,
        0
      ],
      [
        2158,
        0
      ],
      [
        2186,
        0
      ]
    ]
  ],
  [
    2142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1106,
        0
      ]
    ]
  ],
  [
    2136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5512,
        0
      ]
    ]
  ],
  [
    2132,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2131,
        0
      ]
    ]
  ],
  [
    2129,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2128,
        0
      ],
      [
        2128,
        0
      ]
    ]
  ],
  [
    2130,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2129,
        0
      ]
    ]
  ],
  [
    2133,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2130,
        0
      ],
      [
        2132,
        0
      ]
    ]
  ],
  [
    2134,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2133,
        0
      ]
    ]
  ],
  [
    2137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2134,
        0
      ],
      [
        2136,
        0
      ]
    ]
  ],
  [
    2138,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2137,
        0
      ]
    ]
  ],
  [
    2139,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2138,
        0
      ]
    ]
  ],
  [
    2140,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2139,
        0
      ]
    ]
  ],
  [
    2141,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2128,
        0
      ],
      [
        2140,
        0
      ]
    ]
  ],
  [
    2143,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2142,
        0
      ],
      [
        2141,
        0
      ]
    ]
  ],
  [
    5803,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2143,
        0
      ],
      [
        5802,
        0
      ]
    ]
  ],
  [
    5806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5806,
        0
      ]
    ]
  ],
  [
    2189,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2188,
        0
      ]
    ]
  ],
  [
    2183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5517,
        0
      ]
    ]
  ],
  [
    2180,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        118,
        0
      ]
    ]
  ],
  [
    2154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5514,
        0
      ]
    ]
  ],
  [
    5804,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5804,
        0
      ]
    ]
  ],
  [
    2155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2145,
        0
      ],
      [
        2154,
        0
      ]
    ]
  ],
  [
    2151,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5513,
        0
      ]
    ]
  ],
  [
    2148,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2145,
        0
      ]
    ]
  ],
  [
    2146,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2145,
        0
      ]
    ]
  ],
  [
    2147,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2146,
        0
      ]
    ]
  ],
  [
    2149,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2147,
        0
      ],
      [
        2148,
        0
      ]
    ]
  ],
  [
    2152,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2149,
        0
      ],
      [
        2151,
        0
      ]
    ]
  ],
  [
    2156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2155,
        0
      ],
      [
        2152,
        0
      ]
    ]
  ],
  [
    2157,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2156,
        0
      ]
    ]
  ],
  [
    2162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5515,
        0
      ]
    ]
  ],
  [
    5805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2160,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5805,
        0
      ]
    ]
  ],
  [
    2163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2160,
        0
      ],
      [
        2162,
        0
      ]
    ]
  ],
  [
    2164,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2163,
        0
      ]
    ]
  ],
  [
    2171,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5516,
        0
      ]
    ]
  ],
  [
    2165,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2160,
        0
      ]
    ]
  ],
  [
    2168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2166,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2167,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2166,
        0
      ]
    ]
  ],
  [
    2169,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2167,
        0
      ],
      [
        2168,
        0
      ]
    ]
  ],
  [
    2172,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2169,
        0
      ],
      [
        2171,
        0
      ]
    ]
  ],
  [
    2173,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2164,
        0
      ],
      [
        2172,
        0
      ]
    ]
  ],
  [
    2178,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2173,
        0
      ],
      [
        2157,
        0
      ]
    ]
  ],
  [
    2181,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2178,
        0
      ],
      [
        2180,
        0
      ]
    ]
  ],
  [
    2184,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2181,
        0
      ],
      [
        2183,
        0
      ]
    ]
  ],
  [
    6132,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2184,
        0
      ]
    ]
  ],
  [
    6133,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2184,
        0
      ],
      [
        6132,
        0
      ]
    ]
  ],
  [
    6134,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6133,
        0
      ]
    ]
  ],
  [
    6135,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6133,
        0
      ],
      [
        6134,
        0
      ]
    ]
  ],
  [
    2194,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6135,
        0
      ],
      [
        2189,
        0
      ]
    ]
  ],
  [
    2196,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2194,
        0
      ]
    ]
  ],
  [
    2197,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2196,
        0
      ]
    ]
  ],
  [
    2198,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2197,
        0
      ],
      [
        1538,
        0
      ]
    ]
  ],
  [
    2199,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2128,
        0
      ],
      [
        2198,
        0
      ]
    ]
  ],
  [
    1536,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1105,
        0
      ]
    ]
  ],
  [
    1537,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1104,
        0
      ]
    ]
  ],
  [
    2216,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1103,
        0
      ]
    ]
  ],
  [
    5807,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2216,
        0
      ],
      [
        1537,
        0
      ]
    ]
  ],
  [
    2213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1107,
        0
      ]
    ]
  ],
  [
    2207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5518,
        0
      ]
    ]
  ],
  [
    2203,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2202,
        0
      ]
    ]
  ],
  [
    2200,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2199,
        0
      ],
      [
        2199,
        0
      ]
    ]
  ],
  [
    2201,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2200,
        0
      ]
    ]
  ],
  [
    2204,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2201,
        0
      ],
      [
        2203,
        0
      ]
    ]
  ],
  [
    2205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2204,
        0
      ]
    ]
  ],
  [
    2208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2205,
        0
      ],
      [
        2207,
        0
      ]
    ]
  ],
  [
    2209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2208,
        0
      ]
    ]
  ],
  [
    2210,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2209,
        0
      ]
    ]
  ],
  [
    2211,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2210,
        0
      ]
    ]
  ],
  [
    2212,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2199,
        0
      ],
      [
        2211,
        0
      ]
    ]
  ],
  [
    2214,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2213,
        0
      ],
      [
        2212,
        0
      ]
    ]
  ],
  [
    5808,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2214,
        0
      ],
      [
        5807,
        0
      ]
    ]
  ],
  [
    5810,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5808,
        0
      ]
    ]
  ],
  [
    5809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5808,
        0
      ]
    ]
  ],
  [
    2218,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5809,
        0
      ]
    ]
  ],
  [
    5365,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5809,
        0
      ],
      [
        2218,
        0
      ]
    ]
  ],
  [
    5366,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2219,
        0
      ],
      [
        5810,
        0
      ]
    ]
  ],
  [
    5367,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5366,
        0
      ],
      [
        5300,
        0
      ]
    ]
  ],
  [
    4196,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4173,
        0
      ],
      [
        5367,
        0
      ]
    ]
  ],
  [
    1450,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1300,
        0
      ]
    ]
  ],
  [
    4254,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1299,
        0
      ]
    ]
  ],
  [
    4226,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1297,
        0
      ]
    ]
  ],
  [
    1451,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1298,
        0
      ]
    ]
  ],
  [
    6000,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1451,
        0
      ],
      [
        4226,
        0
      ],
      [
        4254,
        0
      ]
    ]
  ],
  [
    4210,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1304,
        0
      ]
    ]
  ],
  [
    4204,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5665,
        0
      ]
    ]
  ],
  [
    4200,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4199,
        0
      ]
    ]
  ],
  [
    4197,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4196,
        0
      ],
      [
        4196,
        0
      ]
    ]
  ],
  [
    4198,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4197,
        0
      ]
    ]
  ],
  [
    4201,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4198,
        0
      ],
      [
        4200,
        0
      ]
    ]
  ],
  [
    4202,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4201,
        0
      ]
    ]
  ],
  [
    4205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4202,
        0
      ],
      [
        4204,
        0
      ]
    ]
  ],
  [
    4206,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4205,
        0
      ]
    ]
  ],
  [
    4207,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4206,
        0
      ]
    ]
  ],
  [
    4208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4207,
        0
      ]
    ]
  ],
  [
    4209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4196,
        0
      ],
      [
        4208,
        0
      ]
    ]
  ],
  [
    4211,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4210,
        0
      ],
      [
        4209,
        0
      ]
    ]
  ],
  [
    6001,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4211,
        0
      ],
      [
        6000,
        0
      ]
    ]
  ],
  [
    6004,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6004,
        0
      ]
    ]
  ],
  [
    4257,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4256,
        0
      ]
    ]
  ],
  [
    4251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5670,
        0
      ]
    ]
  ],
  [
    4248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        426,
        0
      ]
    ]
  ],
  [
    4222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5667,
        0
      ]
    ]
  ],
  [
    6002,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4213,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6002,
        0
      ]
    ]
  ],
  [
    4223,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4213,
        0
      ],
      [
        4222,
        0
      ]
    ]
  ],
  [
    4219,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5666,
        0
      ]
    ]
  ],
  [
    4216,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4213,
        0
      ]
    ]
  ],
  [
    4214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4213,
        0
      ]
    ]
  ],
  [
    4215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4214,
        0
      ]
    ]
  ],
  [
    4217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4215,
        0
      ],
      [
        4216,
        0
      ]
    ]
  ],
  [
    4220,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4217,
        0
      ],
      [
        4219,
        0
      ]
    ]
  ],
  [
    4224,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4223,
        0
      ],
      [
        4220,
        0
      ]
    ]
  ],
  [
    4225,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4224,
        0
      ]
    ]
  ],
  [
    4230,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5668,
        0
      ]
    ]
  ],
  [
    6003,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4228,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6003,
        0
      ]
    ]
  ],
  [
    4231,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4228,
        0
      ],
      [
        4230,
        0
      ]
    ]
  ],
  [
    4232,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4231,
        0
      ]
    ]
  ],
  [
    4239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5669,
        0
      ]
    ]
  ],
  [
    4233,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4228,
        0
      ]
    ]
  ],
  [
    4236,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4234,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4235,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4234,
        0
      ]
    ]
  ],
  [
    4237,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4235,
        0
      ],
      [
        4236,
        0
      ]
    ]
  ],
  [
    4240,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4237,
        0
      ],
      [
        4239,
        0
      ]
    ]
  ],
  [
    4241,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4232,
        0
      ],
      [
        4240,
        0
      ]
    ]
  ],
  [
    4246,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4241,
        0
      ],
      [
        4225,
        0
      ]
    ]
  ],
  [
    4249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4246,
        0
      ],
      [
        4248,
        0
      ]
    ]
  ],
  [
    4252,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4249,
        0
      ],
      [
        4251,
        0
      ]
    ]
  ],
  [
    6220,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4252,
        0
      ]
    ]
  ],
  [
    6221,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4252,
        0
      ],
      [
        6220,
        0
      ]
    ]
  ],
  [
    6222,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6221,
        0
      ]
    ]
  ],
  [
    6223,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6221,
        0
      ],
      [
        6222,
        0
      ]
    ]
  ],
  [
    4262,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6223,
        0
      ],
      [
        4257,
        0
      ]
    ]
  ],
  [
    4264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4262,
        0
      ]
    ]
  ],
  [
    4265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4264,
        0
      ]
    ]
  ],
  [
    4266,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4265,
        0
      ],
      [
        1450,
        0
      ]
    ]
  ],
  [
    4267,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4196,
        0
      ],
      [
        4266,
        0
      ]
    ]
  ],
  [
    1448,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1303,
        0
      ]
    ]
  ],
  [
    1449,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1302,
        0
      ]
    ]
  ],
  [
    4284,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1301,
        0
      ]
    ]
  ],
  [
    6005,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4284,
        0
      ],
      [
        1449,
        0
      ]
    ]
  ],
  [
    4281,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1305,
        0
      ]
    ]
  ],
  [
    4275,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5671,
        0
      ]
    ]
  ],
  [
    4271,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4270,
        0
      ]
    ]
  ],
  [
    4268,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4267,
        0
      ],
      [
        4267,
        0
      ]
    ]
  ],
  [
    4269,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4268,
        0
      ]
    ]
  ],
  [
    4272,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4269,
        0
      ],
      [
        4271,
        0
      ]
    ]
  ],
  [
    4273,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4272,
        0
      ]
    ]
  ],
  [
    4276,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4273,
        0
      ],
      [
        4275,
        0
      ]
    ]
  ],
  [
    4277,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4276,
        0
      ]
    ]
  ],
  [
    4278,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4277,
        0
      ]
    ]
  ],
  [
    4279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4278,
        0
      ]
    ]
  ],
  [
    4280,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4267,
        0
      ],
      [
        4279,
        0
      ]
    ]
  ],
  [
    4282,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4281,
        0
      ],
      [
        4280,
        0
      ]
    ]
  ],
  [
    6006,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4282,
        0
      ],
      [
        6005,
        0
      ]
    ]
  ],
  [
    6008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6006,
        0
      ]
    ]
  ],
  [
    6007,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6006,
        0
      ]
    ]
  ],
  [
    4286,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6007,
        0
      ]
    ]
  ],
  [
    4287,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6007,
        0
      ],
      [
        4286,
        0
      ]
    ]
  ],
  [
    1656,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4287,
        0
      ],
      [
        6008,
        0
      ]
    ]
  ],
  [
    1657,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1656,
        0
      ],
      [
        1560,
        0
      ]
    ]
  ],
  [
    1658,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1635,
        0
      ],
      [
        1657,
        0
      ]
    ]
  ],
  [
    1558,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1057,
        0
      ]
    ]
  ],
  [
    1716,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1056,
        0
      ]
    ]
  ],
  [
    1688,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1054,
        0
      ]
    ]
  ],
  [
    1559,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1055,
        0
      ]
    ]
  ],
  [
    5757,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1559,
        0
      ],
      [
        1688,
        0
      ],
      [
        1716,
        0
      ]
    ]
  ],
  [
    1672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1061,
        0
      ]
    ]
  ],
  [
    1666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5476,
        0
      ]
    ]
  ],
  [
    1662,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1661,
        0
      ]
    ]
  ],
  [
    1659,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1658,
        0
      ],
      [
        1658,
        0
      ]
    ]
  ],
  [
    1660,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1659,
        0
      ]
    ]
  ],
  [
    1663,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1660,
        0
      ],
      [
        1662,
        0
      ]
    ]
  ],
  [
    1664,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1663,
        0
      ]
    ]
  ],
  [
    1667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1664,
        0
      ],
      [
        1666,
        0
      ]
    ]
  ],
  [
    1668,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1667,
        0
      ]
    ]
  ],
  [
    1669,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1668,
        0
      ]
    ]
  ],
  [
    1670,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1669,
        0
      ]
    ]
  ],
  [
    1671,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1658,
        0
      ],
      [
        1670,
        0
      ]
    ]
  ],
  [
    1673,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1672,
        0
      ],
      [
        1671,
        0
      ]
    ]
  ],
  [
    5758,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1673,
        0
      ],
      [
        5757,
        0
      ]
    ]
  ],
  [
    5761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5758,
        0
      ]
    ]
  ],
  [
    1718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5761,
        0
      ]
    ]
  ],
  [
    1719,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1718,
        0
      ]
    ]
  ],
  [
    1713,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5481,
        0
      ]
    ]
  ],
  [
    1710,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        48,
        0
      ]
    ]
  ],
  [
    1684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5478,
        0
      ]
    ]
  ],
  [
    5759,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5758,
        0
      ]
    ]
  ],
  [
    1675,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5759,
        0
      ]
    ]
  ],
  [
    1685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1675,
        0
      ],
      [
        1684,
        0
      ]
    ]
  ],
  [
    1681,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5477,
        0
      ]
    ]
  ],
  [
    1678,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1675,
        0
      ]
    ]
  ],
  [
    1676,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1675,
        0
      ]
    ]
  ],
  [
    1677,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1676,
        0
      ]
    ]
  ],
  [
    1679,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1677,
        0
      ],
      [
        1678,
        0
      ]
    ]
  ],
  [
    1682,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1679,
        0
      ],
      [
        1681,
        0
      ]
    ]
  ],
  [
    1686,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1685,
        0
      ],
      [
        1682,
        0
      ]
    ]
  ],
  [
    1687,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1686,
        0
      ]
    ]
  ],
  [
    1692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5479,
        0
      ]
    ]
  ],
  [
    5760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5758,
        0
      ]
    ]
  ],
  [
    1690,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5760,
        0
      ]
    ]
  ],
  [
    1693,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1690,
        0
      ],
      [
        1692,
        0
      ]
    ]
  ],
  [
    1694,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1693,
        0
      ]
    ]
  ],
  [
    1701,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5480,
        0
      ]
    ]
  ],
  [
    1695,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1690,
        0
      ]
    ]
  ],
  [
    1698,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1695,
        0
      ]
    ]
  ],
  [
    1696,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1695,
        0
      ]
    ]
  ],
  [
    1697,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1696,
        0
      ]
    ]
  ],
  [
    1699,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1697,
        0
      ],
      [
        1698,
        0
      ]
    ]
  ],
  [
    1702,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1699,
        0
      ],
      [
        1701,
        0
      ]
    ]
  ],
  [
    1703,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1694,
        0
      ],
      [
        1702,
        0
      ]
    ]
  ],
  [
    1708,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1703,
        0
      ],
      [
        1687,
        0
      ]
    ]
  ],
  [
    1711,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1708,
        0
      ],
      [
        1710,
        0
      ]
    ]
  ],
  [
    1714,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1711,
        0
      ],
      [
        1713,
        0
      ]
    ]
  ],
  [
    6112,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1714,
        0
      ]
    ]
  ],
  [
    6113,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1714,
        0
      ],
      [
        6112,
        0
      ]
    ]
  ],
  [
    6114,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6113,
        0
      ]
    ]
  ],
  [
    6115,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6113,
        0
      ],
      [
        6114,
        0
      ]
    ]
  ],
  [
    1724,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6115,
        0
      ],
      [
        1719,
        0
      ]
    ]
  ],
  [
    1726,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1724,
        0
      ]
    ]
  ],
  [
    1727,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1726,
        0
      ]
    ]
  ],
  [
    1728,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1727,
        0
      ],
      [
        1558,
        0
      ]
    ]
  ],
  [
    1729,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1658,
        0
      ],
      [
        1728,
        0
      ]
    ]
  ],
  [
    1556,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1060,
        0
      ]
    ]
  ],
  [
    1557,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1059,
        0
      ]
    ]
  ],
  [
    1746,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1058,
        0
      ]
    ]
  ],
  [
    5762,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1746,
        0
      ],
      [
        1557,
        0
      ]
    ]
  ],
  [
    1743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1062,
        0
      ]
    ]
  ],
  [
    1737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5482,
        0
      ]
    ]
  ],
  [
    1733,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1732,
        0
      ]
    ]
  ],
  [
    1730,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1729,
        0
      ],
      [
        1729,
        0
      ]
    ]
  ],
  [
    1731,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1730,
        0
      ]
    ]
  ],
  [
    1734,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1731,
        0
      ],
      [
        1733,
        0
      ]
    ]
  ],
  [
    1735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1734,
        0
      ]
    ]
  ],
  [
    1738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1735,
        0
      ],
      [
        1737,
        0
      ]
    ]
  ],
  [
    1739,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1738,
        0
      ]
    ]
  ],
  [
    1740,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1739,
        0
      ]
    ]
  ],
  [
    1741,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1740,
        0
      ]
    ]
  ],
  [
    1742,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1729,
        0
      ],
      [
        1741,
        0
      ]
    ]
  ],
  [
    1744,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1743,
        0
      ],
      [
        1742,
        0
      ]
    ]
  ],
  [
    5763,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1744,
        0
      ],
      [
        5762,
        0
      ]
    ]
  ],
  [
    5765,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5763,
        0
      ]
    ]
  ],
  [
    5764,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5763,
        0
      ]
    ]
  ],
  [
    1748,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5764,
        0
      ]
    ]
  ],
  [
    1749,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5764,
        0
      ],
      [
        1748,
        0
      ]
    ]
  ],
  [
    1750,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1749,
        0
      ],
      [
        5765,
        0
      ]
    ]
  ],
  [
    1751,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1750,
        0
      ],
      [
        1556,
        0
      ]
    ]
  ],
  [
    1752,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1729,
        0
      ],
      [
        1751,
        0
      ]
    ]
  ],
  [
    1554,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1066,
        0
      ]
    ]
  ],
  [
    1810,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1065,
        0
      ]
    ]
  ],
  [
    1782,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1063,
        0
      ]
    ]
  ],
  [
    1555,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1064,
        0
      ]
    ]
  ],
  [
    5766,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1555,
        0
      ],
      [
        1782,
        0
      ],
      [
        1810,
        0
      ]
    ]
  ],
  [
    1766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1070,
        0
      ]
    ]
  ],
  [
    1760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5483,
        0
      ]
    ]
  ],
  [
    1756,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1755,
        0
      ]
    ]
  ],
  [
    1753,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1752,
        0
      ],
      [
        1752,
        0
      ]
    ]
  ],
  [
    1754,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1753,
        0
      ]
    ]
  ],
  [
    1757,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1754,
        0
      ],
      [
        1756,
        0
      ]
    ]
  ],
  [
    1758,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1757,
        0
      ]
    ]
  ],
  [
    1761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1758,
        0
      ],
      [
        1760,
        0
      ]
    ]
  ],
  [
    1762,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1761,
        0
      ]
    ]
  ],
  [
    1763,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1762,
        0
      ]
    ]
  ],
  [
    1764,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1763,
        0
      ]
    ]
  ],
  [
    1765,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1752,
        0
      ],
      [
        1764,
        0
      ]
    ]
  ],
  [
    1767,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1766,
        0
      ],
      [
        1765,
        0
      ]
    ]
  ],
  [
    5767,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1767,
        0
      ],
      [
        5766,
        0
      ]
    ]
  ],
  [
    5770,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5767,
        0
      ]
    ]
  ],
  [
    1812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5770,
        0
      ]
    ]
  ],
  [
    1813,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1812,
        0
      ]
    ]
  ],
  [
    1807,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5488,
        0
      ]
    ]
  ],
  [
    1804,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        62,
        0
      ]
    ]
  ],
  [
    1778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5485,
        0
      ]
    ]
  ],
  [
    5768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5767,
        0
      ]
    ]
  ],
  [
    1769,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5768,
        0
      ]
    ]
  ],
  [
    1779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1769,
        0
      ],
      [
        1778,
        0
      ]
    ]
  ],
  [
    1775,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5484,
        0
      ]
    ]
  ],
  [
    1772,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1769,
        0
      ]
    ]
  ],
  [
    1770,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1769,
        0
      ]
    ]
  ],
  [
    1771,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1770,
        0
      ]
    ]
  ],
  [
    1773,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1771,
        0
      ],
      [
        1772,
        0
      ]
    ]
  ],
  [
    1776,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1773,
        0
      ],
      [
        1775,
        0
      ]
    ]
  ],
  [
    1780,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1779,
        0
      ],
      [
        1776,
        0
      ]
    ]
  ],
  [
    1781,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1780,
        0
      ]
    ]
  ],
  [
    1786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5486,
        0
      ]
    ]
  ],
  [
    5769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5767,
        0
      ]
    ]
  ],
  [
    1784,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5769,
        0
      ]
    ]
  ],
  [
    1787,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1784,
        0
      ],
      [
        1786,
        0
      ]
    ]
  ],
  [
    1788,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1787,
        0
      ]
    ]
  ],
  [
    1795,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5487,
        0
      ]
    ]
  ],
  [
    1789,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1784,
        0
      ]
    ]
  ],
  [
    1792,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1789,
        0
      ]
    ]
  ],
  [
    1790,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1789,
        0
      ]
    ]
  ],
  [
    1791,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1790,
        0
      ]
    ]
  ],
  [
    1793,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1791,
        0
      ],
      [
        1792,
        0
      ]
    ]
  ],
  [
    1796,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1793,
        0
      ],
      [
        1795,
        0
      ]
    ]
  ],
  [
    1797,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1788,
        0
      ],
      [
        1796,
        0
      ]
    ]
  ],
  [
    1802,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1797,
        0
      ],
      [
        1781,
        0
      ]
    ]
  ],
  [
    1805,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1802,
        0
      ],
      [
        1804,
        0
      ]
    ]
  ],
  [
    1808,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1805,
        0
      ],
      [
        1807,
        0
      ]
    ]
  ],
  [
    6116,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1808,
        0
      ]
    ]
  ],
  [
    6117,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1808,
        0
      ],
      [
        6116,
        0
      ]
    ]
  ],
  [
    6118,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6117,
        0
      ]
    ]
  ],
  [
    6119,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6117,
        0
      ],
      [
        6118,
        0
      ]
    ]
  ],
  [
    1818,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6119,
        0
      ],
      [
        1813,
        0
      ]
    ]
  ],
  [
    1820,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1818,
        0
      ]
    ]
  ],
  [
    1821,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1820,
        0
      ]
    ]
  ],
  [
    1822,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1821,
        0
      ],
      [
        1554,
        0
      ]
    ]
  ],
  [
    1823,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1752,
        0
      ],
      [
        1822,
        0
      ]
    ]
  ],
  [
    1552,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1069,
        0
      ]
    ]
  ],
  [
    1553,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1068,
        0
      ]
    ]
  ],
  [
    1840,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1067,
        0
      ]
    ]
  ],
  [
    5771,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1840,
        0
      ],
      [
        1553,
        0
      ]
    ]
  ],
  [
    1837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1071,
        0
      ]
    ]
  ],
  [
    1831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5489,
        0
      ]
    ]
  ],
  [
    1827,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1826,
        0
      ]
    ]
  ],
  [
    1824,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1823,
        0
      ],
      [
        1823,
        0
      ]
    ]
  ],
  [
    1825,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1824,
        0
      ]
    ]
  ],
  [
    1828,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1825,
        0
      ],
      [
        1827,
        0
      ]
    ]
  ],
  [
    1829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1828,
        0
      ]
    ]
  ],
  [
    1832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1829,
        0
      ],
      [
        1831,
        0
      ]
    ]
  ],
  [
    1833,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1832,
        0
      ]
    ]
  ],
  [
    1834,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1833,
        0
      ]
    ]
  ],
  [
    1835,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1834,
        0
      ]
    ]
  ],
  [
    1836,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1823,
        0
      ],
      [
        1835,
        0
      ]
    ]
  ],
  [
    1838,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1837,
        0
      ],
      [
        1836,
        0
      ]
    ]
  ],
  [
    5772,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1838,
        0
      ],
      [
        5771,
        0
      ]
    ]
  ],
  [
    5774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5772,
        0
      ]
    ]
  ],
  [
    5773,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5772,
        0
      ]
    ]
  ],
  [
    1842,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5773,
        0
      ]
    ]
  ],
  [
    1843,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5773,
        0
      ],
      [
        1842,
        0
      ]
    ]
  ],
  [
    1844,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1843,
        0
      ],
      [
        5774,
        0
      ]
    ]
  ],
  [
    1845,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1844,
        0
      ],
      [
        1552,
        0
      ]
    ]
  ],
  [
    1846,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1823,
        0
      ],
      [
        1845,
        0
      ]
    ]
  ],
  [
    1550,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1075,
        0
      ]
    ]
  ],
  [
    1904,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1074,
        0
      ]
    ]
  ],
  [
    1876,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1072,
        0
      ]
    ]
  ],
  [
    1551,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1073,
        0
      ]
    ]
  ],
  [
    5775,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1551,
        0
      ],
      [
        1876,
        0
      ],
      [
        1904,
        0
      ]
    ]
  ],
  [
    1860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1079,
        0
      ]
    ]
  ],
  [
    1854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5490,
        0
      ]
    ]
  ],
  [
    1850,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1849,
        0
      ]
    ]
  ],
  [
    1847,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1846,
        0
      ],
      [
        1846,
        0
      ]
    ]
  ],
  [
    1848,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1847,
        0
      ]
    ]
  ],
  [
    1851,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1848,
        0
      ],
      [
        1850,
        0
      ]
    ]
  ],
  [
    1852,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1851,
        0
      ]
    ]
  ],
  [
    1855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1852,
        0
      ],
      [
        1854,
        0
      ]
    ]
  ],
  [
    1856,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1855,
        0
      ]
    ]
  ],
  [
    1857,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1856,
        0
      ]
    ]
  ],
  [
    1858,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1857,
        0
      ]
    ]
  ],
  [
    1859,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1846,
        0
      ],
      [
        1858,
        0
      ]
    ]
  ],
  [
    1861,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1860,
        0
      ],
      [
        1859,
        0
      ]
    ]
  ],
  [
    5776,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1861,
        0
      ],
      [
        5775,
        0
      ]
    ]
  ],
  [
    5779,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5776,
        0
      ]
    ]
  ],
  [
    1906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5779,
        0
      ]
    ]
  ],
  [
    1907,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1906,
        0
      ]
    ]
  ],
  [
    1901,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5495,
        0
      ]
    ]
  ],
  [
    1898,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        76,
        0
      ]
    ]
  ],
  [
    1872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5492,
        0
      ]
    ]
  ],
  [
    5777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5776,
        0
      ]
    ]
  ],
  [
    1863,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5777,
        0
      ]
    ]
  ],
  [
    1873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1863,
        0
      ],
      [
        1872,
        0
      ]
    ]
  ],
  [
    1869,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5491,
        0
      ]
    ]
  ],
  [
    1866,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1863,
        0
      ]
    ]
  ],
  [
    1864,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1863,
        0
      ]
    ]
  ],
  [
    1865,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1864,
        0
      ]
    ]
  ],
  [
    1867,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1865,
        0
      ],
      [
        1866,
        0
      ]
    ]
  ],
  [
    1870,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1867,
        0
      ],
      [
        1869,
        0
      ]
    ]
  ],
  [
    1874,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1873,
        0
      ],
      [
        1870,
        0
      ]
    ]
  ],
  [
    1875,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1874,
        0
      ]
    ]
  ],
  [
    1880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5493,
        0
      ]
    ]
  ],
  [
    5778,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5776,
        0
      ]
    ]
  ],
  [
    1878,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5778,
        0
      ]
    ]
  ],
  [
    1881,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1878,
        0
      ],
      [
        1880,
        0
      ]
    ]
  ],
  [
    1882,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1881,
        0
      ]
    ]
  ],
  [
    1889,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5494,
        0
      ]
    ]
  ],
  [
    1883,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1878,
        0
      ]
    ]
  ],
  [
    1886,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1883,
        0
      ]
    ]
  ],
  [
    1884,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1883,
        0
      ]
    ]
  ],
  [
    1885,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1884,
        0
      ]
    ]
  ],
  [
    1887,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1885,
        0
      ],
      [
        1886,
        0
      ]
    ]
  ],
  [
    1890,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1887,
        0
      ],
      [
        1889,
        0
      ]
    ]
  ],
  [
    1891,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1882,
        0
      ],
      [
        1890,
        0
      ]
    ]
  ],
  [
    1896,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1891,
        0
      ],
      [
        1875,
        0
      ]
    ]
  ],
  [
    1899,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1896,
        0
      ],
      [
        1898,
        0
      ]
    ]
  ],
  [
    1902,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1899,
        0
      ],
      [
        1901,
        0
      ]
    ]
  ],
  [
    6120,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1902,
        0
      ]
    ]
  ],
  [
    6121,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1902,
        0
      ],
      [
        6120,
        0
      ]
    ]
  ],
  [
    6122,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6121,
        0
      ]
    ]
  ],
  [
    6123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6121,
        0
      ],
      [
        6122,
        0
      ]
    ]
  ],
  [
    1912,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6123,
        0
      ],
      [
        1907,
        0
      ]
    ]
  ],
  [
    1914,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        1912,
        0
      ]
    ]
  ],
  [
    1915,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1914,
        0
      ]
    ]
  ],
  [
    1916,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        1915,
        0
      ],
      [
        1550,
        0
      ]
    ]
  ],
  [
    1917,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1846,
        0
      ],
      [
        1916,
        0
      ]
    ]
  ],
  [
    1548,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1078,
        0
      ]
    ]
  ],
  [
    1549,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1077,
        0
      ]
    ]
  ],
  [
    1934,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1076,
        0
      ]
    ]
  ],
  [
    5780,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        1934,
        0
      ],
      [
        1549,
        0
      ]
    ]
  ],
  [
    1931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1080,
        0
      ]
    ]
  ],
  [
    1925,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5496,
        0
      ]
    ]
  ],
  [
    1921,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1920,
        0
      ]
    ]
  ],
  [
    1918,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1917,
        0
      ],
      [
        1917,
        0
      ]
    ]
  ],
  [
    1919,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1918,
        0
      ]
    ]
  ],
  [
    1922,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1919,
        0
      ],
      [
        1921,
        0
      ]
    ]
  ],
  [
    1923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1922,
        0
      ]
    ]
  ],
  [
    1926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1923,
        0
      ],
      [
        1925,
        0
      ]
    ]
  ],
  [
    1927,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1926,
        0
      ]
    ]
  ],
  [
    1928,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1927,
        0
      ]
    ]
  ],
  [
    1929,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1928,
        0
      ]
    ]
  ],
  [
    1930,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1917,
        0
      ],
      [
        1929,
        0
      ]
    ]
  ],
  [
    1932,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1931,
        0
      ],
      [
        1930,
        0
      ]
    ]
  ],
  [
    5781,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        1932,
        0
      ],
      [
        5780,
        0
      ]
    ]
  ],
  [
    5783,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5781,
        0
      ]
    ]
  ],
  [
    5782,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5781,
        0
      ]
    ]
  ],
  [
    1936,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5782,
        0
      ]
    ]
  ],
  [
    1937,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5782,
        0
      ],
      [
        1936,
        0
      ]
    ]
  ],
  [
    1938,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        1937,
        0
      ],
      [
        5783,
        0
      ]
    ]
  ],
  [
    1939,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        1938,
        0
      ],
      [
        1548,
        0
      ]
    ]
  ],
  [
    1940,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1917,
        0
      ],
      [
        1939,
        0
      ]
    ]
  ],
  [
    1546,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1084,
        0
      ]
    ]
  ],
  [
    1998,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1083,
        0
      ]
    ]
  ],
  [
    1970,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1081,
        0
      ]
    ]
  ],
  [
    1547,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1082,
        0
      ]
    ]
  ],
  [
    5784,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1547,
        0
      ],
      [
        1970,
        0
      ],
      [
        1998,
        0
      ]
    ]
  ],
  [
    1954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1088,
        0
      ]
    ]
  ],
  [
    1948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5497,
        0
      ]
    ]
  ],
  [
    1944,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1943,
        0
      ]
    ]
  ],
  [
    1941,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1940,
        0
      ],
      [
        1940,
        0
      ]
    ]
  ],
  [
    1942,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        1941,
        0
      ]
    ]
  ],
  [
    1945,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1942,
        0
      ],
      [
        1944,
        0
      ]
    ]
  ],
  [
    1946,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1945,
        0
      ]
    ]
  ],
  [
    1949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1946,
        0
      ],
      [
        1948,
        0
      ]
    ]
  ],
  [
    1950,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1949,
        0
      ]
    ]
  ],
  [
    1951,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1950,
        0
      ]
    ]
  ],
  [
    1952,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1951,
        0
      ]
    ]
  ],
  [
    1953,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        1940,
        0
      ],
      [
        1952,
        0
      ]
    ]
  ],
  [
    1955,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        1954,
        0
      ],
      [
        1953,
        0
      ]
    ]
  ],
  [
    5785,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        1955,
        0
      ],
      [
        5784,
        0
      ]
    ]
  ],
  [
    5788,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5785,
        0
      ]
    ]
  ],
  [
    2000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5788,
        0
      ]
    ]
  ],
  [
    2001,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2000,
        0
      ]
    ]
  ],
  [
    1995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5502,
        0
      ]
    ]
  ],
  [
    1992,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        90,
        0
      ]
    ]
  ],
  [
    1966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5499,
        0
      ]
    ]
  ],
  [
    5786,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5785,
        0
      ]
    ]
  ],
  [
    1957,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5786,
        0
      ]
    ]
  ],
  [
    1967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1957,
        0
      ],
      [
        1966,
        0
      ]
    ]
  ],
  [
    1963,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5498,
        0
      ]
    ]
  ],
  [
    1960,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1957,
        0
      ]
    ]
  ],
  [
    1958,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        1957,
        0
      ]
    ]
  ],
  [
    1959,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        1958,
        0
      ]
    ]
  ],
  [
    1961,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        1959,
        0
      ],
      [
        1960,
        0
      ]
    ]
  ],
  [
    1964,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1961,
        0
      ],
      [
        1963,
        0
      ]
    ]
  ],
  [
    1968,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        1967,
        0
      ],
      [
        1964,
        0
      ]
    ]
  ],
  [
    1969,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1968,
        0
      ]
    ]
  ],
  [
    1974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5500,
        0
      ]
    ]
  ],
  [
    5787,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5785,
        0
      ]
    ]
  ],
  [
    1972,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5787,
        0
      ]
    ]
  ],
  [
    1975,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        1972,
        0
      ],
      [
        1974,
        0
      ]
    ]
  ],
  [
    1976,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1975,
        0
      ]
    ]
  ],
  [
    1983,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5501,
        0
      ]
    ]
  ],
  [
    1977,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1972,
        0
      ]
    ]
  ],
  [
    1980,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1977,
        0
      ]
    ]
  ],
  [
    1978,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        1977,
        0
      ]
    ]
  ],
  [
    1979,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        1978,
        0
      ]
    ]
  ],
  [
    1981,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        1979,
        0
      ],
      [
        1980,
        0
      ]
    ]
  ],
  [
    1984,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        1981,
        0
      ],
      [
        1983,
        0
      ]
    ]
  ],
  [
    1985,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        1976,
        0
      ],
      [
        1984,
        0
      ]
    ]
  ],
  [
    1990,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1985,
        0
      ],
      [
        1969,
        0
      ]
    ]
  ],
  [
    1993,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        1990,
        0
      ],
      [
        1992,
        0
      ]
    ]
  ],
  [
    1996,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        1993,
        0
      ],
      [
        1995,
        0
      ]
    ]
  ],
  [
    6124,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1996,
        0
      ]
    ]
  ],
  [
    6125,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1996,
        0
      ],
      [
        6124,
        0
      ]
    ]
  ],
  [
    6126,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6125,
        0
      ]
    ]
  ],
  [
    6127,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6125,
        0
      ],
      [
        6126,
        0
      ]
    ]
  ],
  [
    2006,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6127,
        0
      ],
      [
        2001,
        0
      ]
    ]
  ],
  [
    2008,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2006,
        0
      ]
    ]
  ],
  [
    2009,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2008,
        0
      ]
    ]
  ],
  [
    2010,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2009,
        0
      ],
      [
        1546,
        0
      ]
    ]
  ],
  [
    2011,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        1940,
        0
      ],
      [
        2010,
        0
      ]
    ]
  ],
  [
    1544,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1087,
        0
      ]
    ]
  ],
  [
    1545,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1086,
        0
      ]
    ]
  ],
  [
    2028,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1085,
        0
      ]
    ]
  ],
  [
    5789,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2028,
        0
      ],
      [
        1545,
        0
      ]
    ]
  ],
  [
    2025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1089,
        0
      ]
    ]
  ],
  [
    2019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5503,
        0
      ]
    ]
  ],
  [
    2015,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2014,
        0
      ]
    ]
  ],
  [
    2012,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2011,
        0
      ],
      [
        2011,
        0
      ]
    ]
  ],
  [
    2013,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2012,
        0
      ]
    ]
  ],
  [
    2016,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2013,
        0
      ],
      [
        2015,
        0
      ]
    ]
  ],
  [
    2017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2016,
        0
      ]
    ]
  ],
  [
    2020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2017,
        0
      ],
      [
        2019,
        0
      ]
    ]
  ],
  [
    2021,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2020,
        0
      ]
    ]
  ],
  [
    2022,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2021,
        0
      ]
    ]
  ],
  [
    2023,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2022,
        0
      ]
    ]
  ],
  [
    2024,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2011,
        0
      ],
      [
        2023,
        0
      ]
    ]
  ],
  [
    2026,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2025,
        0
      ],
      [
        2024,
        0
      ]
    ]
  ],
  [
    5790,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2026,
        0
      ],
      [
        5789,
        0
      ]
    ]
  ],
  [
    5792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5790,
        0
      ]
    ]
  ],
  [
    5791,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5790,
        0
      ]
    ]
  ],
  [
    2030,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5791,
        0
      ]
    ]
  ],
  [
    2031,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5791,
        0
      ],
      [
        2030,
        0
      ]
    ]
  ],
  [
    2032,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2031,
        0
      ],
      [
        5792,
        0
      ]
    ]
  ],
  [
    2033,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2032,
        0
      ],
      [
        1544,
        0
      ]
    ]
  ],
  [
    2034,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2011,
        0
      ],
      [
        2033,
        0
      ]
    ]
  ],
  [
    1542,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1093,
        0
      ]
    ]
  ],
  [
    2092,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1092,
        0
      ]
    ]
  ],
  [
    2064,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1090,
        0
      ]
    ]
  ],
  [
    1543,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1091,
        0
      ]
    ]
  ],
  [
    5793,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1543,
        0
      ],
      [
        2064,
        0
      ],
      [
        2092,
        0
      ]
    ]
  ],
  [
    2048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1097,
        0
      ]
    ]
  ],
  [
    2042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5504,
        0
      ]
    ]
  ],
  [
    2038,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2037,
        0
      ]
    ]
  ],
  [
    2035,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2034,
        0
      ],
      [
        2034,
        0
      ]
    ]
  ],
  [
    2036,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2035,
        0
      ]
    ]
  ],
  [
    2039,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2036,
        0
      ],
      [
        2038,
        0
      ]
    ]
  ],
  [
    2040,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2039,
        0
      ]
    ]
  ],
  [
    2043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2040,
        0
      ],
      [
        2042,
        0
      ]
    ]
  ],
  [
    2044,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2043,
        0
      ]
    ]
  ],
  [
    2045,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2044,
        0
      ]
    ]
  ],
  [
    2046,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2045,
        0
      ]
    ]
  ],
  [
    2047,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2034,
        0
      ],
      [
        2046,
        0
      ]
    ]
  ],
  [
    2049,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2048,
        0
      ],
      [
        2047,
        0
      ]
    ]
  ],
  [
    5794,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2049,
        0
      ],
      [
        5793,
        0
      ]
    ]
  ],
  [
    5797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5794,
        0
      ]
    ]
  ],
  [
    2094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5797,
        0
      ]
    ]
  ],
  [
    2095,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2094,
        0
      ]
    ]
  ],
  [
    2089,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5510,
        0
      ]
    ]
  ],
  [
    2086,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        104,
        0
      ]
    ]
  ],
  [
    2060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5468,
        0
      ]
    ]
  ],
  [
    5795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5794,
        0
      ]
    ]
  ],
  [
    2051,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5795,
        0
      ]
    ]
  ],
  [
    2061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2051,
        0
      ],
      [
        2060,
        0
      ]
    ]
  ],
  [
    2057,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5467,
        0
      ]
    ]
  ],
  [
    2054,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2051,
        0
      ]
    ]
  ],
  [
    2052,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2051,
        0
      ]
    ]
  ],
  [
    2053,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2052,
        0
      ]
    ]
  ],
  [
    2055,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2053,
        0
      ],
      [
        2054,
        0
      ]
    ]
  ],
  [
    2058,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2055,
        0
      ],
      [
        2057,
        0
      ]
    ]
  ],
  [
    2062,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2061,
        0
      ],
      [
        2058,
        0
      ]
    ]
  ],
  [
    2063,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2062,
        0
      ]
    ]
  ],
  [
    2068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5508,
        0
      ]
    ]
  ],
  [
    5796,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5794,
        0
      ]
    ]
  ],
  [
    2066,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5796,
        0
      ]
    ]
  ],
  [
    2069,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2066,
        0
      ],
      [
        2068,
        0
      ]
    ]
  ],
  [
    2070,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2069,
        0
      ]
    ]
  ],
  [
    2077,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5509,
        0
      ]
    ]
  ],
  [
    2071,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2066,
        0
      ]
    ]
  ],
  [
    2074,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2071,
        0
      ]
    ]
  ],
  [
    2072,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2071,
        0
      ]
    ]
  ],
  [
    2073,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2072,
        0
      ]
    ]
  ],
  [
    2075,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2073,
        0
      ],
      [
        2074,
        0
      ]
    ]
  ],
  [
    2078,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2075,
        0
      ],
      [
        2077,
        0
      ]
    ]
  ],
  [
    2079,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2070,
        0
      ],
      [
        2078,
        0
      ]
    ]
  ],
  [
    2084,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2079,
        0
      ],
      [
        2063,
        0
      ]
    ]
  ],
  [
    2087,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2084,
        0
      ],
      [
        2086,
        0
      ]
    ]
  ],
  [
    2090,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2087,
        0
      ],
      [
        2089,
        0
      ]
    ]
  ],
  [
    6128,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2090,
        0
      ]
    ]
  ],
  [
    6129,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2090,
        0
      ],
      [
        6128,
        0
      ]
    ]
  ],
  [
    6130,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6129,
        0
      ]
    ]
  ],
  [
    6131,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6129,
        0
      ],
      [
        6130,
        0
      ]
    ]
  ],
  [
    2100,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6131,
        0
      ],
      [
        2095,
        0
      ]
    ]
  ],
  [
    2102,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2100,
        0
      ]
    ]
  ],
  [
    2103,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2102,
        0
      ]
    ]
  ],
  [
    2104,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2103,
        0
      ],
      [
        1542,
        0
      ]
    ]
  ],
  [
    2105,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2034,
        0
      ],
      [
        2104,
        0
      ]
    ]
  ],
  [
    1540,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1096,
        0
      ]
    ]
  ],
  [
    1541,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1095,
        0
      ]
    ]
  ],
  [
    2122,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1094,
        0
      ]
    ]
  ],
  [
    5798,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2122,
        0
      ],
      [
        1541,
        0
      ]
    ]
  ],
  [
    2119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1098,
        0
      ]
    ]
  ],
  [
    2113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5511,
        0
      ]
    ]
  ],
  [
    2109,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2108,
        0
      ]
    ]
  ],
  [
    2106,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2105,
        0
      ],
      [
        2105,
        0
      ]
    ]
  ],
  [
    2107,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2106,
        0
      ]
    ]
  ],
  [
    2110,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2107,
        0
      ],
      [
        2109,
        0
      ]
    ]
  ],
  [
    2111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2110,
        0
      ]
    ]
  ],
  [
    2114,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2111,
        0
      ],
      [
        2113,
        0
      ]
    ]
  ],
  [
    2115,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2114,
        0
      ]
    ]
  ],
  [
    2116,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2115,
        0
      ]
    ]
  ],
  [
    2117,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2116,
        0
      ]
    ]
  ],
  [
    2118,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2105,
        0
      ],
      [
        2117,
        0
      ]
    ]
  ],
  [
    2120,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2119,
        0
      ],
      [
        2118,
        0
      ]
    ]
  ],
  [
    5799,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2120,
        0
      ],
      [
        5798,
        0
      ]
    ]
  ],
  [
    5801,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5799,
        0
      ]
    ]
  ],
  [
    5800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5799,
        0
      ]
    ]
  ],
  [
    2124,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5800,
        0
      ]
    ]
  ],
  [
    2125,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5800,
        0
      ],
      [
        2124,
        0
      ]
    ]
  ],
  [
    2126,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2125,
        0
      ],
      [
        5801,
        0
      ]
    ]
  ],
  [
    2127,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2126,
        0
      ],
      [
        1540,
        0
      ]
    ]
  ],
  [
    2128,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2105,
        0
      ],
      [
        2127,
        0
      ]
    ]
  ],
  [
    1538,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1102,
        0
      ]
    ]
  ],
  [
    2186,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1101,
        0
      ]
    ]
  ],
  [
    2158,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1099,
        0
      ]
    ]
  ],
  [
    1539,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1100,
        0
      ]
    ]
  ],
  [
    5802,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1539,
        0
      ],
      [
        2158,
        0
      ],
      [
        2186,
        0
      ]
    ]
  ],
  [
    2142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1106,
        0
      ]
    ]
  ],
  [
    2136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5512,
        0
      ]
    ]
  ],
  [
    2132,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2131,
        0
      ]
    ]
  ],
  [
    2129,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2128,
        0
      ],
      [
        2128,
        0
      ]
    ]
  ],
  [
    2130,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2129,
        0
      ]
    ]
  ],
  [
    2133,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2130,
        0
      ],
      [
        2132,
        0
      ]
    ]
  ],
  [
    2134,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2133,
        0
      ]
    ]
  ],
  [
    2137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2134,
        0
      ],
      [
        2136,
        0
      ]
    ]
  ],
  [
    2138,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2137,
        0
      ]
    ]
  ],
  [
    2139,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2138,
        0
      ]
    ]
  ],
  [
    2140,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2139,
        0
      ]
    ]
  ],
  [
    2141,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2128,
        0
      ],
      [
        2140,
        0
      ]
    ]
  ],
  [
    2143,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2142,
        0
      ],
      [
        2141,
        0
      ]
    ]
  ],
  [
    5803,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2143,
        0
      ],
      [
        5802,
        0
      ]
    ]
  ],
  [
    5806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5806,
        0
      ]
    ]
  ],
  [
    2189,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2188,
        0
      ]
    ]
  ],
  [
    2183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5517,
        0
      ]
    ]
  ],
  [
    2180,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        118,
        0
      ]
    ]
  ],
  [
    2154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5514,
        0
      ]
    ]
  ],
  [
    5804,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5804,
        0
      ]
    ]
  ],
  [
    2155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2145,
        0
      ],
      [
        2154,
        0
      ]
    ]
  ],
  [
    2151,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5513,
        0
      ]
    ]
  ],
  [
    2148,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2145,
        0
      ]
    ]
  ],
  [
    2146,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2145,
        0
      ]
    ]
  ],
  [
    2147,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2146,
        0
      ]
    ]
  ],
  [
    2149,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2147,
        0
      ],
      [
        2148,
        0
      ]
    ]
  ],
  [
    2152,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2149,
        0
      ],
      [
        2151,
        0
      ]
    ]
  ],
  [
    2156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2155,
        0
      ],
      [
        2152,
        0
      ]
    ]
  ],
  [
    2157,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2156,
        0
      ]
    ]
  ],
  [
    2162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5515,
        0
      ]
    ]
  ],
  [
    5805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5803,
        0
      ]
    ]
  ],
  [
    2160,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5805,
        0
      ]
    ]
  ],
  [
    2163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2160,
        0
      ],
      [
        2162,
        0
      ]
    ]
  ],
  [
    2164,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2163,
        0
      ]
    ]
  ],
  [
    2171,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5516,
        0
      ]
    ]
  ],
  [
    2165,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2160,
        0
      ]
    ]
  ],
  [
    2168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2166,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2167,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2166,
        0
      ]
    ]
  ],
  [
    2169,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2167,
        0
      ],
      [
        2168,
        0
      ]
    ]
  ],
  [
    2172,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2169,
        0
      ],
      [
        2171,
        0
      ]
    ]
  ],
  [
    2173,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2164,
        0
      ],
      [
        2172,
        0
      ]
    ]
  ],
  [
    2178,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2173,
        0
      ],
      [
        2157,
        0
      ]
    ]
  ],
  [
    2181,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2178,
        0
      ],
      [
        2180,
        0
      ]
    ]
  ],
  [
    2184,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2181,
        0
      ],
      [
        2183,
        0
      ]
    ]
  ],
  [
    6132,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2184,
        0
      ]
    ]
  ],
  [
    6133,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2184,
        0
      ],
      [
        6132,
        0
      ]
    ]
  ],
  [
    6134,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6133,
        0
      ]
    ]
  ],
  [
    6135,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6133,
        0
      ],
      [
        6134,
        0
      ]
    ]
  ],
  [
    2194,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6135,
        0
      ],
      [
        2189,
        0
      ]
    ]
  ],
  [
    2196,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2194,
        0
      ]
    ]
  ],
  [
    2197,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2196,
        0
      ]
    ]
  ],
  [
    2198,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2197,
        0
      ],
      [
        1538,
        0
      ]
    ]
  ],
  [
    2199,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2128,
        0
      ],
      [
        2198,
        0
      ]
    ]
  ],
  [
    1536,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1105,
        0
      ]
    ]
  ],
  [
    1537,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1104,
        0
      ]
    ]
  ],
  [
    2216,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1103,
        0
      ]
    ]
  ],
  [
    5807,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2216,
        0
      ],
      [
        1537,
        0
      ]
    ]
  ],
  [
    2213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1107,
        0
      ]
    ]
  ],
  [
    2207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5518,
        0
      ]
    ]
  ],
  [
    2203,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2202,
        0
      ]
    ]
  ],
  [
    2200,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2199,
        0
      ],
      [
        2199,
        0
      ]
    ]
  ],
  [
    2201,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2200,
        0
      ]
    ]
  ],
  [
    2204,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2201,
        0
      ],
      [
        2203,
        0
      ]
    ]
  ],
  [
    2205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2204,
        0
      ]
    ]
  ],
  [
    2208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2205,
        0
      ],
      [
        2207,
        0
      ]
    ]
  ],
  [
    2209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2208,
        0
      ]
    ]
  ],
  [
    2210,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2209,
        0
      ]
    ]
  ],
  [
    2211,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2210,
        0
      ]
    ]
  ],
  [
    2212,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2199,
        0
      ],
      [
        2211,
        0
      ]
    ]
  ],
  [
    2214,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2213,
        0
      ],
      [
        2212,
        0
      ]
    ]
  ],
  [
    5808,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2214,
        0
      ],
      [
        5807,
        0
      ]
    ]
  ],
  [
    5810,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5808,
        0
      ]
    ]
  ],
  [
    5809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5808,
        0
      ]
    ]
  ],
  [
    2218,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5809,
        0
      ]
    ]
  ],
  [
    2219,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5809,
        0
      ],
      [
        2218,
        0
      ]
    ]
  ],
  [
    2220,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2219,
        0
      ],
      [
        5810,
        0
      ]
    ]
  ],
  [
    2221,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2220,
        0
      ],
      [
        1536,
        0
      ]
    ]
  ],
  [
    2222,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2199,
        0
      ],
      [
        2221,
        0
      ]
    ]
  ],
  [
    1534,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1111,
        0
      ]
    ]
  ],
  [
    2280,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1110,
        0
      ]
    ]
  ],
  [
    2252,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1108,
        0
      ]
    ]
  ],
  [
    1535,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1109,
        0
      ]
    ]
  ],
  [
    5811,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1535,
        0
      ],
      [
        2252,
        0
      ],
      [
        2280,
        0
      ]
    ]
  ],
  [
    2236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1115,
        0
      ]
    ]
  ],
  [
    2230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5521,
        0
      ]
    ]
  ],
  [
    2226,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2225,
        0
      ]
    ]
  ],
  [
    2223,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2222,
        0
      ],
      [
        2222,
        0
      ]
    ]
  ],
  [
    2224,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2223,
        0
      ]
    ]
  ],
  [
    2227,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2224,
        0
      ],
      [
        2226,
        0
      ]
    ]
  ],
  [
    2228,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2227,
        0
      ]
    ]
  ],
  [
    2231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2228,
        0
      ],
      [
        2230,
        0
      ]
    ]
  ],
  [
    2232,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2231,
        0
      ]
    ]
  ],
  [
    2233,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2232,
        0
      ]
    ]
  ],
  [
    2234,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2233,
        0
      ]
    ]
  ],
  [
    2235,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2222,
        0
      ],
      [
        2234,
        0
      ]
    ]
  ],
  [
    2237,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2236,
        0
      ],
      [
        2235,
        0
      ]
    ]
  ],
  [
    5812,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2237,
        0
      ],
      [
        5811,
        0
      ]
    ]
  ],
  [
    5815,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5812,
        0
      ]
    ]
  ],
  [
    2282,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5815,
        0
      ]
    ]
  ],
  [
    2283,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2282,
        0
      ]
    ]
  ],
  [
    2277,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5526,
        0
      ]
    ]
  ],
  [
    2274,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        132,
        0
      ]
    ]
  ],
  [
    2248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5523,
        0
      ]
    ]
  ],
  [
    5813,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5812,
        0
      ]
    ]
  ],
  [
    2239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5813,
        0
      ]
    ]
  ],
  [
    2249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2239,
        0
      ],
      [
        2248,
        0
      ]
    ]
  ],
  [
    2245,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5522,
        0
      ]
    ]
  ],
  [
    2242,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2239,
        0
      ]
    ]
  ],
  [
    2240,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2239,
        0
      ]
    ]
  ],
  [
    2241,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2240,
        0
      ]
    ]
  ],
  [
    2243,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2241,
        0
      ],
      [
        2242,
        0
      ]
    ]
  ],
  [
    2246,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2243,
        0
      ],
      [
        2245,
        0
      ]
    ]
  ],
  [
    2250,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2249,
        0
      ],
      [
        2246,
        0
      ]
    ]
  ],
  [
    2251,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2250,
        0
      ]
    ]
  ],
  [
    2256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5524,
        0
      ]
    ]
  ],
  [
    5814,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5812,
        0
      ]
    ]
  ],
  [
    2254,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5814,
        0
      ]
    ]
  ],
  [
    2257,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2254,
        0
      ],
      [
        2256,
        0
      ]
    ]
  ],
  [
    2258,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2257,
        0
      ]
    ]
  ],
  [
    2265,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5525,
        0
      ]
    ]
  ],
  [
    2259,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2254,
        0
      ]
    ]
  ],
  [
    2262,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2259,
        0
      ]
    ]
  ],
  [
    2260,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2259,
        0
      ]
    ]
  ],
  [
    2261,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2260,
        0
      ]
    ]
  ],
  [
    2263,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2261,
        0
      ],
      [
        2262,
        0
      ]
    ]
  ],
  [
    2266,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2263,
        0
      ],
      [
        2265,
        0
      ]
    ]
  ],
  [
    2267,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2258,
        0
      ],
      [
        2266,
        0
      ]
    ]
  ],
  [
    2272,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2267,
        0
      ],
      [
        2251,
        0
      ]
    ]
  ],
  [
    2275,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2272,
        0
      ],
      [
        2274,
        0
      ]
    ]
  ],
  [
    2278,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2275,
        0
      ],
      [
        2277,
        0
      ]
    ]
  ],
  [
    6136,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2278,
        0
      ]
    ]
  ],
  [
    6137,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2278,
        0
      ],
      [
        6136,
        0
      ]
    ]
  ],
  [
    6138,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6137,
        0
      ]
    ]
  ],
  [
    6139,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6137,
        0
      ],
      [
        6138,
        0
      ]
    ]
  ],
  [
    2288,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6139,
        0
      ],
      [
        2283,
        0
      ]
    ]
  ],
  [
    2290,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2288,
        0
      ]
    ]
  ],
  [
    2291,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2290,
        0
      ]
    ]
  ],
  [
    2292,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2291,
        0
      ],
      [
        1534,
        0
      ]
    ]
  ],
  [
    2293,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2222,
        0
      ],
      [
        2292,
        0
      ]
    ]
  ],
  [
    1532,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1114,
        0
      ]
    ]
  ],
  [
    1533,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1113,
        0
      ]
    ]
  ],
  [
    2310,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1112,
        0
      ]
    ]
  ],
  [
    5816,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2310,
        0
      ],
      [
        1533,
        0
      ]
    ]
  ],
  [
    2307,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1116,
        0
      ]
    ]
  ],
  [
    2301,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5527,
        0
      ]
    ]
  ],
  [
    2297,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2296,
        0
      ]
    ]
  ],
  [
    2294,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2293,
        0
      ],
      [
        2293,
        0
      ]
    ]
  ],
  [
    2295,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2294,
        0
      ]
    ]
  ],
  [
    2298,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2295,
        0
      ],
      [
        2297,
        0
      ]
    ]
  ],
  [
    2299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2298,
        0
      ]
    ]
  ],
  [
    2302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2299,
        0
      ],
      [
        2301,
        0
      ]
    ]
  ],
  [
    2303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2302,
        0
      ]
    ]
  ],
  [
    2304,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2303,
        0
      ]
    ]
  ],
  [
    2305,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2304,
        0
      ]
    ]
  ],
  [
    2306,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2293,
        0
      ],
      [
        2305,
        0
      ]
    ]
  ],
  [
    2308,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2307,
        0
      ],
      [
        2306,
        0
      ]
    ]
  ],
  [
    5817,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2308,
        0
      ],
      [
        5816,
        0
      ]
    ]
  ],
  [
    5819,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5817,
        0
      ]
    ]
  ],
  [
    5818,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5817,
        0
      ]
    ]
  ],
  [
    2312,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5818,
        0
      ]
    ]
  ],
  [
    2313,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5818,
        0
      ],
      [
        2312,
        0
      ]
    ]
  ],
  [
    2314,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2313,
        0
      ],
      [
        5819,
        0
      ]
    ]
  ],
  [
    2315,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2314,
        0
      ],
      [
        1532,
        0
      ]
    ]
  ],
  [
    2316,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2293,
        0
      ],
      [
        2315,
        0
      ]
    ]
  ],
  [
    1530,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1120,
        0
      ]
    ]
  ],
  [
    2374,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1119,
        0
      ]
    ]
  ],
  [
    2346,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1117,
        0
      ]
    ]
  ],
  [
    1531,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1118,
        0
      ]
    ]
  ],
  [
    5820,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1531,
        0
      ],
      [
        2346,
        0
      ],
      [
        2374,
        0
      ]
    ]
  ],
  [
    2330,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1124,
        0
      ]
    ]
  ],
  [
    2324,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5528,
        0
      ]
    ]
  ],
  [
    2320,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2319,
        0
      ]
    ]
  ],
  [
    2317,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2316,
        0
      ],
      [
        2316,
        0
      ]
    ]
  ],
  [
    2318,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2317,
        0
      ]
    ]
  ],
  [
    2321,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2318,
        0
      ],
      [
        2320,
        0
      ]
    ]
  ],
  [
    2322,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2321,
        0
      ]
    ]
  ],
  [
    2325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2322,
        0
      ],
      [
        2324,
        0
      ]
    ]
  ],
  [
    2326,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2325,
        0
      ]
    ]
  ],
  [
    2327,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2326,
        0
      ]
    ]
  ],
  [
    2328,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2327,
        0
      ]
    ]
  ],
  [
    2329,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2316,
        0
      ],
      [
        2328,
        0
      ]
    ]
  ],
  [
    2331,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2330,
        0
      ],
      [
        2329,
        0
      ]
    ]
  ],
  [
    5821,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2331,
        0
      ],
      [
        5820,
        0
      ]
    ]
  ],
  [
    5824,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5821,
        0
      ]
    ]
  ],
  [
    2376,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5824,
        0
      ]
    ]
  ],
  [
    2377,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2376,
        0
      ]
    ]
  ],
  [
    2371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5533,
        0
      ]
    ]
  ],
  [
    2368,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        146,
        0
      ]
    ]
  ],
  [
    2342,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5530,
        0
      ]
    ]
  ],
  [
    5822,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5821,
        0
      ]
    ]
  ],
  [
    2333,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5822,
        0
      ]
    ]
  ],
  [
    2343,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2333,
        0
      ],
      [
        2342,
        0
      ]
    ]
  ],
  [
    2339,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5529,
        0
      ]
    ]
  ],
  [
    2336,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2333,
        0
      ]
    ]
  ],
  [
    2334,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2333,
        0
      ]
    ]
  ],
  [
    2335,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2334,
        0
      ]
    ]
  ],
  [
    2337,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2335,
        0
      ],
      [
        2336,
        0
      ]
    ]
  ],
  [
    2340,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2337,
        0
      ],
      [
        2339,
        0
      ]
    ]
  ],
  [
    2344,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2343,
        0
      ],
      [
        2340,
        0
      ]
    ]
  ],
  [
    2345,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2344,
        0
      ]
    ]
  ],
  [
    2350,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5531,
        0
      ]
    ]
  ],
  [
    5823,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5821,
        0
      ]
    ]
  ],
  [
    2348,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5823,
        0
      ]
    ]
  ],
  [
    2351,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2348,
        0
      ],
      [
        2350,
        0
      ]
    ]
  ],
  [
    2352,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2351,
        0
      ]
    ]
  ],
  [
    2359,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5532,
        0
      ]
    ]
  ],
  [
    2353,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2348,
        0
      ]
    ]
  ],
  [
    2356,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2353,
        0
      ]
    ]
  ],
  [
    2354,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2353,
        0
      ]
    ]
  ],
  [
    2355,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2354,
        0
      ]
    ]
  ],
  [
    2357,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2355,
        0
      ],
      [
        2356,
        0
      ]
    ]
  ],
  [
    2360,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2357,
        0
      ],
      [
        2359,
        0
      ]
    ]
  ],
  [
    2361,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2352,
        0
      ],
      [
        2360,
        0
      ]
    ]
  ],
  [
    2366,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2361,
        0
      ],
      [
        2345,
        0
      ]
    ]
  ],
  [
    2369,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2366,
        0
      ],
      [
        2368,
        0
      ]
    ]
  ],
  [
    2372,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2369,
        0
      ],
      [
        2371,
        0
      ]
    ]
  ],
  [
    6140,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2372,
        0
      ]
    ]
  ],
  [
    6141,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2372,
        0
      ],
      [
        6140,
        0
      ]
    ]
  ],
  [
    6142,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6141,
        0
      ]
    ]
  ],
  [
    6143,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6141,
        0
      ],
      [
        6142,
        0
      ]
    ]
  ],
  [
    2382,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6143,
        0
      ],
      [
        2377,
        0
      ]
    ]
  ],
  [
    2384,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2382,
        0
      ]
    ]
  ],
  [
    2385,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2384,
        0
      ]
    ]
  ],
  [
    2386,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2385,
        0
      ],
      [
        1530,
        0
      ]
    ]
  ],
  [
    2387,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2316,
        0
      ],
      [
        2386,
        0
      ]
    ]
  ],
  [
    1528,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1123,
        0
      ]
    ]
  ],
  [
    1529,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1122,
        0
      ]
    ]
  ],
  [
    2404,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1121,
        0
      ]
    ]
  ],
  [
    5825,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2404,
        0
      ],
      [
        1529,
        0
      ]
    ]
  ],
  [
    2401,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1125,
        0
      ]
    ]
  ],
  [
    2395,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5534,
        0
      ]
    ]
  ],
  [
    2391,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2390,
        0
      ]
    ]
  ],
  [
    2388,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2387,
        0
      ],
      [
        2387,
        0
      ]
    ]
  ],
  [
    2389,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2388,
        0
      ]
    ]
  ],
  [
    2392,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2389,
        0
      ],
      [
        2391,
        0
      ]
    ]
  ],
  [
    2393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2392,
        0
      ]
    ]
  ],
  [
    2396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2393,
        0
      ],
      [
        2395,
        0
      ]
    ]
  ],
  [
    2397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2396,
        0
      ]
    ]
  ],
  [
    2398,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2397,
        0
      ]
    ]
  ],
  [
    2399,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2398,
        0
      ]
    ]
  ],
  [
    2400,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2387,
        0
      ],
      [
        2399,
        0
      ]
    ]
  ],
  [
    2402,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2401,
        0
      ],
      [
        2400,
        0
      ]
    ]
  ],
  [
    5826,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2402,
        0
      ],
      [
        5825,
        0
      ]
    ]
  ],
  [
    5828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5826,
        0
      ]
    ]
  ],
  [
    5827,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5826,
        0
      ]
    ]
  ],
  [
    2406,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5827,
        0
      ]
    ]
  ],
  [
    2407,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5827,
        0
      ],
      [
        2406,
        0
      ]
    ]
  ],
  [
    2408,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2407,
        0
      ],
      [
        5828,
        0
      ]
    ]
  ],
  [
    2409,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2408,
        0
      ],
      [
        1528,
        0
      ]
    ]
  ],
  [
    2410,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2387,
        0
      ],
      [
        2409,
        0
      ]
    ]
  ],
  [
    1526,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1129,
        0
      ]
    ]
  ],
  [
    2468,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1128,
        0
      ]
    ]
  ],
  [
    2440,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1126,
        0
      ]
    ]
  ],
  [
    1527,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1127,
        0
      ]
    ]
  ],
  [
    5829,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1527,
        0
      ],
      [
        2440,
        0
      ],
      [
        2468,
        0
      ]
    ]
  ],
  [
    2424,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1133,
        0
      ]
    ]
  ],
  [
    2418,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5535,
        0
      ]
    ]
  ],
  [
    2414,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2413,
        0
      ]
    ]
  ],
  [
    2411,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2410,
        0
      ],
      [
        2410,
        0
      ]
    ]
  ],
  [
    2412,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2411,
        0
      ]
    ]
  ],
  [
    2415,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2412,
        0
      ],
      [
        2414,
        0
      ]
    ]
  ],
  [
    2416,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2415,
        0
      ]
    ]
  ],
  [
    2419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2416,
        0
      ],
      [
        2418,
        0
      ]
    ]
  ],
  [
    2420,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2419,
        0
      ]
    ]
  ],
  [
    2421,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2420,
        0
      ]
    ]
  ],
  [
    2422,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2421,
        0
      ]
    ]
  ],
  [
    2423,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2410,
        0
      ],
      [
        2422,
        0
      ]
    ]
  ],
  [
    2425,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2424,
        0
      ],
      [
        2423,
        0
      ]
    ]
  ],
  [
    5830,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2425,
        0
      ],
      [
        5829,
        0
      ]
    ]
  ],
  [
    5833,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5830,
        0
      ]
    ]
  ],
  [
    2470,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5833,
        0
      ]
    ]
  ],
  [
    2471,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2470,
        0
      ]
    ]
  ],
  [
    2465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5540,
        0
      ]
    ]
  ],
  [
    2462,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        160,
        0
      ]
    ]
  ],
  [
    2436,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5537,
        0
      ]
    ]
  ],
  [
    5831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5830,
        0
      ]
    ]
  ],
  [
    2427,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5831,
        0
      ]
    ]
  ],
  [
    2437,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2427,
        0
      ],
      [
        2436,
        0
      ]
    ]
  ],
  [
    2433,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5536,
        0
      ]
    ]
  ],
  [
    2430,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2427,
        0
      ]
    ]
  ],
  [
    2428,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2427,
        0
      ]
    ]
  ],
  [
    2429,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2428,
        0
      ]
    ]
  ],
  [
    2431,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2429,
        0
      ],
      [
        2430,
        0
      ]
    ]
  ],
  [
    2434,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2431,
        0
      ],
      [
        2433,
        0
      ]
    ]
  ],
  [
    2438,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2437,
        0
      ],
      [
        2434,
        0
      ]
    ]
  ],
  [
    2439,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2438,
        0
      ]
    ]
  ],
  [
    2444,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5538,
        0
      ]
    ]
  ],
  [
    5832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5830,
        0
      ]
    ]
  ],
  [
    2442,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5832,
        0
      ]
    ]
  ],
  [
    2445,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2442,
        0
      ],
      [
        2444,
        0
      ]
    ]
  ],
  [
    2446,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2445,
        0
      ]
    ]
  ],
  [
    2453,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5539,
        0
      ]
    ]
  ],
  [
    2447,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2442,
        0
      ]
    ]
  ],
  [
    2450,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2447,
        0
      ]
    ]
  ],
  [
    2448,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2447,
        0
      ]
    ]
  ],
  [
    2449,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2448,
        0
      ]
    ]
  ],
  [
    2451,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2449,
        0
      ],
      [
        2450,
        0
      ]
    ]
  ],
  [
    2454,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2451,
        0
      ],
      [
        2453,
        0
      ]
    ]
  ],
  [
    2455,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2446,
        0
      ],
      [
        2454,
        0
      ]
    ]
  ],
  [
    2460,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2455,
        0
      ],
      [
        2439,
        0
      ]
    ]
  ],
  [
    2463,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2460,
        0
      ],
      [
        2462,
        0
      ]
    ]
  ],
  [
    2466,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2463,
        0
      ],
      [
        2465,
        0
      ]
    ]
  ],
  [
    6144,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2466,
        0
      ]
    ]
  ],
  [
    6145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2466,
        0
      ],
      [
        6144,
        0
      ]
    ]
  ],
  [
    6146,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6145,
        0
      ]
    ]
  ],
  [
    6147,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6145,
        0
      ],
      [
        6146,
        0
      ]
    ]
  ],
  [
    2476,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6147,
        0
      ],
      [
        2471,
        0
      ]
    ]
  ],
  [
    2478,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2476,
        0
      ]
    ]
  ],
  [
    2479,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2478,
        0
      ]
    ]
  ],
  [
    2480,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2479,
        0
      ],
      [
        1526,
        0
      ]
    ]
  ],
  [
    2481,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2410,
        0
      ],
      [
        2480,
        0
      ]
    ]
  ],
  [
    1524,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1132,
        0
      ]
    ]
  ],
  [
    1525,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1131,
        0
      ]
    ]
  ],
  [
    2498,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1130,
        0
      ]
    ]
  ],
  [
    5834,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2498,
        0
      ],
      [
        1525,
        0
      ]
    ]
  ],
  [
    2495,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1134,
        0
      ]
    ]
  ],
  [
    2489,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5541,
        0
      ]
    ]
  ],
  [
    2485,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2484,
        0
      ]
    ]
  ],
  [
    2482,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2481,
        0
      ],
      [
        2481,
        0
      ]
    ]
  ],
  [
    2483,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2482,
        0
      ]
    ]
  ],
  [
    2486,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2483,
        0
      ],
      [
        2485,
        0
      ]
    ]
  ],
  [
    2487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2486,
        0
      ]
    ]
  ],
  [
    2490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2487,
        0
      ],
      [
        2489,
        0
      ]
    ]
  ],
  [
    2491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2490,
        0
      ]
    ]
  ],
  [
    2492,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2491,
        0
      ]
    ]
  ],
  [
    2493,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2492,
        0
      ]
    ]
  ],
  [
    2494,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2481,
        0
      ],
      [
        2493,
        0
      ]
    ]
  ],
  [
    2496,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2495,
        0
      ],
      [
        2494,
        0
      ]
    ]
  ],
  [
    5835,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2496,
        0
      ],
      [
        5834,
        0
      ]
    ]
  ],
  [
    5837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5835,
        0
      ]
    ]
  ],
  [
    5836,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5835,
        0
      ]
    ]
  ],
  [
    2500,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5836,
        0
      ]
    ]
  ],
  [
    2501,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5836,
        0
      ],
      [
        2500,
        0
      ]
    ]
  ],
  [
    2502,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2501,
        0
      ],
      [
        5837,
        0
      ]
    ]
  ],
  [
    2503,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2502,
        0
      ],
      [
        1524,
        0
      ]
    ]
  ],
  [
    2504,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2481,
        0
      ],
      [
        2503,
        0
      ]
    ]
  ],
  [
    1522,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1138,
        0
      ]
    ]
  ],
  [
    2562,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1137,
        0
      ]
    ]
  ],
  [
    2534,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1135,
        0
      ]
    ]
  ],
  [
    1523,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1136,
        0
      ]
    ]
  ],
  [
    5838,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1523,
        0
      ],
      [
        2534,
        0
      ],
      [
        2562,
        0
      ]
    ]
  ],
  [
    2518,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1142,
        0
      ]
    ]
  ],
  [
    2512,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5542,
        0
      ]
    ]
  ],
  [
    2508,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2507,
        0
      ]
    ]
  ],
  [
    2505,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2504,
        0
      ],
      [
        2504,
        0
      ]
    ]
  ],
  [
    2506,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2505,
        0
      ]
    ]
  ],
  [
    2509,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2506,
        0
      ],
      [
        2508,
        0
      ]
    ]
  ],
  [
    2510,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2509,
        0
      ]
    ]
  ],
  [
    2513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2510,
        0
      ],
      [
        2512,
        0
      ]
    ]
  ],
  [
    2514,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2513,
        0
      ]
    ]
  ],
  [
    2515,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2514,
        0
      ]
    ]
  ],
  [
    2516,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2515,
        0
      ]
    ]
  ],
  [
    2517,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2504,
        0
      ],
      [
        2516,
        0
      ]
    ]
  ],
  [
    2519,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2518,
        0
      ],
      [
        2517,
        0
      ]
    ]
  ],
  [
    5839,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2519,
        0
      ],
      [
        5838,
        0
      ]
    ]
  ],
  [
    5842,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5839,
        0
      ]
    ]
  ],
  [
    2564,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5842,
        0
      ]
    ]
  ],
  [
    2565,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2564,
        0
      ]
    ]
  ],
  [
    2559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5547,
        0
      ]
    ]
  ],
  [
    2556,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        174,
        0
      ]
    ]
  ],
  [
    2530,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5544,
        0
      ]
    ]
  ],
  [
    5840,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5839,
        0
      ]
    ]
  ],
  [
    2521,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5840,
        0
      ]
    ]
  ],
  [
    2531,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2521,
        0
      ],
      [
        2530,
        0
      ]
    ]
  ],
  [
    2527,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5543,
        0
      ]
    ]
  ],
  [
    2524,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2521,
        0
      ]
    ]
  ],
  [
    2522,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2521,
        0
      ]
    ]
  ],
  [
    2523,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2522,
        0
      ]
    ]
  ],
  [
    2525,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2523,
        0
      ],
      [
        2524,
        0
      ]
    ]
  ],
  [
    2528,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2525,
        0
      ],
      [
        2527,
        0
      ]
    ]
  ],
  [
    2532,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2531,
        0
      ],
      [
        2528,
        0
      ]
    ]
  ],
  [
    2533,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2532,
        0
      ]
    ]
  ],
  [
    2538,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5545,
        0
      ]
    ]
  ],
  [
    5841,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5839,
        0
      ]
    ]
  ],
  [
    2536,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5841,
        0
      ]
    ]
  ],
  [
    2539,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2536,
        0
      ],
      [
        2538,
        0
      ]
    ]
  ],
  [
    2540,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2539,
        0
      ]
    ]
  ],
  [
    2547,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5546,
        0
      ]
    ]
  ],
  [
    2541,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2536,
        0
      ]
    ]
  ],
  [
    2544,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2541,
        0
      ]
    ]
  ],
  [
    2542,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2541,
        0
      ]
    ]
  ],
  [
    2543,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2542,
        0
      ]
    ]
  ],
  [
    2545,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2543,
        0
      ],
      [
        2544,
        0
      ]
    ]
  ],
  [
    2548,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2545,
        0
      ],
      [
        2547,
        0
      ]
    ]
  ],
  [
    2549,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2540,
        0
      ],
      [
        2548,
        0
      ]
    ]
  ],
  [
    2554,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2549,
        0
      ],
      [
        2533,
        0
      ]
    ]
  ],
  [
    2557,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2554,
        0
      ],
      [
        2556,
        0
      ]
    ]
  ],
  [
    2560,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2557,
        0
      ],
      [
        2559,
        0
      ]
    ]
  ],
  [
    6148,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2560,
        0
      ]
    ]
  ],
  [
    6149,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2560,
        0
      ],
      [
        6148,
        0
      ]
    ]
  ],
  [
    6150,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6149,
        0
      ]
    ]
  ],
  [
    6151,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6149,
        0
      ],
      [
        6150,
        0
      ]
    ]
  ],
  [
    2570,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6151,
        0
      ],
      [
        2565,
        0
      ]
    ]
  ],
  [
    2572,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2570,
        0
      ]
    ]
  ],
  [
    2573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2572,
        0
      ]
    ]
  ],
  [
    2574,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2573,
        0
      ],
      [
        1522,
        0
      ]
    ]
  ],
  [
    2575,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2504,
        0
      ],
      [
        2574,
        0
      ]
    ]
  ],
  [
    1520,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1141,
        0
      ]
    ]
  ],
  [
    1521,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1140,
        0
      ]
    ]
  ],
  [
    2592,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1139,
        0
      ]
    ]
  ],
  [
    5843,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2592,
        0
      ],
      [
        1521,
        0
      ]
    ]
  ],
  [
    2589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1143,
        0
      ]
    ]
  ],
  [
    2583,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5548,
        0
      ]
    ]
  ],
  [
    2579,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2578,
        0
      ]
    ]
  ],
  [
    2576,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2575,
        0
      ],
      [
        2575,
        0
      ]
    ]
  ],
  [
    2577,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2576,
        0
      ]
    ]
  ],
  [
    2580,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2577,
        0
      ],
      [
        2579,
        0
      ]
    ]
  ],
  [
    2581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2580,
        0
      ]
    ]
  ],
  [
    2584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2581,
        0
      ],
      [
        2583,
        0
      ]
    ]
  ],
  [
    2585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2584,
        0
      ]
    ]
  ],
  [
    2586,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2585,
        0
      ]
    ]
  ],
  [
    2587,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2586,
        0
      ]
    ]
  ],
  [
    2588,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2575,
        0
      ],
      [
        2587,
        0
      ]
    ]
  ],
  [
    2590,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2589,
        0
      ],
      [
        2588,
        0
      ]
    ]
  ],
  [
    5844,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2590,
        0
      ],
      [
        5843,
        0
      ]
    ]
  ],
  [
    5846,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5844,
        0
      ]
    ]
  ],
  [
    5845,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5844,
        0
      ]
    ]
  ],
  [
    2594,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5845,
        0
      ]
    ]
  ],
  [
    2595,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5845,
        0
      ],
      [
        2594,
        0
      ]
    ]
  ],
  [
    2596,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2595,
        0
      ],
      [
        5846,
        0
      ]
    ]
  ],
  [
    2597,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2596,
        0
      ],
      [
        1520,
        0
      ]
    ]
  ],
  [
    2598,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2575,
        0
      ],
      [
        2597,
        0
      ]
    ]
  ],
  [
    1518,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1147,
        0
      ]
    ]
  ],
  [
    2656,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1146,
        0
      ]
    ]
  ],
  [
    2628,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1144,
        0
      ]
    ]
  ],
  [
    1519,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1145,
        0
      ]
    ]
  ],
  [
    5847,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1519,
        0
      ],
      [
        2628,
        0
      ],
      [
        2656,
        0
      ]
    ]
  ],
  [
    2612,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1151,
        0
      ]
    ]
  ],
  [
    2606,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5549,
        0
      ]
    ]
  ],
  [
    2602,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2601,
        0
      ]
    ]
  ],
  [
    2599,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2598,
        0
      ],
      [
        2598,
        0
      ]
    ]
  ],
  [
    2600,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2599,
        0
      ]
    ]
  ],
  [
    2603,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2600,
        0
      ],
      [
        2602,
        0
      ]
    ]
  ],
  [
    2604,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2603,
        0
      ]
    ]
  ],
  [
    2607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2604,
        0
      ],
      [
        2606,
        0
      ]
    ]
  ],
  [
    2608,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2607,
        0
      ]
    ]
  ],
  [
    2609,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2608,
        0
      ]
    ]
  ],
  [
    2610,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2609,
        0
      ]
    ]
  ],
  [
    2611,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2598,
        0
      ],
      [
        2610,
        0
      ]
    ]
  ],
  [
    2613,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2612,
        0
      ],
      [
        2611,
        0
      ]
    ]
  ],
  [
    5848,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2613,
        0
      ],
      [
        5847,
        0
      ]
    ]
  ],
  [
    5851,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5848,
        0
      ]
    ]
  ],
  [
    2658,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5851,
        0
      ]
    ]
  ],
  [
    2659,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2658,
        0
      ]
    ]
  ],
  [
    2653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5554,
        0
      ]
    ]
  ],
  [
    2650,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        188,
        0
      ]
    ]
  ],
  [
    2624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5551,
        0
      ]
    ]
  ],
  [
    5849,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5848,
        0
      ]
    ]
  ],
  [
    2615,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5849,
        0
      ]
    ]
  ],
  [
    2625,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2615,
        0
      ],
      [
        2624,
        0
      ]
    ]
  ],
  [
    2621,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5550,
        0
      ]
    ]
  ],
  [
    2618,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2615,
        0
      ]
    ]
  ],
  [
    2616,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2615,
        0
      ]
    ]
  ],
  [
    2617,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2616,
        0
      ]
    ]
  ],
  [
    2619,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2617,
        0
      ],
      [
        2618,
        0
      ]
    ]
  ],
  [
    2622,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2619,
        0
      ],
      [
        2621,
        0
      ]
    ]
  ],
  [
    2626,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2625,
        0
      ],
      [
        2622,
        0
      ]
    ]
  ],
  [
    2627,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2626,
        0
      ]
    ]
  ],
  [
    2632,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5552,
        0
      ]
    ]
  ],
  [
    5850,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5848,
        0
      ]
    ]
  ],
  [
    2630,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5850,
        0
      ]
    ]
  ],
  [
    2633,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2630,
        0
      ],
      [
        2632,
        0
      ]
    ]
  ],
  [
    2634,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2633,
        0
      ]
    ]
  ],
  [
    2641,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5553,
        0
      ]
    ]
  ],
  [
    2635,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2630,
        0
      ]
    ]
  ],
  [
    2638,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2635,
        0
      ]
    ]
  ],
  [
    2636,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2635,
        0
      ]
    ]
  ],
  [
    2637,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2636,
        0
      ]
    ]
  ],
  [
    2639,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2637,
        0
      ],
      [
        2638,
        0
      ]
    ]
  ],
  [
    2642,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2639,
        0
      ],
      [
        2641,
        0
      ]
    ]
  ],
  [
    2643,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2634,
        0
      ],
      [
        2642,
        0
      ]
    ]
  ],
  [
    2648,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2643,
        0
      ],
      [
        2627,
        0
      ]
    ]
  ],
  [
    2651,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2648,
        0
      ],
      [
        2650,
        0
      ]
    ]
  ],
  [
    2654,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2651,
        0
      ],
      [
        2653,
        0
      ]
    ]
  ],
  [
    6152,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2654,
        0
      ]
    ]
  ],
  [
    6153,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2654,
        0
      ],
      [
        6152,
        0
      ]
    ]
  ],
  [
    6154,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6153,
        0
      ]
    ]
  ],
  [
    6155,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6153,
        0
      ],
      [
        6154,
        0
      ]
    ]
  ],
  [
    2664,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6155,
        0
      ],
      [
        2659,
        0
      ]
    ]
  ],
  [
    2666,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2664,
        0
      ]
    ]
  ],
  [
    2667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2666,
        0
      ]
    ]
  ],
  [
    2668,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2667,
        0
      ],
      [
        1518,
        0
      ]
    ]
  ],
  [
    2669,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2598,
        0
      ],
      [
        2668,
        0
      ]
    ]
  ],
  [
    1516,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1150,
        0
      ]
    ]
  ],
  [
    1517,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1149,
        0
      ]
    ]
  ],
  [
    2686,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1148,
        0
      ]
    ]
  ],
  [
    5852,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2686,
        0
      ],
      [
        1517,
        0
      ]
    ]
  ],
  [
    2683,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1152,
        0
      ]
    ]
  ],
  [
    2677,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5555,
        0
      ]
    ]
  ],
  [
    2673,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2672,
        0
      ]
    ]
  ],
  [
    2670,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2669,
        0
      ],
      [
        2669,
        0
      ]
    ]
  ],
  [
    2671,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2670,
        0
      ]
    ]
  ],
  [
    2674,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2671,
        0
      ],
      [
        2673,
        0
      ]
    ]
  ],
  [
    2675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2674,
        0
      ]
    ]
  ],
  [
    2678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2675,
        0
      ],
      [
        2677,
        0
      ]
    ]
  ],
  [
    2679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2678,
        0
      ]
    ]
  ],
  [
    2680,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2679,
        0
      ]
    ]
  ],
  [
    2681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2680,
        0
      ]
    ]
  ],
  [
    2682,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2669,
        0
      ],
      [
        2681,
        0
      ]
    ]
  ],
  [
    2684,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2683,
        0
      ],
      [
        2682,
        0
      ]
    ]
  ],
  [
    5853,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2684,
        0
      ],
      [
        5852,
        0
      ]
    ]
  ],
  [
    5855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5853,
        0
      ]
    ]
  ],
  [
    5854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5853,
        0
      ]
    ]
  ],
  [
    2688,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5854,
        0
      ]
    ]
  ],
  [
    2689,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5854,
        0
      ],
      [
        2688,
        0
      ]
    ]
  ],
  [
    2690,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2689,
        0
      ],
      [
        5855,
        0
      ]
    ]
  ],
  [
    2691,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2690,
        0
      ],
      [
        1516,
        0
      ]
    ]
  ],
  [
    2692,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2669,
        0
      ],
      [
        2691,
        0
      ]
    ]
  ],
  [
    1514,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1156,
        0
      ]
    ]
  ],
  [
    2750,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1155,
        0
      ]
    ]
  ],
  [
    2722,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1153,
        0
      ]
    ]
  ],
  [
    1515,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1154,
        0
      ]
    ]
  ],
  [
    5856,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1515,
        0
      ],
      [
        2722,
        0
      ],
      [
        2750,
        0
      ]
    ]
  ],
  [
    2706,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1160,
        0
      ]
    ]
  ],
  [
    2700,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5556,
        0
      ]
    ]
  ],
  [
    2696,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2695,
        0
      ]
    ]
  ],
  [
    2693,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2692,
        0
      ],
      [
        2692,
        0
      ]
    ]
  ],
  [
    2694,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2693,
        0
      ]
    ]
  ],
  [
    2697,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2694,
        0
      ],
      [
        2696,
        0
      ]
    ]
  ],
  [
    2698,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2697,
        0
      ]
    ]
  ],
  [
    2701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2698,
        0
      ],
      [
        2700,
        0
      ]
    ]
  ],
  [
    2702,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2701,
        0
      ]
    ]
  ],
  [
    2703,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2702,
        0
      ]
    ]
  ],
  [
    2704,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2703,
        0
      ]
    ]
  ],
  [
    2705,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2692,
        0
      ],
      [
        2704,
        0
      ]
    ]
  ],
  [
    2707,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2706,
        0
      ],
      [
        2705,
        0
      ]
    ]
  ],
  [
    5857,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2707,
        0
      ],
      [
        5856,
        0
      ]
    ]
  ],
  [
    5860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5857,
        0
      ]
    ]
  ],
  [
    2752,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5860,
        0
      ]
    ]
  ],
  [
    2753,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2752,
        0
      ]
    ]
  ],
  [
    2747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5561,
        0
      ]
    ]
  ],
  [
    2744,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        202,
        0
      ]
    ]
  ],
  [
    2718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5558,
        0
      ]
    ]
  ],
  [
    5858,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5857,
        0
      ]
    ]
  ],
  [
    2709,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5858,
        0
      ]
    ]
  ],
  [
    2719,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2709,
        0
      ],
      [
        2718,
        0
      ]
    ]
  ],
  [
    2715,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5557,
        0
      ]
    ]
  ],
  [
    2712,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2709,
        0
      ]
    ]
  ],
  [
    2710,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2709,
        0
      ]
    ]
  ],
  [
    2711,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2710,
        0
      ]
    ]
  ],
  [
    2713,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2711,
        0
      ],
      [
        2712,
        0
      ]
    ]
  ],
  [
    2716,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2713,
        0
      ],
      [
        2715,
        0
      ]
    ]
  ],
  [
    2720,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2719,
        0
      ],
      [
        2716,
        0
      ]
    ]
  ],
  [
    2721,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2720,
        0
      ]
    ]
  ],
  [
    2726,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5559,
        0
      ]
    ]
  ],
  [
    5859,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5857,
        0
      ]
    ]
  ],
  [
    2724,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5859,
        0
      ]
    ]
  ],
  [
    2727,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2724,
        0
      ],
      [
        2726,
        0
      ]
    ]
  ],
  [
    2728,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2727,
        0
      ]
    ]
  ],
  [
    2735,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5560,
        0
      ]
    ]
  ],
  [
    2729,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2724,
        0
      ]
    ]
  ],
  [
    2732,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2729,
        0
      ]
    ]
  ],
  [
    2730,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2729,
        0
      ]
    ]
  ],
  [
    2731,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2730,
        0
      ]
    ]
  ],
  [
    2733,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2731,
        0
      ],
      [
        2732,
        0
      ]
    ]
  ],
  [
    2736,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2733,
        0
      ],
      [
        2735,
        0
      ]
    ]
  ],
  [
    2737,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2728,
        0
      ],
      [
        2736,
        0
      ]
    ]
  ],
  [
    2742,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2737,
        0
      ],
      [
        2721,
        0
      ]
    ]
  ],
  [
    2745,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2742,
        0
      ],
      [
        2744,
        0
      ]
    ]
  ],
  [
    2748,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2745,
        0
      ],
      [
        2747,
        0
      ]
    ]
  ],
  [
    6156,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2748,
        0
      ]
    ]
  ],
  [
    6157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2748,
        0
      ],
      [
        6156,
        0
      ]
    ]
  ],
  [
    6158,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6157,
        0
      ]
    ]
  ],
  [
    6159,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6157,
        0
      ],
      [
        6158,
        0
      ]
    ]
  ],
  [
    2758,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6159,
        0
      ],
      [
        2753,
        0
      ]
    ]
  ],
  [
    2760,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2758,
        0
      ]
    ]
  ],
  [
    2761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2760,
        0
      ]
    ]
  ],
  [
    2762,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2761,
        0
      ],
      [
        1514,
        0
      ]
    ]
  ],
  [
    2763,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2692,
        0
      ],
      [
        2762,
        0
      ]
    ]
  ],
  [
    1512,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1159,
        0
      ]
    ]
  ],
  [
    1513,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1158,
        0
      ]
    ]
  ],
  [
    2780,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1157,
        0
      ]
    ]
  ],
  [
    5861,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2780,
        0
      ],
      [
        1513,
        0
      ]
    ]
  ],
  [
    2777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1161,
        0
      ]
    ]
  ],
  [
    2771,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5562,
        0
      ]
    ]
  ],
  [
    2767,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2766,
        0
      ]
    ]
  ],
  [
    2764,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2763,
        0
      ],
      [
        2763,
        0
      ]
    ]
  ],
  [
    2765,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2764,
        0
      ]
    ]
  ],
  [
    2768,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2765,
        0
      ],
      [
        2767,
        0
      ]
    ]
  ],
  [
    2769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2768,
        0
      ]
    ]
  ],
  [
    2772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2769,
        0
      ],
      [
        2771,
        0
      ]
    ]
  ],
  [
    2773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2772,
        0
      ]
    ]
  ],
  [
    2774,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2773,
        0
      ]
    ]
  ],
  [
    2775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2774,
        0
      ]
    ]
  ],
  [
    2776,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2763,
        0
      ],
      [
        2775,
        0
      ]
    ]
  ],
  [
    2778,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2777,
        0
      ],
      [
        2776,
        0
      ]
    ]
  ],
  [
    5862,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2778,
        0
      ],
      [
        5861,
        0
      ]
    ]
  ],
  [
    5864,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5862,
        0
      ]
    ]
  ],
  [
    5863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5862,
        0
      ]
    ]
  ],
  [
    2782,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5863,
        0
      ]
    ]
  ],
  [
    2783,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5863,
        0
      ],
      [
        2782,
        0
      ]
    ]
  ],
  [
    2784,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2783,
        0
      ],
      [
        5864,
        0
      ]
    ]
  ],
  [
    2785,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2784,
        0
      ],
      [
        1512,
        0
      ]
    ]
  ],
  [
    2786,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2763,
        0
      ],
      [
        2785,
        0
      ]
    ]
  ],
  [
    1510,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1165,
        0
      ]
    ]
  ],
  [
    2844,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1164,
        0
      ]
    ]
  ],
  [
    2816,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1162,
        0
      ]
    ]
  ],
  [
    1511,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1163,
        0
      ]
    ]
  ],
  [
    5865,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1511,
        0
      ],
      [
        2816,
        0
      ],
      [
        2844,
        0
      ]
    ]
  ],
  [
    2800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1169,
        0
      ]
    ]
  ],
  [
    2794,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5563,
        0
      ]
    ]
  ],
  [
    2790,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2789,
        0
      ]
    ]
  ],
  [
    2787,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2786,
        0
      ],
      [
        2786,
        0
      ]
    ]
  ],
  [
    2788,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2787,
        0
      ]
    ]
  ],
  [
    2791,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2788,
        0
      ],
      [
        2790,
        0
      ]
    ]
  ],
  [
    2792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2791,
        0
      ]
    ]
  ],
  [
    2795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2792,
        0
      ],
      [
        2794,
        0
      ]
    ]
  ],
  [
    2796,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2795,
        0
      ]
    ]
  ],
  [
    2797,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2796,
        0
      ]
    ]
  ],
  [
    2798,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2797,
        0
      ]
    ]
  ],
  [
    2799,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2786,
        0
      ],
      [
        2798,
        0
      ]
    ]
  ],
  [
    2801,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2800,
        0
      ],
      [
        2799,
        0
      ]
    ]
  ],
  [
    5866,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2801,
        0
      ],
      [
        5865,
        0
      ]
    ]
  ],
  [
    5869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5866,
        0
      ]
    ]
  ],
  [
    2846,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5869,
        0
      ]
    ]
  ],
  [
    2847,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2846,
        0
      ]
    ]
  ],
  [
    2841,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5568,
        0
      ]
    ]
  ],
  [
    2838,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        216,
        0
      ]
    ]
  ],
  [
    2812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5565,
        0
      ]
    ]
  ],
  [
    5867,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5866,
        0
      ]
    ]
  ],
  [
    2803,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5867,
        0
      ]
    ]
  ],
  [
    2813,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2803,
        0
      ],
      [
        2812,
        0
      ]
    ]
  ],
  [
    2809,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5564,
        0
      ]
    ]
  ],
  [
    2806,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2803,
        0
      ]
    ]
  ],
  [
    2804,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2803,
        0
      ]
    ]
  ],
  [
    2805,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2804,
        0
      ]
    ]
  ],
  [
    2807,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2805,
        0
      ],
      [
        2806,
        0
      ]
    ]
  ],
  [
    2810,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2807,
        0
      ],
      [
        2809,
        0
      ]
    ]
  ],
  [
    2814,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2813,
        0
      ],
      [
        2810,
        0
      ]
    ]
  ],
  [
    2815,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2814,
        0
      ]
    ]
  ],
  [
    2820,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5566,
        0
      ]
    ]
  ],
  [
    5868,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5866,
        0
      ]
    ]
  ],
  [
    2818,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5868,
        0
      ]
    ]
  ],
  [
    2821,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2818,
        0
      ],
      [
        2820,
        0
      ]
    ]
  ],
  [
    2822,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2821,
        0
      ]
    ]
  ],
  [
    2829,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5567,
        0
      ]
    ]
  ],
  [
    2823,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2818,
        0
      ]
    ]
  ],
  [
    2826,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2823,
        0
      ]
    ]
  ],
  [
    2824,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2823,
        0
      ]
    ]
  ],
  [
    2825,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2824,
        0
      ]
    ]
  ],
  [
    2827,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2825,
        0
      ],
      [
        2826,
        0
      ]
    ]
  ],
  [
    2830,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2827,
        0
      ],
      [
        2829,
        0
      ]
    ]
  ],
  [
    2831,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2822,
        0
      ],
      [
        2830,
        0
      ]
    ]
  ],
  [
    2836,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2831,
        0
      ],
      [
        2815,
        0
      ]
    ]
  ],
  [
    2839,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2836,
        0
      ],
      [
        2838,
        0
      ]
    ]
  ],
  [
    2842,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2839,
        0
      ],
      [
        2841,
        0
      ]
    ]
  ],
  [
    6160,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2842,
        0
      ]
    ]
  ],
  [
    6161,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2842,
        0
      ],
      [
        6160,
        0
      ]
    ]
  ],
  [
    6162,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6161,
        0
      ]
    ]
  ],
  [
    6163,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6161,
        0
      ],
      [
        6162,
        0
      ]
    ]
  ],
  [
    2852,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6163,
        0
      ],
      [
        2847,
        0
      ]
    ]
  ],
  [
    2854,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2852,
        0
      ]
    ]
  ],
  [
    2855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2854,
        0
      ]
    ]
  ],
  [
    2856,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2855,
        0
      ],
      [
        1510,
        0
      ]
    ]
  ],
  [
    2857,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2786,
        0
      ],
      [
        2856,
        0
      ]
    ]
  ],
  [
    1508,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1168,
        0
      ]
    ]
  ],
  [
    1509,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1167,
        0
      ]
    ]
  ],
  [
    2874,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1166,
        0
      ]
    ]
  ],
  [
    5870,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2874,
        0
      ],
      [
        1509,
        0
      ]
    ]
  ],
  [
    2871,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1170,
        0
      ]
    ]
  ],
  [
    2865,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5569,
        0
      ]
    ]
  ],
  [
    2861,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2860,
        0
      ]
    ]
  ],
  [
    2858,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2857,
        0
      ],
      [
        2857,
        0
      ]
    ]
  ],
  [
    2859,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2858,
        0
      ]
    ]
  ],
  [
    2862,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2859,
        0
      ],
      [
        2861,
        0
      ]
    ]
  ],
  [
    2863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2862,
        0
      ]
    ]
  ],
  [
    2866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2863,
        0
      ],
      [
        2865,
        0
      ]
    ]
  ],
  [
    2867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2866,
        0
      ]
    ]
  ],
  [
    2868,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2867,
        0
      ]
    ]
  ],
  [
    2869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2868,
        0
      ]
    ]
  ],
  [
    2870,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2857,
        0
      ],
      [
        2869,
        0
      ]
    ]
  ],
  [
    2872,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2871,
        0
      ],
      [
        2870,
        0
      ]
    ]
  ],
  [
    5871,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2872,
        0
      ],
      [
        5870,
        0
      ]
    ]
  ],
  [
    5873,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5871,
        0
      ]
    ]
  ],
  [
    5872,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5871,
        0
      ]
    ]
  ],
  [
    2876,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5872,
        0
      ]
    ]
  ],
  [
    2877,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5872,
        0
      ],
      [
        2876,
        0
      ]
    ]
  ],
  [
    2878,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2877,
        0
      ],
      [
        5873,
        0
      ]
    ]
  ],
  [
    2879,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2878,
        0
      ],
      [
        1508,
        0
      ]
    ]
  ],
  [
    2880,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2857,
        0
      ],
      [
        2879,
        0
      ]
    ]
  ],
  [
    1506,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1174,
        0
      ]
    ]
  ],
  [
    2938,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1173,
        0
      ]
    ]
  ],
  [
    2910,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1171,
        0
      ]
    ]
  ],
  [
    1507,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1172,
        0
      ]
    ]
  ],
  [
    5874,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1507,
        0
      ],
      [
        2910,
        0
      ],
      [
        2938,
        0
      ]
    ]
  ],
  [
    2894,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1178,
        0
      ]
    ]
  ],
  [
    2888,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5570,
        0
      ]
    ]
  ],
  [
    2884,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2883,
        0
      ]
    ]
  ],
  [
    2881,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2880,
        0
      ],
      [
        2880,
        0
      ]
    ]
  ],
  [
    2882,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2881,
        0
      ]
    ]
  ],
  [
    2885,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2882,
        0
      ],
      [
        2884,
        0
      ]
    ]
  ],
  [
    2886,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2885,
        0
      ]
    ]
  ],
  [
    2889,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2886,
        0
      ],
      [
        2888,
        0
      ]
    ]
  ],
  [
    2890,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2889,
        0
      ]
    ]
  ],
  [
    2891,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2890,
        0
      ]
    ]
  ],
  [
    2892,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2891,
        0
      ]
    ]
  ],
  [
    2893,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2880,
        0
      ],
      [
        2892,
        0
      ]
    ]
  ],
  [
    2895,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2894,
        0
      ],
      [
        2893,
        0
      ]
    ]
  ],
  [
    5875,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2895,
        0
      ],
      [
        5874,
        0
      ]
    ]
  ],
  [
    5878,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5875,
        0
      ]
    ]
  ],
  [
    2940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5878,
        0
      ]
    ]
  ],
  [
    2941,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2940,
        0
      ]
    ]
  ],
  [
    2935,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5575,
        0
      ]
    ]
  ],
  [
    2932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        230,
        0
      ]
    ]
  ],
  [
    2906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5572,
        0
      ]
    ]
  ],
  [
    5876,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5875,
        0
      ]
    ]
  ],
  [
    2897,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5876,
        0
      ]
    ]
  ],
  [
    2907,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2897,
        0
      ],
      [
        2906,
        0
      ]
    ]
  ],
  [
    2903,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5571,
        0
      ]
    ]
  ],
  [
    2900,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2897,
        0
      ]
    ]
  ],
  [
    2898,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2897,
        0
      ]
    ]
  ],
  [
    2899,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2898,
        0
      ]
    ]
  ],
  [
    2901,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2899,
        0
      ],
      [
        2900,
        0
      ]
    ]
  ],
  [
    2904,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2901,
        0
      ],
      [
        2903,
        0
      ]
    ]
  ],
  [
    2908,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        2907,
        0
      ],
      [
        2904,
        0
      ]
    ]
  ],
  [
    2909,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2908,
        0
      ]
    ]
  ],
  [
    2914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5573,
        0
      ]
    ]
  ],
  [
    5877,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5875,
        0
      ]
    ]
  ],
  [
    2912,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5877,
        0
      ]
    ]
  ],
  [
    2915,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2912,
        0
      ],
      [
        2914,
        0
      ]
    ]
  ],
  [
    2916,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2915,
        0
      ]
    ]
  ],
  [
    2923,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5574,
        0
      ]
    ]
  ],
  [
    2917,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2912,
        0
      ]
    ]
  ],
  [
    2920,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2917,
        0
      ]
    ]
  ],
  [
    2918,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        2917,
        0
      ]
    ]
  ],
  [
    2919,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        2918,
        0
      ]
    ]
  ],
  [
    2921,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        2919,
        0
      ],
      [
        2920,
        0
      ]
    ]
  ],
  [
    2924,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        2921,
        0
      ],
      [
        2923,
        0
      ]
    ]
  ],
  [
    2925,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        2916,
        0
      ],
      [
        2924,
        0
      ]
    ]
  ],
  [
    2930,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2925,
        0
      ],
      [
        2909,
        0
      ]
    ]
  ],
  [
    2933,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        2930,
        0
      ],
      [
        2932,
        0
      ]
    ]
  ],
  [
    2936,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        2933,
        0
      ],
      [
        2935,
        0
      ]
    ]
  ],
  [
    6164,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2936,
        0
      ]
    ]
  ],
  [
    6165,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2936,
        0
      ],
      [
        6164,
        0
      ]
    ]
  ],
  [
    6166,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6165,
        0
      ]
    ]
  ],
  [
    6167,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6165,
        0
      ],
      [
        6166,
        0
      ]
    ]
  ],
  [
    2946,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6167,
        0
      ],
      [
        2941,
        0
      ]
    ]
  ],
  [
    2948,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        2946,
        0
      ]
    ]
  ],
  [
    2949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2948,
        0
      ]
    ]
  ],
  [
    2950,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        2949,
        0
      ],
      [
        1506,
        0
      ]
    ]
  ],
  [
    2951,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2880,
        0
      ],
      [
        2950,
        0
      ]
    ]
  ],
  [
    1504,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1177,
        0
      ]
    ]
  ],
  [
    1505,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1176,
        0
      ]
    ]
  ],
  [
    2968,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1175,
        0
      ]
    ]
  ],
  [
    5879,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        2968,
        0
      ],
      [
        1505,
        0
      ]
    ]
  ],
  [
    2965,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1179,
        0
      ]
    ]
  ],
  [
    2959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5576,
        0
      ]
    ]
  ],
  [
    2955,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2954,
        0
      ]
    ]
  ],
  [
    2952,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2951,
        0
      ],
      [
        2951,
        0
      ]
    ]
  ],
  [
    2953,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2952,
        0
      ]
    ]
  ],
  [
    2956,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2953,
        0
      ],
      [
        2955,
        0
      ]
    ]
  ],
  [
    2957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2956,
        0
      ]
    ]
  ],
  [
    2960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2957,
        0
      ],
      [
        2959,
        0
      ]
    ]
  ],
  [
    2961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2960,
        0
      ]
    ]
  ],
  [
    2962,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2961,
        0
      ]
    ]
  ],
  [
    2963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2962,
        0
      ]
    ]
  ],
  [
    2964,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2951,
        0
      ],
      [
        2963,
        0
      ]
    ]
  ],
  [
    2966,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2965,
        0
      ],
      [
        2964,
        0
      ]
    ]
  ],
  [
    5880,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        2966,
        0
      ],
      [
        5879,
        0
      ]
    ]
  ],
  [
    5882,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5880,
        0
      ]
    ]
  ],
  [
    5881,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5880,
        0
      ]
    ]
  ],
  [
    2970,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5881,
        0
      ]
    ]
  ],
  [
    2971,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5881,
        0
      ],
      [
        2970,
        0
      ]
    ]
  ],
  [
    2972,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        2971,
        0
      ],
      [
        5882,
        0
      ]
    ]
  ],
  [
    2973,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        2972,
        0
      ],
      [
        1504,
        0
      ]
    ]
  ],
  [
    2974,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2951,
        0
      ],
      [
        2973,
        0
      ]
    ]
  ],
  [
    1502,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1183,
        0
      ]
    ]
  ],
  [
    3032,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1182,
        0
      ]
    ]
  ],
  [
    3004,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1180,
        0
      ]
    ]
  ],
  [
    1503,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1181,
        0
      ]
    ]
  ],
  [
    5883,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1503,
        0
      ],
      [
        3004,
        0
      ],
      [
        3032,
        0
      ]
    ]
  ],
  [
    2988,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1187,
        0
      ]
    ]
  ],
  [
    2982,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5577,
        0
      ]
    ]
  ],
  [
    2978,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2977,
        0
      ]
    ]
  ],
  [
    2975,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2974,
        0
      ],
      [
        2974,
        0
      ]
    ]
  ],
  [
    2976,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        2975,
        0
      ]
    ]
  ],
  [
    2979,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2976,
        0
      ],
      [
        2978,
        0
      ]
    ]
  ],
  [
    2980,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2979,
        0
      ]
    ]
  ],
  [
    2983,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2980,
        0
      ],
      [
        2982,
        0
      ]
    ]
  ],
  [
    2984,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2983,
        0
      ]
    ]
  ],
  [
    2985,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2984,
        0
      ]
    ]
  ],
  [
    2986,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2985,
        0
      ]
    ]
  ],
  [
    2987,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        2974,
        0
      ],
      [
        2986,
        0
      ]
    ]
  ],
  [
    2989,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        2988,
        0
      ],
      [
        2987,
        0
      ]
    ]
  ],
  [
    5884,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        2989,
        0
      ],
      [
        5883,
        0
      ]
    ]
  ],
  [
    5887,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5884,
        0
      ]
    ]
  ],
  [
    3034,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5887,
        0
      ]
    ]
  ],
  [
    3035,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3034,
        0
      ]
    ]
  ],
  [
    3029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5582,
        0
      ]
    ]
  ],
  [
    3026,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        244,
        0
      ]
    ]
  ],
  [
    3000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5520,
        0
      ]
    ]
  ],
  [
    5885,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5884,
        0
      ]
    ]
  ],
  [
    2991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5885,
        0
      ]
    ]
  ],
  [
    3001,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2991,
        0
      ],
      [
        3000,
        0
      ]
    ]
  ],
  [
    2997,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5519,
        0
      ]
    ]
  ],
  [
    2994,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2991,
        0
      ]
    ]
  ],
  [
    2992,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        2991,
        0
      ]
    ]
  ],
  [
    2993,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        2992,
        0
      ]
    ]
  ],
  [
    2995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        2993,
        0
      ],
      [
        2994,
        0
      ]
    ]
  ],
  [
    2998,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        2995,
        0
      ],
      [
        2997,
        0
      ]
    ]
  ],
  [
    3002,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3001,
        0
      ],
      [
        2998,
        0
      ]
    ]
  ],
  [
    3003,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3002,
        0
      ]
    ]
  ],
  [
    3008,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5580,
        0
      ]
    ]
  ],
  [
    5886,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5884,
        0
      ]
    ]
  ],
  [
    3006,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5886,
        0
      ]
    ]
  ],
  [
    3009,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3006,
        0
      ],
      [
        3008,
        0
      ]
    ]
  ],
  [
    3010,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3009,
        0
      ]
    ]
  ],
  [
    3017,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5581,
        0
      ]
    ]
  ],
  [
    3011,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3006,
        0
      ]
    ]
  ],
  [
    3014,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3011,
        0
      ]
    ]
  ],
  [
    3012,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3011,
        0
      ]
    ]
  ],
  [
    3013,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3012,
        0
      ]
    ]
  ],
  [
    3015,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3013,
        0
      ],
      [
        3014,
        0
      ]
    ]
  ],
  [
    3018,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3015,
        0
      ],
      [
        3017,
        0
      ]
    ]
  ],
  [
    3019,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3010,
        0
      ],
      [
        3018,
        0
      ]
    ]
  ],
  [
    3024,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3019,
        0
      ],
      [
        3003,
        0
      ]
    ]
  ],
  [
    3027,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3024,
        0
      ],
      [
        3026,
        0
      ]
    ]
  ],
  [
    3030,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3027,
        0
      ],
      [
        3029,
        0
      ]
    ]
  ],
  [
    6168,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3030,
        0
      ]
    ]
  ],
  [
    6169,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3030,
        0
      ],
      [
        6168,
        0
      ]
    ]
  ],
  [
    6170,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6169,
        0
      ]
    ]
  ],
  [
    6171,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6169,
        0
      ],
      [
        6170,
        0
      ]
    ]
  ],
  [
    3040,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6171,
        0
      ],
      [
        3035,
        0
      ]
    ]
  ],
  [
    3042,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3040,
        0
      ]
    ]
  ],
  [
    3043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3042,
        0
      ]
    ]
  ],
  [
    3044,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3043,
        0
      ],
      [
        1502,
        0
      ]
    ]
  ],
  [
    3045,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        2974,
        0
      ],
      [
        3044,
        0
      ]
    ]
  ],
  [
    1500,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1186,
        0
      ]
    ]
  ],
  [
    1501,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1185,
        0
      ]
    ]
  ],
  [
    3062,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1184,
        0
      ]
    ]
  ],
  [
    5888,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3062,
        0
      ],
      [
        1501,
        0
      ]
    ]
  ],
  [
    3059,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1188,
        0
      ]
    ]
  ],
  [
    3053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5583,
        0
      ]
    ]
  ],
  [
    3049,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3048,
        0
      ]
    ]
  ],
  [
    3046,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3045,
        0
      ],
      [
        3045,
        0
      ]
    ]
  ],
  [
    3047,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3046,
        0
      ]
    ]
  ],
  [
    3050,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3047,
        0
      ],
      [
        3049,
        0
      ]
    ]
  ],
  [
    3051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3050,
        0
      ]
    ]
  ],
  [
    3054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3051,
        0
      ],
      [
        3053,
        0
      ]
    ]
  ],
  [
    3055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3054,
        0
      ]
    ]
  ],
  [
    3056,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3055,
        0
      ]
    ]
  ],
  [
    3057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3056,
        0
      ]
    ]
  ],
  [
    3058,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3045,
        0
      ],
      [
        3057,
        0
      ]
    ]
  ],
  [
    3060,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3059,
        0
      ],
      [
        3058,
        0
      ]
    ]
  ],
  [
    5889,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3060,
        0
      ],
      [
        5888,
        0
      ]
    ]
  ],
  [
    5891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5889,
        0
      ]
    ]
  ],
  [
    5890,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5889,
        0
      ]
    ]
  ],
  [
    3064,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5890,
        0
      ]
    ]
  ],
  [
    3065,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5890,
        0
      ],
      [
        3064,
        0
      ]
    ]
  ],
  [
    3066,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3065,
        0
      ],
      [
        5891,
        0
      ]
    ]
  ],
  [
    3067,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3066,
        0
      ],
      [
        1500,
        0
      ]
    ]
  ],
  [
    3068,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3045,
        0
      ],
      [
        3067,
        0
      ]
    ]
  ],
  [
    1498,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1192,
        0
      ]
    ]
  ],
  [
    3126,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1191,
        0
      ]
    ]
  ],
  [
    3098,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1189,
        0
      ]
    ]
  ],
  [
    1499,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1190,
        0
      ]
    ]
  ],
  [
    5892,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1499,
        0
      ],
      [
        3098,
        0
      ],
      [
        3126,
        0
      ]
    ]
  ],
  [
    3082,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1196,
        0
      ]
    ]
  ],
  [
    3076,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5584,
        0
      ]
    ]
  ],
  [
    3072,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3071,
        0
      ]
    ]
  ],
  [
    3069,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3068,
        0
      ],
      [
        3068,
        0
      ]
    ]
  ],
  [
    3070,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3069,
        0
      ]
    ]
  ],
  [
    3073,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3070,
        0
      ],
      [
        3072,
        0
      ]
    ]
  ],
  [
    3074,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3073,
        0
      ]
    ]
  ],
  [
    3077,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3074,
        0
      ],
      [
        3076,
        0
      ]
    ]
  ],
  [
    3078,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3077,
        0
      ]
    ]
  ],
  [
    3079,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3078,
        0
      ]
    ]
  ],
  [
    3080,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3079,
        0
      ]
    ]
  ],
  [
    3081,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3068,
        0
      ],
      [
        3080,
        0
      ]
    ]
  ],
  [
    3083,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3082,
        0
      ],
      [
        3081,
        0
      ]
    ]
  ],
  [
    5893,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3083,
        0
      ],
      [
        5892,
        0
      ]
    ]
  ],
  [
    5896,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5893,
        0
      ]
    ]
  ],
  [
    3128,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5896,
        0
      ]
    ]
  ],
  [
    3129,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3128,
        0
      ]
    ]
  ],
  [
    3123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5589,
        0
      ]
    ]
  ],
  [
    3120,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        258,
        0
      ]
    ]
  ],
  [
    3094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5586,
        0
      ]
    ]
  ],
  [
    5894,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5893,
        0
      ]
    ]
  ],
  [
    3085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5894,
        0
      ]
    ]
  ],
  [
    3095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3085,
        0
      ],
      [
        3094,
        0
      ]
    ]
  ],
  [
    3091,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5585,
        0
      ]
    ]
  ],
  [
    3088,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3085,
        0
      ]
    ]
  ],
  [
    3086,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3085,
        0
      ]
    ]
  ],
  [
    3087,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3086,
        0
      ]
    ]
  ],
  [
    3089,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3087,
        0
      ],
      [
        3088,
        0
      ]
    ]
  ],
  [
    3092,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3089,
        0
      ],
      [
        3091,
        0
      ]
    ]
  ],
  [
    3096,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3095,
        0
      ],
      [
        3092,
        0
      ]
    ]
  ],
  [
    3097,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3096,
        0
      ]
    ]
  ],
  [
    3102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5587,
        0
      ]
    ]
  ],
  [
    5895,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5893,
        0
      ]
    ]
  ],
  [
    3100,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5895,
        0
      ]
    ]
  ],
  [
    3103,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3100,
        0
      ],
      [
        3102,
        0
      ]
    ]
  ],
  [
    3104,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3103,
        0
      ]
    ]
  ],
  [
    3111,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5588,
        0
      ]
    ]
  ],
  [
    3105,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3100,
        0
      ]
    ]
  ],
  [
    3108,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3105,
        0
      ]
    ]
  ],
  [
    3106,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3105,
        0
      ]
    ]
  ],
  [
    3107,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3106,
        0
      ]
    ]
  ],
  [
    3109,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3107,
        0
      ],
      [
        3108,
        0
      ]
    ]
  ],
  [
    3112,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3109,
        0
      ],
      [
        3111,
        0
      ]
    ]
  ],
  [
    3113,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3104,
        0
      ],
      [
        3112,
        0
      ]
    ]
  ],
  [
    3118,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3113,
        0
      ],
      [
        3097,
        0
      ]
    ]
  ],
  [
    3121,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3118,
        0
      ],
      [
        3120,
        0
      ]
    ]
  ],
  [
    3124,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3121,
        0
      ],
      [
        3123,
        0
      ]
    ]
  ],
  [
    6172,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3124,
        0
      ]
    ]
  ],
  [
    6173,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3124,
        0
      ],
      [
        6172,
        0
      ]
    ]
  ],
  [
    6174,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6173,
        0
      ]
    ]
  ],
  [
    6175,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6173,
        0
      ],
      [
        6174,
        0
      ]
    ]
  ],
  [
    3134,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6175,
        0
      ],
      [
        3129,
        0
      ]
    ]
  ],
  [
    3136,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3134,
        0
      ]
    ]
  ],
  [
    3137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3136,
        0
      ]
    ]
  ],
  [
    3138,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3137,
        0
      ],
      [
        1498,
        0
      ]
    ]
  ],
  [
    3139,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3068,
        0
      ],
      [
        3138,
        0
      ]
    ]
  ],
  [
    1496,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1195,
        0
      ]
    ]
  ],
  [
    1497,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1194,
        0
      ]
    ]
  ],
  [
    3156,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1193,
        0
      ]
    ]
  ],
  [
    5897,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3156,
        0
      ],
      [
        1497,
        0
      ]
    ]
  ],
  [
    3153,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1197,
        0
      ]
    ]
  ],
  [
    3147,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5590,
        0
      ]
    ]
  ],
  [
    3143,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3142,
        0
      ]
    ]
  ],
  [
    3140,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3139,
        0
      ],
      [
        3139,
        0
      ]
    ]
  ],
  [
    3141,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3140,
        0
      ]
    ]
  ],
  [
    3144,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3141,
        0
      ],
      [
        3143,
        0
      ]
    ]
  ],
  [
    3145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3144,
        0
      ]
    ]
  ],
  [
    3148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3145,
        0
      ],
      [
        3147,
        0
      ]
    ]
  ],
  [
    3149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3148,
        0
      ]
    ]
  ],
  [
    3150,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3149,
        0
      ]
    ]
  ],
  [
    3151,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3150,
        0
      ]
    ]
  ],
  [
    3152,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3139,
        0
      ],
      [
        3151,
        0
      ]
    ]
  ],
  [
    3154,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3153,
        0
      ],
      [
        3152,
        0
      ]
    ]
  ],
  [
    5898,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3154,
        0
      ],
      [
        5897,
        0
      ]
    ]
  ],
  [
    5900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5898,
        0
      ]
    ]
  ],
  [
    5899,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5898,
        0
      ]
    ]
  ],
  [
    3158,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5899,
        0
      ]
    ]
  ],
  [
    3159,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5899,
        0
      ],
      [
        3158,
        0
      ]
    ]
  ],
  [
    3160,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3159,
        0
      ],
      [
        5900,
        0
      ]
    ]
  ],
  [
    3161,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3160,
        0
      ],
      [
        1496,
        0
      ]
    ]
  ],
  [
    3162,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3139,
        0
      ],
      [
        3161,
        0
      ]
    ]
  ],
  [
    1494,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1201,
        0
      ]
    ]
  ],
  [
    3220,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1200,
        0
      ]
    ]
  ],
  [
    3192,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1198,
        0
      ]
    ]
  ],
  [
    1495,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1199,
        0
      ]
    ]
  ],
  [
    5901,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1495,
        0
      ],
      [
        3192,
        0
      ],
      [
        3220,
        0
      ]
    ]
  ],
  [
    3176,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1205,
        0
      ]
    ]
  ],
  [
    3170,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5591,
        0
      ]
    ]
  ],
  [
    3166,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3165,
        0
      ]
    ]
  ],
  [
    3163,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3162,
        0
      ],
      [
        3162,
        0
      ]
    ]
  ],
  [
    3164,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3163,
        0
      ]
    ]
  ],
  [
    3167,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3164,
        0
      ],
      [
        3166,
        0
      ]
    ]
  ],
  [
    3168,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3167,
        0
      ]
    ]
  ],
  [
    3171,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3168,
        0
      ],
      [
        3170,
        0
      ]
    ]
  ],
  [
    3172,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3171,
        0
      ]
    ]
  ],
  [
    3173,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3172,
        0
      ]
    ]
  ],
  [
    3174,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3173,
        0
      ]
    ]
  ],
  [
    3175,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3162,
        0
      ],
      [
        3174,
        0
      ]
    ]
  ],
  [
    3177,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3176,
        0
      ],
      [
        3175,
        0
      ]
    ]
  ],
  [
    5902,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3177,
        0
      ],
      [
        5901,
        0
      ]
    ]
  ],
  [
    5905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5902,
        0
      ]
    ]
  ],
  [
    3222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5905,
        0
      ]
    ]
  ],
  [
    3223,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3222,
        0
      ]
    ]
  ],
  [
    3217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5596,
        0
      ]
    ]
  ],
  [
    3214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        272,
        0
      ]
    ]
  ],
  [
    3188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5593,
        0
      ]
    ]
  ],
  [
    5903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5902,
        0
      ]
    ]
  ],
  [
    3179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5903,
        0
      ]
    ]
  ],
  [
    3189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3179,
        0
      ],
      [
        3188,
        0
      ]
    ]
  ],
  [
    3185,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5592,
        0
      ]
    ]
  ],
  [
    3182,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3179,
        0
      ]
    ]
  ],
  [
    3180,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3179,
        0
      ]
    ]
  ],
  [
    3181,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3180,
        0
      ]
    ]
  ],
  [
    3183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3181,
        0
      ],
      [
        3182,
        0
      ]
    ]
  ],
  [
    3186,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3183,
        0
      ],
      [
        3185,
        0
      ]
    ]
  ],
  [
    3190,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3189,
        0
      ],
      [
        3186,
        0
      ]
    ]
  ],
  [
    3191,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3190,
        0
      ]
    ]
  ],
  [
    3196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5594,
        0
      ]
    ]
  ],
  [
    5904,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5902,
        0
      ]
    ]
  ],
  [
    3194,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5904,
        0
      ]
    ]
  ],
  [
    3197,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3194,
        0
      ],
      [
        3196,
        0
      ]
    ]
  ],
  [
    3198,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3197,
        0
      ]
    ]
  ],
  [
    3205,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5595,
        0
      ]
    ]
  ],
  [
    3199,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3194,
        0
      ]
    ]
  ],
  [
    3202,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3199,
        0
      ]
    ]
  ],
  [
    3200,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3199,
        0
      ]
    ]
  ],
  [
    3201,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3200,
        0
      ]
    ]
  ],
  [
    3203,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3201,
        0
      ],
      [
        3202,
        0
      ]
    ]
  ],
  [
    3206,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3203,
        0
      ],
      [
        3205,
        0
      ]
    ]
  ],
  [
    3207,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3198,
        0
      ],
      [
        3206,
        0
      ]
    ]
  ],
  [
    3212,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3207,
        0
      ],
      [
        3191,
        0
      ]
    ]
  ],
  [
    3215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3212,
        0
      ],
      [
        3214,
        0
      ]
    ]
  ],
  [
    3218,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3215,
        0
      ],
      [
        3217,
        0
      ]
    ]
  ],
  [
    6176,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3218,
        0
      ]
    ]
  ],
  [
    6177,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3218,
        0
      ],
      [
        6176,
        0
      ]
    ]
  ],
  [
    6178,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6177,
        0
      ]
    ]
  ],
  [
    6179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6177,
        0
      ],
      [
        6178,
        0
      ]
    ]
  ],
  [
    3228,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6179,
        0
      ],
      [
        3223,
        0
      ]
    ]
  ],
  [
    3230,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3228,
        0
      ]
    ]
  ],
  [
    3231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3230,
        0
      ]
    ]
  ],
  [
    3232,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3231,
        0
      ],
      [
        1494,
        0
      ]
    ]
  ],
  [
    3233,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3162,
        0
      ],
      [
        3232,
        0
      ]
    ]
  ],
  [
    1492,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1204,
        0
      ]
    ]
  ],
  [
    1493,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1203,
        0
      ]
    ]
  ],
  [
    3250,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1202,
        0
      ]
    ]
  ],
  [
    5906,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3250,
        0
      ],
      [
        1493,
        0
      ]
    ]
  ],
  [
    3247,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1206,
        0
      ]
    ]
  ],
  [
    3241,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5597,
        0
      ]
    ]
  ],
  [
    3237,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3236,
        0
      ]
    ]
  ],
  [
    3234,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3233,
        0
      ],
      [
        3233,
        0
      ]
    ]
  ],
  [
    3235,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3234,
        0
      ]
    ]
  ],
  [
    3238,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3235,
        0
      ],
      [
        3237,
        0
      ]
    ]
  ],
  [
    3239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3238,
        0
      ]
    ]
  ],
  [
    3242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3239,
        0
      ],
      [
        3241,
        0
      ]
    ]
  ],
  [
    3243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3242,
        0
      ]
    ]
  ],
  [
    3244,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3243,
        0
      ]
    ]
  ],
  [
    3245,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3244,
        0
      ]
    ]
  ],
  [
    3246,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3233,
        0
      ],
      [
        3245,
        0
      ]
    ]
  ],
  [
    3248,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3247,
        0
      ],
      [
        3246,
        0
      ]
    ]
  ],
  [
    5907,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3248,
        0
      ],
      [
        5906,
        0
      ]
    ]
  ],
  [
    5909,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5907,
        0
      ]
    ]
  ],
  [
    5908,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5907,
        0
      ]
    ]
  ],
  [
    3252,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5908,
        0
      ]
    ]
  ],
  [
    3253,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5908,
        0
      ],
      [
        3252,
        0
      ]
    ]
  ],
  [
    3254,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3253,
        0
      ],
      [
        5909,
        0
      ]
    ]
  ],
  [
    3255,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3254,
        0
      ],
      [
        1492,
        0
      ]
    ]
  ],
  [
    3256,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3233,
        0
      ],
      [
        3255,
        0
      ]
    ]
  ],
  [
    1490,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1210,
        0
      ]
    ]
  ],
  [
    3314,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1209,
        0
      ]
    ]
  ],
  [
    3286,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1207,
        0
      ]
    ]
  ],
  [
    1491,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1208,
        0
      ]
    ]
  ],
  [
    5910,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1491,
        0
      ],
      [
        3286,
        0
      ],
      [
        3314,
        0
      ]
    ]
  ],
  [
    3270,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1214,
        0
      ]
    ]
  ],
  [
    3264,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5598,
        0
      ]
    ]
  ],
  [
    3260,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3259,
        0
      ]
    ]
  ],
  [
    3257,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3256,
        0
      ],
      [
        3256,
        0
      ]
    ]
  ],
  [
    3258,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3257,
        0
      ]
    ]
  ],
  [
    3261,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3258,
        0
      ],
      [
        3260,
        0
      ]
    ]
  ],
  [
    3262,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3261,
        0
      ]
    ]
  ],
  [
    3265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3262,
        0
      ],
      [
        3264,
        0
      ]
    ]
  ],
  [
    3266,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3265,
        0
      ]
    ]
  ],
  [
    3267,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3266,
        0
      ]
    ]
  ],
  [
    3268,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3267,
        0
      ]
    ]
  ],
  [
    3269,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3256,
        0
      ],
      [
        3268,
        0
      ]
    ]
  ],
  [
    3271,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3270,
        0
      ],
      [
        3269,
        0
      ]
    ]
  ],
  [
    5911,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3271,
        0
      ],
      [
        5910,
        0
      ]
    ]
  ],
  [
    5914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5911,
        0
      ]
    ]
  ],
  [
    3316,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5914,
        0
      ]
    ]
  ],
  [
    3317,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3316,
        0
      ]
    ]
  ],
  [
    3311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5603,
        0
      ]
    ]
  ],
  [
    3308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        286,
        0
      ]
    ]
  ],
  [
    3282,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5600,
        0
      ]
    ]
  ],
  [
    5912,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5911,
        0
      ]
    ]
  ],
  [
    3273,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5912,
        0
      ]
    ]
  ],
  [
    3283,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3273,
        0
      ],
      [
        3282,
        0
      ]
    ]
  ],
  [
    3279,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5599,
        0
      ]
    ]
  ],
  [
    3276,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3273,
        0
      ]
    ]
  ],
  [
    3274,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3273,
        0
      ]
    ]
  ],
  [
    3275,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3274,
        0
      ]
    ]
  ],
  [
    3277,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3275,
        0
      ],
      [
        3276,
        0
      ]
    ]
  ],
  [
    3280,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3277,
        0
      ],
      [
        3279,
        0
      ]
    ]
  ],
  [
    3284,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3283,
        0
      ],
      [
        3280,
        0
      ]
    ]
  ],
  [
    3285,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3284,
        0
      ]
    ]
  ],
  [
    3290,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5601,
        0
      ]
    ]
  ],
  [
    5913,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5911,
        0
      ]
    ]
  ],
  [
    3288,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5913,
        0
      ]
    ]
  ],
  [
    3291,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3288,
        0
      ],
      [
        3290,
        0
      ]
    ]
  ],
  [
    3292,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3291,
        0
      ]
    ]
  ],
  [
    3299,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5602,
        0
      ]
    ]
  ],
  [
    3293,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3288,
        0
      ]
    ]
  ],
  [
    3296,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3293,
        0
      ]
    ]
  ],
  [
    3294,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3293,
        0
      ]
    ]
  ],
  [
    3295,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3294,
        0
      ]
    ]
  ],
  [
    3297,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3295,
        0
      ],
      [
        3296,
        0
      ]
    ]
  ],
  [
    3300,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3297,
        0
      ],
      [
        3299,
        0
      ]
    ]
  ],
  [
    3301,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3292,
        0
      ],
      [
        3300,
        0
      ]
    ]
  ],
  [
    3306,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3301,
        0
      ],
      [
        3285,
        0
      ]
    ]
  ],
  [
    3309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3306,
        0
      ],
      [
        3308,
        0
      ]
    ]
  ],
  [
    3312,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3309,
        0
      ],
      [
        3311,
        0
      ]
    ]
  ],
  [
    6180,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3312,
        0
      ]
    ]
  ],
  [
    6181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3312,
        0
      ],
      [
        6180,
        0
      ]
    ]
  ],
  [
    6182,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6181,
        0
      ]
    ]
  ],
  [
    6183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6181,
        0
      ],
      [
        6182,
        0
      ]
    ]
  ],
  [
    3322,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6183,
        0
      ],
      [
        3317,
        0
      ]
    ]
  ],
  [
    3324,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3322,
        0
      ]
    ]
  ],
  [
    3325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3324,
        0
      ]
    ]
  ],
  [
    3326,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3325,
        0
      ],
      [
        1490,
        0
      ]
    ]
  ],
  [
    3327,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3256,
        0
      ],
      [
        3326,
        0
      ]
    ]
  ],
  [
    1488,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1213,
        0
      ]
    ]
  ],
  [
    1489,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1212,
        0
      ]
    ]
  ],
  [
    3344,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1211,
        0
      ]
    ]
  ],
  [
    5915,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3344,
        0
      ],
      [
        1489,
        0
      ]
    ]
  ],
  [
    3341,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1215,
        0
      ]
    ]
  ],
  [
    3335,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5604,
        0
      ]
    ]
  ],
  [
    3331,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3330,
        0
      ]
    ]
  ],
  [
    3328,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3327,
        0
      ],
      [
        3327,
        0
      ]
    ]
  ],
  [
    3329,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3328,
        0
      ]
    ]
  ],
  [
    3332,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3329,
        0
      ],
      [
        3331,
        0
      ]
    ]
  ],
  [
    3333,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3332,
        0
      ]
    ]
  ],
  [
    3336,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3333,
        0
      ],
      [
        3335,
        0
      ]
    ]
  ],
  [
    3337,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3336,
        0
      ]
    ]
  ],
  [
    3338,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3337,
        0
      ]
    ]
  ],
  [
    3339,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3338,
        0
      ]
    ]
  ],
  [
    3340,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3327,
        0
      ],
      [
        3339,
        0
      ]
    ]
  ],
  [
    3342,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3341,
        0
      ],
      [
        3340,
        0
      ]
    ]
  ],
  [
    5916,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3342,
        0
      ],
      [
        5915,
        0
      ]
    ]
  ],
  [
    5918,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5916,
        0
      ]
    ]
  ],
  [
    5917,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5916,
        0
      ]
    ]
  ],
  [
    3346,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5917,
        0
      ]
    ]
  ],
  [
    3347,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5917,
        0
      ],
      [
        3346,
        0
      ]
    ]
  ],
  [
    3348,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3347,
        0
      ],
      [
        5918,
        0
      ]
    ]
  ],
  [
    3349,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3348,
        0
      ],
      [
        1488,
        0
      ]
    ]
  ],
  [
    3350,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3327,
        0
      ],
      [
        3349,
        0
      ]
    ]
  ],
  [
    1486,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1219,
        0
      ]
    ]
  ],
  [
    3408,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1218,
        0
      ]
    ]
  ],
  [
    3380,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1216,
        0
      ]
    ]
  ],
  [
    1487,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1217,
        0
      ]
    ]
  ],
  [
    5919,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1487,
        0
      ],
      [
        3380,
        0
      ],
      [
        3408,
        0
      ]
    ]
  ],
  [
    3364,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1223,
        0
      ]
    ]
  ],
  [
    3358,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5605,
        0
      ]
    ]
  ],
  [
    3354,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3353,
        0
      ]
    ]
  ],
  [
    3351,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3350,
        0
      ],
      [
        3350,
        0
      ]
    ]
  ],
  [
    3352,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3351,
        0
      ]
    ]
  ],
  [
    3355,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3352,
        0
      ],
      [
        3354,
        0
      ]
    ]
  ],
  [
    3356,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3355,
        0
      ]
    ]
  ],
  [
    3359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3356,
        0
      ],
      [
        3358,
        0
      ]
    ]
  ],
  [
    3360,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3359,
        0
      ]
    ]
  ],
  [
    3361,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3360,
        0
      ]
    ]
  ],
  [
    3362,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3361,
        0
      ]
    ]
  ],
  [
    3363,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3350,
        0
      ],
      [
        3362,
        0
      ]
    ]
  ],
  [
    3365,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3364,
        0
      ],
      [
        3363,
        0
      ]
    ]
  ],
  [
    5920,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3365,
        0
      ],
      [
        5919,
        0
      ]
    ]
  ],
  [
    5923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5920,
        0
      ]
    ]
  ],
  [
    3410,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5923,
        0
      ]
    ]
  ],
  [
    3411,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3410,
        0
      ]
    ]
  ],
  [
    3405,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5610,
        0
      ]
    ]
  ],
  [
    3402,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        300,
        0
      ]
    ]
  ],
  [
    3376,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5607,
        0
      ]
    ]
  ],
  [
    5921,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5920,
        0
      ]
    ]
  ],
  [
    3367,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5921,
        0
      ]
    ]
  ],
  [
    3377,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3367,
        0
      ],
      [
        3376,
        0
      ]
    ]
  ],
  [
    3373,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5606,
        0
      ]
    ]
  ],
  [
    3370,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3367,
        0
      ]
    ]
  ],
  [
    3368,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3367,
        0
      ]
    ]
  ],
  [
    3369,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3368,
        0
      ]
    ]
  ],
  [
    3371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3369,
        0
      ],
      [
        3370,
        0
      ]
    ]
  ],
  [
    3374,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3371,
        0
      ],
      [
        3373,
        0
      ]
    ]
  ],
  [
    3378,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3377,
        0
      ],
      [
        3374,
        0
      ]
    ]
  ],
  [
    3379,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3378,
        0
      ]
    ]
  ],
  [
    3384,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5608,
        0
      ]
    ]
  ],
  [
    5922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5920,
        0
      ]
    ]
  ],
  [
    3382,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5922,
        0
      ]
    ]
  ],
  [
    3385,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3382,
        0
      ],
      [
        3384,
        0
      ]
    ]
  ],
  [
    3386,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3385,
        0
      ]
    ]
  ],
  [
    3393,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5609,
        0
      ]
    ]
  ],
  [
    3387,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3382,
        0
      ]
    ]
  ],
  [
    3390,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3387,
        0
      ]
    ]
  ],
  [
    3388,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3387,
        0
      ]
    ]
  ],
  [
    3389,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3388,
        0
      ]
    ]
  ],
  [
    3391,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3389,
        0
      ],
      [
        3390,
        0
      ]
    ]
  ],
  [
    3394,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3391,
        0
      ],
      [
        3393,
        0
      ]
    ]
  ],
  [
    3395,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3386,
        0
      ],
      [
        3394,
        0
      ]
    ]
  ],
  [
    3400,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3395,
        0
      ],
      [
        3379,
        0
      ]
    ]
  ],
  [
    3403,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3400,
        0
      ],
      [
        3402,
        0
      ]
    ]
  ],
  [
    3406,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3403,
        0
      ],
      [
        3405,
        0
      ]
    ]
  ],
  [
    6184,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3406,
        0
      ]
    ]
  ],
  [
    6185,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3406,
        0
      ],
      [
        6184,
        0
      ]
    ]
  ],
  [
    6186,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6185,
        0
      ]
    ]
  ],
  [
    6187,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6185,
        0
      ],
      [
        6186,
        0
      ]
    ]
  ],
  [
    3416,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6187,
        0
      ],
      [
        3411,
        0
      ]
    ]
  ],
  [
    3418,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3416,
        0
      ]
    ]
  ],
  [
    3419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3418,
        0
      ]
    ]
  ],
  [
    3420,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3419,
        0
      ],
      [
        1486,
        0
      ]
    ]
  ],
  [
    3421,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3350,
        0
      ],
      [
        3420,
        0
      ]
    ]
  ],
  [
    1484,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1222,
        0
      ]
    ]
  ],
  [
    1485,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1221,
        0
      ]
    ]
  ],
  [
    3438,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1220,
        0
      ]
    ]
  ],
  [
    5924,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3438,
        0
      ],
      [
        1485,
        0
      ]
    ]
  ],
  [
    3435,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1224,
        0
      ]
    ]
  ],
  [
    3429,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5611,
        0
      ]
    ]
  ],
  [
    3425,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3424,
        0
      ]
    ]
  ],
  [
    3422,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3421,
        0
      ],
      [
        3421,
        0
      ]
    ]
  ],
  [
    3423,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3422,
        0
      ]
    ]
  ],
  [
    3426,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3423,
        0
      ],
      [
        3425,
        0
      ]
    ]
  ],
  [
    3427,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3426,
        0
      ]
    ]
  ],
  [
    3430,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3427,
        0
      ],
      [
        3429,
        0
      ]
    ]
  ],
  [
    3431,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3430,
        0
      ]
    ]
  ],
  [
    3432,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3431,
        0
      ]
    ]
  ],
  [
    3433,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3432,
        0
      ]
    ]
  ],
  [
    3434,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3421,
        0
      ],
      [
        3433,
        0
      ]
    ]
  ],
  [
    3436,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3435,
        0
      ],
      [
        3434,
        0
      ]
    ]
  ],
  [
    5925,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3436,
        0
      ],
      [
        5924,
        0
      ]
    ]
  ],
  [
    5927,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5925,
        0
      ]
    ]
  ],
  [
    5926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5925,
        0
      ]
    ]
  ],
  [
    3440,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5926,
        0
      ]
    ]
  ],
  [
    3441,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5926,
        0
      ],
      [
        3440,
        0
      ]
    ]
  ],
  [
    3442,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3441,
        0
      ],
      [
        5927,
        0
      ]
    ]
  ],
  [
    3443,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3442,
        0
      ],
      [
        1484,
        0
      ]
    ]
  ],
  [
    3444,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3421,
        0
      ],
      [
        3443,
        0
      ]
    ]
  ],
  [
    1482,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1228,
        0
      ]
    ]
  ],
  [
    3502,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1227,
        0
      ]
    ]
  ],
  [
    3474,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1225,
        0
      ]
    ]
  ],
  [
    1483,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1226,
        0
      ]
    ]
  ],
  [
    5928,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1483,
        0
      ],
      [
        3474,
        0
      ],
      [
        3502,
        0
      ]
    ]
  ],
  [
    3458,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1232,
        0
      ]
    ]
  ],
  [
    3452,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5612,
        0
      ]
    ]
  ],
  [
    3448,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3447,
        0
      ]
    ]
  ],
  [
    3445,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3444,
        0
      ],
      [
        3444,
        0
      ]
    ]
  ],
  [
    3446,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3445,
        0
      ]
    ]
  ],
  [
    3449,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3446,
        0
      ],
      [
        3448,
        0
      ]
    ]
  ],
  [
    3450,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3449,
        0
      ]
    ]
  ],
  [
    3453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3450,
        0
      ],
      [
        3452,
        0
      ]
    ]
  ],
  [
    3454,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3453,
        0
      ]
    ]
  ],
  [
    3455,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3454,
        0
      ]
    ]
  ],
  [
    3456,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3455,
        0
      ]
    ]
  ],
  [
    3457,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3444,
        0
      ],
      [
        3456,
        0
      ]
    ]
  ],
  [
    3459,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3458,
        0
      ],
      [
        3457,
        0
      ]
    ]
  ],
  [
    5929,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3459,
        0
      ],
      [
        5928,
        0
      ]
    ]
  ],
  [
    5932,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5929,
        0
      ]
    ]
  ],
  [
    3504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5932,
        0
      ]
    ]
  ],
  [
    3505,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3504,
        0
      ]
    ]
  ],
  [
    3499,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5617,
        0
      ]
    ]
  ],
  [
    3496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        314,
        0
      ]
    ]
  ],
  [
    3470,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5614,
        0
      ]
    ]
  ],
  [
    5930,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5929,
        0
      ]
    ]
  ],
  [
    3461,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5930,
        0
      ]
    ]
  ],
  [
    3471,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3461,
        0
      ],
      [
        3470,
        0
      ]
    ]
  ],
  [
    3467,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5613,
        0
      ]
    ]
  ],
  [
    3464,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3461,
        0
      ]
    ]
  ],
  [
    3462,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3461,
        0
      ]
    ]
  ],
  [
    3463,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3462,
        0
      ]
    ]
  ],
  [
    3465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3463,
        0
      ],
      [
        3464,
        0
      ]
    ]
  ],
  [
    3468,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3465,
        0
      ],
      [
        3467,
        0
      ]
    ]
  ],
  [
    3472,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3471,
        0
      ],
      [
        3468,
        0
      ]
    ]
  ],
  [
    3473,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3472,
        0
      ]
    ]
  ],
  [
    3478,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5615,
        0
      ]
    ]
  ],
  [
    5931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5929,
        0
      ]
    ]
  ],
  [
    3476,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5931,
        0
      ]
    ]
  ],
  [
    3479,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3476,
        0
      ],
      [
        3478,
        0
      ]
    ]
  ],
  [
    3480,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3479,
        0
      ]
    ]
  ],
  [
    3487,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5616,
        0
      ]
    ]
  ],
  [
    3481,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3476,
        0
      ]
    ]
  ],
  [
    3484,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3481,
        0
      ]
    ]
  ],
  [
    3482,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3481,
        0
      ]
    ]
  ],
  [
    3483,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3482,
        0
      ]
    ]
  ],
  [
    3485,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3483,
        0
      ],
      [
        3484,
        0
      ]
    ]
  ],
  [
    3488,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3485,
        0
      ],
      [
        3487,
        0
      ]
    ]
  ],
  [
    3489,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3480,
        0
      ],
      [
        3488,
        0
      ]
    ]
  ],
  [
    3494,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3489,
        0
      ],
      [
        3473,
        0
      ]
    ]
  ],
  [
    3497,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3494,
        0
      ],
      [
        3496,
        0
      ]
    ]
  ],
  [
    3500,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3497,
        0
      ],
      [
        3499,
        0
      ]
    ]
  ],
  [
    6188,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3500,
        0
      ]
    ]
  ],
  [
    6189,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3500,
        0
      ],
      [
        6188,
        0
      ]
    ]
  ],
  [
    6190,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6189,
        0
      ]
    ]
  ],
  [
    6191,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6189,
        0
      ],
      [
        6190,
        0
      ]
    ]
  ],
  [
    3510,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6191,
        0
      ],
      [
        3505,
        0
      ]
    ]
  ],
  [
    3512,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3510,
        0
      ]
    ]
  ],
  [
    3513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3512,
        0
      ]
    ]
  ],
  [
    3514,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3513,
        0
      ],
      [
        1482,
        0
      ]
    ]
  ],
  [
    3515,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3444,
        0
      ],
      [
        3514,
        0
      ]
    ]
  ],
  [
    1480,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1231,
        0
      ]
    ]
  ],
  [
    1481,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1230,
        0
      ]
    ]
  ],
  [
    3532,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1229,
        0
      ]
    ]
  ],
  [
    5933,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3532,
        0
      ],
      [
        1481,
        0
      ]
    ]
  ],
  [
    3529,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1233,
        0
      ]
    ]
  ],
  [
    3523,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5618,
        0
      ]
    ]
  ],
  [
    3519,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3518,
        0
      ]
    ]
  ],
  [
    3516,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3515,
        0
      ],
      [
        3515,
        0
      ]
    ]
  ],
  [
    3517,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3516,
        0
      ]
    ]
  ],
  [
    3520,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3517,
        0
      ],
      [
        3519,
        0
      ]
    ]
  ],
  [
    3521,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3520,
        0
      ]
    ]
  ],
  [
    3524,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3521,
        0
      ],
      [
        3523,
        0
      ]
    ]
  ],
  [
    3525,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3524,
        0
      ]
    ]
  ],
  [
    3526,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3525,
        0
      ]
    ]
  ],
  [
    3527,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3526,
        0
      ]
    ]
  ],
  [
    3528,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3515,
        0
      ],
      [
        3527,
        0
      ]
    ]
  ],
  [
    3530,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3529,
        0
      ],
      [
        3528,
        0
      ]
    ]
  ],
  [
    5934,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3530,
        0
      ],
      [
        5933,
        0
      ]
    ]
  ],
  [
    5936,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5934,
        0
      ]
    ]
  ],
  [
    5935,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5934,
        0
      ]
    ]
  ],
  [
    3534,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5935,
        0
      ]
    ]
  ],
  [
    3535,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5935,
        0
      ],
      [
        3534,
        0
      ]
    ]
  ],
  [
    3536,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3535,
        0
      ],
      [
        5936,
        0
      ]
    ]
  ],
  [
    3537,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3536,
        0
      ],
      [
        1480,
        0
      ]
    ]
  ],
  [
    3538,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3515,
        0
      ],
      [
        3537,
        0
      ]
    ]
  ],
  [
    1478,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1237,
        0
      ]
    ]
  ],
  [
    3596,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1236,
        0
      ]
    ]
  ],
  [
    3568,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1234,
        0
      ]
    ]
  ],
  [
    1479,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1235,
        0
      ]
    ]
  ],
  [
    5937,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1479,
        0
      ],
      [
        3568,
        0
      ],
      [
        3596,
        0
      ]
    ]
  ],
  [
    3552,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1241,
        0
      ]
    ]
  ],
  [
    3546,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5619,
        0
      ]
    ]
  ],
  [
    3542,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3541,
        0
      ]
    ]
  ],
  [
    3539,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3538,
        0
      ],
      [
        3538,
        0
      ]
    ]
  ],
  [
    3540,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3539,
        0
      ]
    ]
  ],
  [
    3543,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3540,
        0
      ],
      [
        3542,
        0
      ]
    ]
  ],
  [
    3544,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3543,
        0
      ]
    ]
  ],
  [
    3547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3544,
        0
      ],
      [
        3546,
        0
      ]
    ]
  ],
  [
    3548,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3547,
        0
      ]
    ]
  ],
  [
    3549,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3548,
        0
      ]
    ]
  ],
  [
    3550,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3549,
        0
      ]
    ]
  ],
  [
    3551,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3538,
        0
      ],
      [
        3550,
        0
      ]
    ]
  ],
  [
    3553,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3552,
        0
      ],
      [
        3551,
        0
      ]
    ]
  ],
  [
    5938,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3553,
        0
      ],
      [
        5937,
        0
      ]
    ]
  ],
  [
    5941,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5938,
        0
      ]
    ]
  ],
  [
    3598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5941,
        0
      ]
    ]
  ],
  [
    3599,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3598,
        0
      ]
    ]
  ],
  [
    3593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5624,
        0
      ]
    ]
  ],
  [
    3590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        328,
        0
      ]
    ]
  ],
  [
    3564,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5621,
        0
      ]
    ]
  ],
  [
    5939,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5938,
        0
      ]
    ]
  ],
  [
    3555,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5939,
        0
      ]
    ]
  ],
  [
    3565,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3555,
        0
      ],
      [
        3564,
        0
      ]
    ]
  ],
  [
    3561,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5620,
        0
      ]
    ]
  ],
  [
    3558,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3555,
        0
      ]
    ]
  ],
  [
    3556,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3555,
        0
      ]
    ]
  ],
  [
    3557,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3556,
        0
      ]
    ]
  ],
  [
    3559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3557,
        0
      ],
      [
        3558,
        0
      ]
    ]
  ],
  [
    3562,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3559,
        0
      ],
      [
        3561,
        0
      ]
    ]
  ],
  [
    3566,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3565,
        0
      ],
      [
        3562,
        0
      ]
    ]
  ],
  [
    3567,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3566,
        0
      ]
    ]
  ],
  [
    3572,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5622,
        0
      ]
    ]
  ],
  [
    5940,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5938,
        0
      ]
    ]
  ],
  [
    3570,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5940,
        0
      ]
    ]
  ],
  [
    3573,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3570,
        0
      ],
      [
        3572,
        0
      ]
    ]
  ],
  [
    3574,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3573,
        0
      ]
    ]
  ],
  [
    3581,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5623,
        0
      ]
    ]
  ],
  [
    3575,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3570,
        0
      ]
    ]
  ],
  [
    3578,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3575,
        0
      ]
    ]
  ],
  [
    3576,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3575,
        0
      ]
    ]
  ],
  [
    3577,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3576,
        0
      ]
    ]
  ],
  [
    3579,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3577,
        0
      ],
      [
        3578,
        0
      ]
    ]
  ],
  [
    3582,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3579,
        0
      ],
      [
        3581,
        0
      ]
    ]
  ],
  [
    3583,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3574,
        0
      ],
      [
        3582,
        0
      ]
    ]
  ],
  [
    3588,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3583,
        0
      ],
      [
        3567,
        0
      ]
    ]
  ],
  [
    3591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3588,
        0
      ],
      [
        3590,
        0
      ]
    ]
  ],
  [
    3594,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3591,
        0
      ],
      [
        3593,
        0
      ]
    ]
  ],
  [
    6192,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3594,
        0
      ]
    ]
  ],
  [
    6193,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3594,
        0
      ],
      [
        6192,
        0
      ]
    ]
  ],
  [
    6194,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6193,
        0
      ]
    ]
  ],
  [
    6195,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6193,
        0
      ],
      [
        6194,
        0
      ]
    ]
  ],
  [
    3604,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6195,
        0
      ],
      [
        3599,
        0
      ]
    ]
  ],
  [
    3606,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3604,
        0
      ]
    ]
  ],
  [
    3607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3606,
        0
      ]
    ]
  ],
  [
    3608,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3607,
        0
      ],
      [
        1478,
        0
      ]
    ]
  ],
  [
    3609,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3538,
        0
      ],
      [
        3608,
        0
      ]
    ]
  ],
  [
    1476,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1240,
        0
      ]
    ]
  ],
  [
    1477,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1239,
        0
      ]
    ]
  ],
  [
    3626,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1238,
        0
      ]
    ]
  ],
  [
    5942,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3626,
        0
      ],
      [
        1477,
        0
      ]
    ]
  ],
  [
    3623,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1242,
        0
      ]
    ]
  ],
  [
    3617,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5625,
        0
      ]
    ]
  ],
  [
    3613,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3612,
        0
      ]
    ]
  ],
  [
    3610,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3609,
        0
      ],
      [
        3609,
        0
      ]
    ]
  ],
  [
    3611,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3610,
        0
      ]
    ]
  ],
  [
    3614,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3611,
        0
      ],
      [
        3613,
        0
      ]
    ]
  ],
  [
    3615,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3614,
        0
      ]
    ]
  ],
  [
    3618,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3615,
        0
      ],
      [
        3617,
        0
      ]
    ]
  ],
  [
    3619,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3618,
        0
      ]
    ]
  ],
  [
    3620,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3619,
        0
      ]
    ]
  ],
  [
    3621,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3620,
        0
      ]
    ]
  ],
  [
    3622,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3609,
        0
      ],
      [
        3621,
        0
      ]
    ]
  ],
  [
    3624,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3623,
        0
      ],
      [
        3622,
        0
      ]
    ]
  ],
  [
    5943,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3624,
        0
      ],
      [
        5942,
        0
      ]
    ]
  ],
  [
    5945,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5943,
        0
      ]
    ]
  ],
  [
    5944,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5943,
        0
      ]
    ]
  ],
  [
    3628,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5944,
        0
      ]
    ]
  ],
  [
    3629,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5944,
        0
      ],
      [
        3628,
        0
      ]
    ]
  ],
  [
    3630,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3629,
        0
      ],
      [
        5945,
        0
      ]
    ]
  ],
  [
    3631,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3630,
        0
      ],
      [
        1476,
        0
      ]
    ]
  ],
  [
    3632,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3609,
        0
      ],
      [
        3631,
        0
      ]
    ]
  ],
  [
    1474,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1246,
        0
      ]
    ]
  ],
  [
    3690,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1245,
        0
      ]
    ]
  ],
  [
    3662,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1243,
        0
      ]
    ]
  ],
  [
    1475,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1244,
        0
      ]
    ]
  ],
  [
    5946,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1475,
        0
      ],
      [
        3662,
        0
      ],
      [
        3690,
        0
      ]
    ]
  ],
  [
    3646,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1250,
        0
      ]
    ]
  ],
  [
    3640,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5626,
        0
      ]
    ]
  ],
  [
    3636,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3635,
        0
      ]
    ]
  ],
  [
    3633,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3632,
        0
      ],
      [
        3632,
        0
      ]
    ]
  ],
  [
    3634,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3633,
        0
      ]
    ]
  ],
  [
    3637,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3634,
        0
      ],
      [
        3636,
        0
      ]
    ]
  ],
  [
    3638,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3637,
        0
      ]
    ]
  ],
  [
    3641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3638,
        0
      ],
      [
        3640,
        0
      ]
    ]
  ],
  [
    3642,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3641,
        0
      ]
    ]
  ],
  [
    3643,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3642,
        0
      ]
    ]
  ],
  [
    3644,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3643,
        0
      ]
    ]
  ],
  [
    3645,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3632,
        0
      ],
      [
        3644,
        0
      ]
    ]
  ],
  [
    3647,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3646,
        0
      ],
      [
        3645,
        0
      ]
    ]
  ],
  [
    5947,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3647,
        0
      ],
      [
        5946,
        0
      ]
    ]
  ],
  [
    5950,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5947,
        0
      ]
    ]
  ],
  [
    3692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5950,
        0
      ]
    ]
  ],
  [
    3693,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3692,
        0
      ]
    ]
  ],
  [
    3687,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5631,
        0
      ]
    ]
  ],
  [
    3684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        342,
        0
      ]
    ]
  ],
  [
    3658,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5628,
        0
      ]
    ]
  ],
  [
    5948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5947,
        0
      ]
    ]
  ],
  [
    3649,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5948,
        0
      ]
    ]
  ],
  [
    3659,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3649,
        0
      ],
      [
        3658,
        0
      ]
    ]
  ],
  [
    3655,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5627,
        0
      ]
    ]
  ],
  [
    3652,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3649,
        0
      ]
    ]
  ],
  [
    3650,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3649,
        0
      ]
    ]
  ],
  [
    3651,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3650,
        0
      ]
    ]
  ],
  [
    3653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3651,
        0
      ],
      [
        3652,
        0
      ]
    ]
  ],
  [
    3656,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3653,
        0
      ],
      [
        3655,
        0
      ]
    ]
  ],
  [
    3660,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3659,
        0
      ],
      [
        3656,
        0
      ]
    ]
  ],
  [
    3661,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3660,
        0
      ]
    ]
  ],
  [
    3666,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5629,
        0
      ]
    ]
  ],
  [
    5949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5947,
        0
      ]
    ]
  ],
  [
    3664,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5949,
        0
      ]
    ]
  ],
  [
    3667,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3664,
        0
      ],
      [
        3666,
        0
      ]
    ]
  ],
  [
    3668,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3667,
        0
      ]
    ]
  ],
  [
    3675,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5630,
        0
      ]
    ]
  ],
  [
    3669,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3664,
        0
      ]
    ]
  ],
  [
    3672,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3669,
        0
      ]
    ]
  ],
  [
    3670,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3669,
        0
      ]
    ]
  ],
  [
    3671,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3670,
        0
      ]
    ]
  ],
  [
    3673,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3671,
        0
      ],
      [
        3672,
        0
      ]
    ]
  ],
  [
    3676,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3673,
        0
      ],
      [
        3675,
        0
      ]
    ]
  ],
  [
    3677,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3668,
        0
      ],
      [
        3676,
        0
      ]
    ]
  ],
  [
    3682,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3677,
        0
      ],
      [
        3661,
        0
      ]
    ]
  ],
  [
    3685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3682,
        0
      ],
      [
        3684,
        0
      ]
    ]
  ],
  [
    3688,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3685,
        0
      ],
      [
        3687,
        0
      ]
    ]
  ],
  [
    6196,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3688,
        0
      ]
    ]
  ],
  [
    6197,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3688,
        0
      ],
      [
        6196,
        0
      ]
    ]
  ],
  [
    6198,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6197,
        0
      ]
    ]
  ],
  [
    6199,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6197,
        0
      ],
      [
        6198,
        0
      ]
    ]
  ],
  [
    3698,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6199,
        0
      ],
      [
        3693,
        0
      ]
    ]
  ],
  [
    3700,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3698,
        0
      ]
    ]
  ],
  [
    3701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3700,
        0
      ]
    ]
  ],
  [
    3702,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3701,
        0
      ],
      [
        1474,
        0
      ]
    ]
  ],
  [
    3703,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3632,
        0
      ],
      [
        3702,
        0
      ]
    ]
  ],
  [
    1472,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1249,
        0
      ]
    ]
  ],
  [
    1473,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1248,
        0
      ]
    ]
  ],
  [
    3720,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1247,
        0
      ]
    ]
  ],
  [
    5951,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3720,
        0
      ],
      [
        1473,
        0
      ]
    ]
  ],
  [
    3717,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1251,
        0
      ]
    ]
  ],
  [
    3711,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5632,
        0
      ]
    ]
  ],
  [
    3707,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3706,
        0
      ]
    ]
  ],
  [
    3704,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3703,
        0
      ],
      [
        3703,
        0
      ]
    ]
  ],
  [
    3705,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3704,
        0
      ]
    ]
  ],
  [
    3708,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3705,
        0
      ],
      [
        3707,
        0
      ]
    ]
  ],
  [
    3709,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3708,
        0
      ]
    ]
  ],
  [
    3712,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3709,
        0
      ],
      [
        3711,
        0
      ]
    ]
  ],
  [
    3713,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3712,
        0
      ]
    ]
  ],
  [
    3714,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3713,
        0
      ]
    ]
  ],
  [
    3715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3714,
        0
      ]
    ]
  ],
  [
    3716,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3703,
        0
      ],
      [
        3715,
        0
      ]
    ]
  ],
  [
    3718,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3717,
        0
      ],
      [
        3716,
        0
      ]
    ]
  ],
  [
    5952,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3718,
        0
      ],
      [
        5951,
        0
      ]
    ]
  ],
  [
    5954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5952,
        0
      ]
    ]
  ],
  [
    5953,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5952,
        0
      ]
    ]
  ],
  [
    3722,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5953,
        0
      ]
    ]
  ],
  [
    3723,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5953,
        0
      ],
      [
        3722,
        0
      ]
    ]
  ],
  [
    3724,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3723,
        0
      ],
      [
        5954,
        0
      ]
    ]
  ],
  [
    3725,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3724,
        0
      ],
      [
        1472,
        0
      ]
    ]
  ],
  [
    3726,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3703,
        0
      ],
      [
        3725,
        0
      ]
    ]
  ],
  [
    1470,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1255,
        0
      ]
    ]
  ],
  [
    3784,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1254,
        0
      ]
    ]
  ],
  [
    3756,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1252,
        0
      ]
    ]
  ],
  [
    1471,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1253,
        0
      ]
    ]
  ],
  [
    5955,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1471,
        0
      ],
      [
        3756,
        0
      ],
      [
        3784,
        0
      ]
    ]
  ],
  [
    3740,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1259,
        0
      ]
    ]
  ],
  [
    3734,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5633,
        0
      ]
    ]
  ],
  [
    3730,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3729,
        0
      ]
    ]
  ],
  [
    3727,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3726,
        0
      ],
      [
        3726,
        0
      ]
    ]
  ],
  [
    3728,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3727,
        0
      ]
    ]
  ],
  [
    3731,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3728,
        0
      ],
      [
        3730,
        0
      ]
    ]
  ],
  [
    3732,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3731,
        0
      ]
    ]
  ],
  [
    3735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3732,
        0
      ],
      [
        3734,
        0
      ]
    ]
  ],
  [
    3736,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3735,
        0
      ]
    ]
  ],
  [
    3737,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3736,
        0
      ]
    ]
  ],
  [
    3738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3737,
        0
      ]
    ]
  ],
  [
    3739,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3726,
        0
      ],
      [
        3738,
        0
      ]
    ]
  ],
  [
    3741,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3740,
        0
      ],
      [
        3739,
        0
      ]
    ]
  ],
  [
    5956,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3741,
        0
      ],
      [
        5955,
        0
      ]
    ]
  ],
  [
    5959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5956,
        0
      ]
    ]
  ],
  [
    3786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5959,
        0
      ]
    ]
  ],
  [
    3787,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3786,
        0
      ]
    ]
  ],
  [
    3781,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5638,
        0
      ]
    ]
  ],
  [
    3778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        356,
        0
      ]
    ]
  ],
  [
    3752,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5635,
        0
      ]
    ]
  ],
  [
    5957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5956,
        0
      ]
    ]
  ],
  [
    3743,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5957,
        0
      ]
    ]
  ],
  [
    3753,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3743,
        0
      ],
      [
        3752,
        0
      ]
    ]
  ],
  [
    3749,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5634,
        0
      ]
    ]
  ],
  [
    3746,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3743,
        0
      ]
    ]
  ],
  [
    3744,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3743,
        0
      ]
    ]
  ],
  [
    3745,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3744,
        0
      ]
    ]
  ],
  [
    3747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3745,
        0
      ],
      [
        3746,
        0
      ]
    ]
  ],
  [
    3750,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3747,
        0
      ],
      [
        3749,
        0
      ]
    ]
  ],
  [
    3754,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3753,
        0
      ],
      [
        3750,
        0
      ]
    ]
  ],
  [
    3755,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3754,
        0
      ]
    ]
  ],
  [
    3760,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5636,
        0
      ]
    ]
  ],
  [
    5958,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5956,
        0
      ]
    ]
  ],
  [
    3758,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5958,
        0
      ]
    ]
  ],
  [
    3761,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3758,
        0
      ],
      [
        3760,
        0
      ]
    ]
  ],
  [
    3762,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3761,
        0
      ]
    ]
  ],
  [
    3769,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5637,
        0
      ]
    ]
  ],
  [
    3763,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3758,
        0
      ]
    ]
  ],
  [
    3766,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3763,
        0
      ]
    ]
  ],
  [
    3764,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3763,
        0
      ]
    ]
  ],
  [
    3765,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3764,
        0
      ]
    ]
  ],
  [
    3767,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3765,
        0
      ],
      [
        3766,
        0
      ]
    ]
  ],
  [
    3770,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3767,
        0
      ],
      [
        3769,
        0
      ]
    ]
  ],
  [
    3771,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3762,
        0
      ],
      [
        3770,
        0
      ]
    ]
  ],
  [
    3776,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3771,
        0
      ],
      [
        3755,
        0
      ]
    ]
  ],
  [
    3779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3776,
        0
      ],
      [
        3778,
        0
      ]
    ]
  ],
  [
    3782,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3779,
        0
      ],
      [
        3781,
        0
      ]
    ]
  ],
  [
    6200,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3782,
        0
      ]
    ]
  ],
  [
    6201,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3782,
        0
      ],
      [
        6200,
        0
      ]
    ]
  ],
  [
    6202,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6201,
        0
      ]
    ]
  ],
  [
    6203,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6201,
        0
      ],
      [
        6202,
        0
      ]
    ]
  ],
  [
    3792,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6203,
        0
      ],
      [
        3787,
        0
      ]
    ]
  ],
  [
    3794,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3792,
        0
      ]
    ]
  ],
  [
    3795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3794,
        0
      ]
    ]
  ],
  [
    3796,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3795,
        0
      ],
      [
        1470,
        0
      ]
    ]
  ],
  [
    3797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3726,
        0
      ],
      [
        3796,
        0
      ]
    ]
  ],
  [
    1468,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1258,
        0
      ]
    ]
  ],
  [
    1469,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1257,
        0
      ]
    ]
  ],
  [
    3814,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1256,
        0
      ]
    ]
  ],
  [
    5960,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3814,
        0
      ],
      [
        1469,
        0
      ]
    ]
  ],
  [
    3811,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1260,
        0
      ]
    ]
  ],
  [
    3805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5639,
        0
      ]
    ]
  ],
  [
    3801,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3800,
        0
      ]
    ]
  ],
  [
    3798,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3797,
        0
      ],
      [
        3797,
        0
      ]
    ]
  ],
  [
    3799,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3798,
        0
      ]
    ]
  ],
  [
    3802,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3799,
        0
      ],
      [
        3801,
        0
      ]
    ]
  ],
  [
    3803,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3802,
        0
      ]
    ]
  ],
  [
    3806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3803,
        0
      ],
      [
        3805,
        0
      ]
    ]
  ],
  [
    3807,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3806,
        0
      ]
    ]
  ],
  [
    3808,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3807,
        0
      ]
    ]
  ],
  [
    3809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3808,
        0
      ]
    ]
  ],
  [
    3810,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3797,
        0
      ],
      [
        3809,
        0
      ]
    ]
  ],
  [
    3812,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3811,
        0
      ],
      [
        3810,
        0
      ]
    ]
  ],
  [
    5961,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3812,
        0
      ],
      [
        5960,
        0
      ]
    ]
  ],
  [
    5963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5961,
        0
      ]
    ]
  ],
  [
    5962,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5961,
        0
      ]
    ]
  ],
  [
    3816,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5962,
        0
      ]
    ]
  ],
  [
    3817,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5962,
        0
      ],
      [
        3816,
        0
      ]
    ]
  ],
  [
    3818,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3817,
        0
      ],
      [
        5963,
        0
      ]
    ]
  ],
  [
    3819,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3818,
        0
      ],
      [
        1468,
        0
      ]
    ]
  ],
  [
    3820,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3797,
        0
      ],
      [
        3819,
        0
      ]
    ]
  ],
  [
    1466,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1264,
        0
      ]
    ]
  ],
  [
    3878,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1263,
        0
      ]
    ]
  ],
  [
    3850,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1261,
        0
      ]
    ]
  ],
  [
    1467,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1262,
        0
      ]
    ]
  ],
  [
    5964,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1467,
        0
      ],
      [
        3850,
        0
      ],
      [
        3878,
        0
      ]
    ]
  ],
  [
    3834,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1268,
        0
      ]
    ]
  ],
  [
    3828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5640,
        0
      ]
    ]
  ],
  [
    3824,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3823,
        0
      ]
    ]
  ],
  [
    3821,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3820,
        0
      ],
      [
        3820,
        0
      ]
    ]
  ],
  [
    3822,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3821,
        0
      ]
    ]
  ],
  [
    3825,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3822,
        0
      ],
      [
        3824,
        0
      ]
    ]
  ],
  [
    3826,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3825,
        0
      ]
    ]
  ],
  [
    3829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3826,
        0
      ],
      [
        3828,
        0
      ]
    ]
  ],
  [
    3830,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3829,
        0
      ]
    ]
  ],
  [
    3831,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3830,
        0
      ]
    ]
  ],
  [
    3832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3831,
        0
      ]
    ]
  ],
  [
    3833,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3820,
        0
      ],
      [
        3832,
        0
      ]
    ]
  ],
  [
    3835,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3834,
        0
      ],
      [
        3833,
        0
      ]
    ]
  ],
  [
    5965,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3835,
        0
      ],
      [
        5964,
        0
      ]
    ]
  ],
  [
    5968,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5965,
        0
      ]
    ]
  ],
  [
    3880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5968,
        0
      ]
    ]
  ],
  [
    3881,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3880,
        0
      ]
    ]
  ],
  [
    3875,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5645,
        0
      ]
    ]
  ],
  [
    3872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        370,
        0
      ]
    ]
  ],
  [
    3846,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5642,
        0
      ]
    ]
  ],
  [
    5966,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5965,
        0
      ]
    ]
  ],
  [
    3837,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5966,
        0
      ]
    ]
  ],
  [
    3847,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3837,
        0
      ],
      [
        3846,
        0
      ]
    ]
  ],
  [
    3843,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5641,
        0
      ]
    ]
  ],
  [
    3840,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3837,
        0
      ]
    ]
  ],
  [
    3838,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3837,
        0
      ]
    ]
  ],
  [
    3839,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3838,
        0
      ]
    ]
  ],
  [
    3841,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3839,
        0
      ],
      [
        3840,
        0
      ]
    ]
  ],
  [
    3844,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3841,
        0
      ],
      [
        3843,
        0
      ]
    ]
  ],
  [
    3848,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3847,
        0
      ],
      [
        3844,
        0
      ]
    ]
  ],
  [
    3849,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3848,
        0
      ]
    ]
  ],
  [
    3854,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5643,
        0
      ]
    ]
  ],
  [
    5967,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5965,
        0
      ]
    ]
  ],
  [
    3852,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5967,
        0
      ]
    ]
  ],
  [
    3855,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3852,
        0
      ],
      [
        3854,
        0
      ]
    ]
  ],
  [
    3856,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3855,
        0
      ]
    ]
  ],
  [
    3863,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5644,
        0
      ]
    ]
  ],
  [
    3857,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3852,
        0
      ]
    ]
  ],
  [
    3860,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3857,
        0
      ]
    ]
  ],
  [
    3858,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3857,
        0
      ]
    ]
  ],
  [
    3859,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3858,
        0
      ]
    ]
  ],
  [
    3861,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3859,
        0
      ],
      [
        3860,
        0
      ]
    ]
  ],
  [
    3864,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3861,
        0
      ],
      [
        3863,
        0
      ]
    ]
  ],
  [
    3865,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3856,
        0
      ],
      [
        3864,
        0
      ]
    ]
  ],
  [
    3870,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3865,
        0
      ],
      [
        3849,
        0
      ]
    ]
  ],
  [
    3873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3870,
        0
      ],
      [
        3872,
        0
      ]
    ]
  ],
  [
    3876,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3873,
        0
      ],
      [
        3875,
        0
      ]
    ]
  ],
  [
    6204,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3876,
        0
      ]
    ]
  ],
  [
    6205,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3876,
        0
      ],
      [
        6204,
        0
      ]
    ]
  ],
  [
    6206,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6205,
        0
      ]
    ]
  ],
  [
    6207,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6205,
        0
      ],
      [
        6206,
        0
      ]
    ]
  ],
  [
    3886,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6207,
        0
      ],
      [
        3881,
        0
      ]
    ]
  ],
  [
    3888,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3886,
        0
      ]
    ]
  ],
  [
    3889,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3888,
        0
      ]
    ]
  ],
  [
    3890,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3889,
        0
      ],
      [
        1466,
        0
      ]
    ]
  ],
  [
    3891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3820,
        0
      ],
      [
        3890,
        0
      ]
    ]
  ],
  [
    1464,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1267,
        0
      ]
    ]
  ],
  [
    1465,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1266,
        0
      ]
    ]
  ],
  [
    3908,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1265,
        0
      ]
    ]
  ],
  [
    5969,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        3908,
        0
      ],
      [
        1465,
        0
      ]
    ]
  ],
  [
    3905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1269,
        0
      ]
    ]
  ],
  [
    3899,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5646,
        0
      ]
    ]
  ],
  [
    3895,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3894,
        0
      ]
    ]
  ],
  [
    3892,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3891,
        0
      ],
      [
        3891,
        0
      ]
    ]
  ],
  [
    3893,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3892,
        0
      ]
    ]
  ],
  [
    3896,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3893,
        0
      ],
      [
        3895,
        0
      ]
    ]
  ],
  [
    3897,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3896,
        0
      ]
    ]
  ],
  [
    3900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3897,
        0
      ],
      [
        3899,
        0
      ]
    ]
  ],
  [
    3901,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3900,
        0
      ]
    ]
  ],
  [
    3902,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3901,
        0
      ]
    ]
  ],
  [
    3903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3902,
        0
      ]
    ]
  ],
  [
    3904,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3891,
        0
      ],
      [
        3903,
        0
      ]
    ]
  ],
  [
    3906,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3905,
        0
      ],
      [
        3904,
        0
      ]
    ]
  ],
  [
    5970,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        3906,
        0
      ],
      [
        5969,
        0
      ]
    ]
  ],
  [
    5972,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5970,
        0
      ]
    ]
  ],
  [
    5971,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5970,
        0
      ]
    ]
  ],
  [
    3910,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5971,
        0
      ]
    ]
  ],
  [
    3911,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5971,
        0
      ],
      [
        3910,
        0
      ]
    ]
  ],
  [
    3912,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        3911,
        0
      ],
      [
        5972,
        0
      ]
    ]
  ],
  [
    3913,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        3912,
        0
      ],
      [
        1464,
        0
      ]
    ]
  ],
  [
    3914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3891,
        0
      ],
      [
        3913,
        0
      ]
    ]
  ],
  [
    1462,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1273,
        0
      ]
    ]
  ],
  [
    3972,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1272,
        0
      ]
    ]
  ],
  [
    3944,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1270,
        0
      ]
    ]
  ],
  [
    1463,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1271,
        0
      ]
    ]
  ],
  [
    5973,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1463,
        0
      ],
      [
        3944,
        0
      ],
      [
        3972,
        0
      ]
    ]
  ],
  [
    3928,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1277,
        0
      ]
    ]
  ],
  [
    3922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5647,
        0
      ]
    ]
  ],
  [
    3918,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3917,
        0
      ]
    ]
  ],
  [
    3915,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3914,
        0
      ],
      [
        3914,
        0
      ]
    ]
  ],
  [
    3916,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3915,
        0
      ]
    ]
  ],
  [
    3919,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3916,
        0
      ],
      [
        3918,
        0
      ]
    ]
  ],
  [
    3920,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3919,
        0
      ]
    ]
  ],
  [
    3923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3920,
        0
      ],
      [
        3922,
        0
      ]
    ]
  ],
  [
    3924,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3923,
        0
      ]
    ]
  ],
  [
    3925,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3924,
        0
      ]
    ]
  ],
  [
    3926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3925,
        0
      ]
    ]
  ],
  [
    3927,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3914,
        0
      ],
      [
        3926,
        0
      ]
    ]
  ],
  [
    3929,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3928,
        0
      ],
      [
        3927,
        0
      ]
    ]
  ],
  [
    5974,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        3929,
        0
      ],
      [
        5973,
        0
      ]
    ]
  ],
  [
    5977,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5974,
        0
      ]
    ]
  ],
  [
    3974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5977,
        0
      ]
    ]
  ],
  [
    3975,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3974,
        0
      ]
    ]
  ],
  [
    3969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5652,
        0
      ]
    ]
  ],
  [
    3966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        384,
        0
      ]
    ]
  ],
  [
    3940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5649,
        0
      ]
    ]
  ],
  [
    5975,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5974,
        0
      ]
    ]
  ],
  [
    3931,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5975,
        0
      ]
    ]
  ],
  [
    3941,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3931,
        0
      ],
      [
        3940,
        0
      ]
    ]
  ],
  [
    3937,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5648,
        0
      ]
    ]
  ],
  [
    3934,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3931,
        0
      ]
    ]
  ],
  [
    3932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        3931,
        0
      ]
    ]
  ],
  [
    3933,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        3932,
        0
      ]
    ]
  ],
  [
    3935,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        3933,
        0
      ],
      [
        3934,
        0
      ]
    ]
  ],
  [
    3938,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3935,
        0
      ],
      [
        3937,
        0
      ]
    ]
  ],
  [
    3942,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        3941,
        0
      ],
      [
        3938,
        0
      ]
    ]
  ],
  [
    3943,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3942,
        0
      ]
    ]
  ],
  [
    3948,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5650,
        0
      ]
    ]
  ],
  [
    5976,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5974,
        0
      ]
    ]
  ],
  [
    3946,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5976,
        0
      ]
    ]
  ],
  [
    3949,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        3946,
        0
      ],
      [
        3948,
        0
      ]
    ]
  ],
  [
    3950,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3949,
        0
      ]
    ]
  ],
  [
    3957,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5651,
        0
      ]
    ]
  ],
  [
    3951,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3946,
        0
      ]
    ]
  ],
  [
    3954,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3951,
        0
      ]
    ]
  ],
  [
    3952,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        3951,
        0
      ]
    ]
  ],
  [
    3953,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        3952,
        0
      ]
    ]
  ],
  [
    3955,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        3953,
        0
      ],
      [
        3954,
        0
      ]
    ]
  ],
  [
    3958,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        3955,
        0
      ],
      [
        3957,
        0
      ]
    ]
  ],
  [
    3959,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        3950,
        0
      ],
      [
        3958,
        0
      ]
    ]
  ],
  [
    3964,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3959,
        0
      ],
      [
        3943,
        0
      ]
    ]
  ],
  [
    3967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        3964,
        0
      ],
      [
        3966,
        0
      ]
    ]
  ],
  [
    3970,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        3967,
        0
      ],
      [
        3969,
        0
      ]
    ]
  ],
  [
    6208,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3970,
        0
      ]
    ]
  ],
  [
    6209,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3970,
        0
      ],
      [
        6208,
        0
      ]
    ]
  ],
  [
    6210,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6209,
        0
      ]
    ]
  ],
  [
    6211,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6209,
        0
      ],
      [
        6210,
        0
      ]
    ]
  ],
  [
    3980,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6211,
        0
      ],
      [
        3975,
        0
      ]
    ]
  ],
  [
    3982,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        3980,
        0
      ]
    ]
  ],
  [
    3983,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3982,
        0
      ]
    ]
  ],
  [
    3984,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        3983,
        0
      ],
      [
        1462,
        0
      ]
    ]
  ],
  [
    3985,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3914,
        0
      ],
      [
        3984,
        0
      ]
    ]
  ],
  [
    1460,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1276,
        0
      ]
    ]
  ],
  [
    1461,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1275,
        0
      ]
    ]
  ],
  [
    4002,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1274,
        0
      ]
    ]
  ],
  [
    5978,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4002,
        0
      ],
      [
        1461,
        0
      ]
    ]
  ],
  [
    3999,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1278,
        0
      ]
    ]
  ],
  [
    3993,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5653,
        0
      ]
    ]
  ],
  [
    3989,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3988,
        0
      ]
    ]
  ],
  [
    3986,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3985,
        0
      ],
      [
        3985,
        0
      ]
    ]
  ],
  [
    3987,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        3986,
        0
      ]
    ]
  ],
  [
    3990,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3987,
        0
      ],
      [
        3989,
        0
      ]
    ]
  ],
  [
    3991,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3990,
        0
      ]
    ]
  ],
  [
    3994,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3991,
        0
      ],
      [
        3993,
        0
      ]
    ]
  ],
  [
    3995,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3994,
        0
      ]
    ]
  ],
  [
    3996,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3995,
        0
      ]
    ]
  ],
  [
    3997,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3996,
        0
      ]
    ]
  ],
  [
    3998,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        3985,
        0
      ],
      [
        3997,
        0
      ]
    ]
  ],
  [
    4000,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        3999,
        0
      ],
      [
        3998,
        0
      ]
    ]
  ],
  [
    5979,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4000,
        0
      ],
      [
        5978,
        0
      ]
    ]
  ],
  [
    5981,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5979,
        0
      ]
    ]
  ],
  [
    5980,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5979,
        0
      ]
    ]
  ],
  [
    4004,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5980,
        0
      ]
    ]
  ],
  [
    4005,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5980,
        0
      ],
      [
        4004,
        0
      ]
    ]
  ],
  [
    4006,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4005,
        0
      ],
      [
        5981,
        0
      ]
    ]
  ],
  [
    4007,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4006,
        0
      ],
      [
        1460,
        0
      ]
    ]
  ],
  [
    4008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        3985,
        0
      ],
      [
        4007,
        0
      ]
    ]
  ],
  [
    1458,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1282,
        0
      ]
    ]
  ],
  [
    4066,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1281,
        0
      ]
    ]
  ],
  [
    4038,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1279,
        0
      ]
    ]
  ],
  [
    1459,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1280,
        0
      ]
    ]
  ],
  [
    5982,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1459,
        0
      ],
      [
        4038,
        0
      ],
      [
        4066,
        0
      ]
    ]
  ],
  [
    4022,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1286,
        0
      ]
    ]
  ],
  [
    4016,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5654,
        0
      ]
    ]
  ],
  [
    4012,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4011,
        0
      ]
    ]
  ],
  [
    4009,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4008,
        0
      ],
      [
        4008,
        0
      ]
    ]
  ],
  [
    4010,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4009,
        0
      ]
    ]
  ],
  [
    4013,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4010,
        0
      ],
      [
        4012,
        0
      ]
    ]
  ],
  [
    4014,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4013,
        0
      ]
    ]
  ],
  [
    4017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4014,
        0
      ],
      [
        4016,
        0
      ]
    ]
  ],
  [
    4018,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4017,
        0
      ]
    ]
  ],
  [
    4019,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4018,
        0
      ]
    ]
  ],
  [
    4020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4019,
        0
      ]
    ]
  ],
  [
    4021,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4008,
        0
      ],
      [
        4020,
        0
      ]
    ]
  ],
  [
    4023,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4022,
        0
      ],
      [
        4021,
        0
      ]
    ]
  ],
  [
    5983,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4023,
        0
      ],
      [
        5982,
        0
      ]
    ]
  ],
  [
    5986,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5983,
        0
      ]
    ]
  ],
  [
    4068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5986,
        0
      ]
    ]
  ],
  [
    4069,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4068,
        0
      ]
    ]
  ],
  [
    4063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5659,
        0
      ]
    ]
  ],
  [
    4060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        398,
        0
      ]
    ]
  ],
  [
    4034,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5656,
        0
      ]
    ]
  ],
  [
    5984,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5983,
        0
      ]
    ]
  ],
  [
    4025,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5984,
        0
      ]
    ]
  ],
  [
    4035,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4025,
        0
      ],
      [
        4034,
        0
      ]
    ]
  ],
  [
    4031,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5655,
        0
      ]
    ]
  ],
  [
    4028,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4025,
        0
      ]
    ]
  ],
  [
    4026,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4025,
        0
      ]
    ]
  ],
  [
    4027,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4026,
        0
      ]
    ]
  ],
  [
    4029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4027,
        0
      ],
      [
        4028,
        0
      ]
    ]
  ],
  [
    4032,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4029,
        0
      ],
      [
        4031,
        0
      ]
    ]
  ],
  [
    4036,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4035,
        0
      ],
      [
        4032,
        0
      ]
    ]
  ],
  [
    4037,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4036,
        0
      ]
    ]
  ],
  [
    4042,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5657,
        0
      ]
    ]
  ],
  [
    5985,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5983,
        0
      ]
    ]
  ],
  [
    4040,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5985,
        0
      ]
    ]
  ],
  [
    4043,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4040,
        0
      ],
      [
        4042,
        0
      ]
    ]
  ],
  [
    4044,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4043,
        0
      ]
    ]
  ],
  [
    4051,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5658,
        0
      ]
    ]
  ],
  [
    4045,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4040,
        0
      ]
    ]
  ],
  [
    4048,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4045,
        0
      ]
    ]
  ],
  [
    4046,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4045,
        0
      ]
    ]
  ],
  [
    4047,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4046,
        0
      ]
    ]
  ],
  [
    4049,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4047,
        0
      ],
      [
        4048,
        0
      ]
    ]
  ],
  [
    4052,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4049,
        0
      ],
      [
        4051,
        0
      ]
    ]
  ],
  [
    4053,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4044,
        0
      ],
      [
        4052,
        0
      ]
    ]
  ],
  [
    4058,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4053,
        0
      ],
      [
        4037,
        0
      ]
    ]
  ],
  [
    4061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4058,
        0
      ],
      [
        4060,
        0
      ]
    ]
  ],
  [
    4064,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4061,
        0
      ],
      [
        4063,
        0
      ]
    ]
  ],
  [
    6212,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4064,
        0
      ]
    ]
  ],
  [
    6213,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4064,
        0
      ],
      [
        6212,
        0
      ]
    ]
  ],
  [
    6214,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6213,
        0
      ]
    ]
  ],
  [
    6215,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6213,
        0
      ],
      [
        6214,
        0
      ]
    ]
  ],
  [
    4074,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6215,
        0
      ],
      [
        4069,
        0
      ]
    ]
  ],
  [
    4076,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4074,
        0
      ]
    ]
  ],
  [
    4077,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4076,
        0
      ]
    ]
  ],
  [
    4078,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4077,
        0
      ],
      [
        1458,
        0
      ]
    ]
  ],
  [
    4079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4008,
        0
      ],
      [
        4078,
        0
      ]
    ]
  ],
  [
    1456,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1285,
        0
      ]
    ]
  ],
  [
    1457,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1284,
        0
      ]
    ]
  ],
  [
    4096,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1283,
        0
      ]
    ]
  ],
  [
    5987,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4096,
        0
      ],
      [
        1457,
        0
      ]
    ]
  ],
  [
    4093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1287,
        0
      ]
    ]
  ],
  [
    4087,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5660,
        0
      ]
    ]
  ],
  [
    4083,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4082,
        0
      ]
    ]
  ],
  [
    4080,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4079,
        0
      ],
      [
        4079,
        0
      ]
    ]
  ],
  [
    4081,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4080,
        0
      ]
    ]
  ],
  [
    4084,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4081,
        0
      ],
      [
        4083,
        0
      ]
    ]
  ],
  [
    4085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4084,
        0
      ]
    ]
  ],
  [
    4088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4085,
        0
      ],
      [
        4087,
        0
      ]
    ]
  ],
  [
    4089,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4088,
        0
      ]
    ]
  ],
  [
    4090,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4089,
        0
      ]
    ]
  ],
  [
    4091,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4090,
        0
      ]
    ]
  ],
  [
    4092,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4079,
        0
      ],
      [
        4091,
        0
      ]
    ]
  ],
  [
    4094,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4093,
        0
      ],
      [
        4092,
        0
      ]
    ]
  ],
  [
    5988,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4094,
        0
      ],
      [
        5987,
        0
      ]
    ]
  ],
  [
    5990,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5988,
        0
      ]
    ]
  ],
  [
    5989,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5988,
        0
      ]
    ]
  ],
  [
    4098,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5989,
        0
      ]
    ]
  ],
  [
    4099,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5989,
        0
      ],
      [
        4098,
        0
      ]
    ]
  ],
  [
    4100,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4099,
        0
      ],
      [
        5990,
        0
      ]
    ]
  ],
  [
    4101,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4100,
        0
      ],
      [
        1456,
        0
      ]
    ]
  ],
  [
    4102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4079,
        0
      ],
      [
        4101,
        0
      ]
    ]
  ],
  [
    1454,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1291,
        0
      ]
    ]
  ],
  [
    4160,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1290,
        0
      ]
    ]
  ],
  [
    4132,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1288,
        0
      ]
    ]
  ],
  [
    1455,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1289,
        0
      ]
    ]
  ],
  [
    5991,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1455,
        0
      ],
      [
        4132,
        0
      ],
      [
        4160,
        0
      ]
    ]
  ],
  [
    4116,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1295,
        0
      ]
    ]
  ],
  [
    4110,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5505,
        0
      ]
    ]
  ],
  [
    4106,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4105,
        0
      ]
    ]
  ],
  [
    4103,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4102,
        0
      ],
      [
        4102,
        0
      ]
    ]
  ],
  [
    4104,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4103,
        0
      ]
    ]
  ],
  [
    4107,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4104,
        0
      ],
      [
        4106,
        0
      ]
    ]
  ],
  [
    4108,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4107,
        0
      ]
    ]
  ],
  [
    4111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4108,
        0
      ],
      [
        4110,
        0
      ]
    ]
  ],
  [
    4112,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4111,
        0
      ]
    ]
  ],
  [
    4113,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4112,
        0
      ]
    ]
  ],
  [
    4114,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4113,
        0
      ]
    ]
  ],
  [
    4115,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4102,
        0
      ],
      [
        4114,
        0
      ]
    ]
  ],
  [
    4117,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4116,
        0
      ],
      [
        4115,
        0
      ]
    ]
  ],
  [
    5992,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4117,
        0
      ],
      [
        5991,
        0
      ]
    ]
  ],
  [
    5995,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5992,
        0
      ]
    ]
  ],
  [
    4162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5995,
        0
      ]
    ]
  ],
  [
    4163,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4162,
        0
      ]
    ]
  ],
  [
    4157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5663,
        0
      ]
    ]
  ],
  [
    4154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        412,
        0
      ]
    ]
  ],
  [
    4128,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5507,
        0
      ]
    ]
  ],
  [
    5993,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5992,
        0
      ]
    ]
  ],
  [
    4119,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5993,
        0
      ]
    ]
  ],
  [
    4129,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4119,
        0
      ],
      [
        4128,
        0
      ]
    ]
  ],
  [
    4125,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5506,
        0
      ]
    ]
  ],
  [
    4122,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4119,
        0
      ]
    ]
  ],
  [
    4120,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4119,
        0
      ]
    ]
  ],
  [
    4121,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4120,
        0
      ]
    ]
  ],
  [
    4123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4121,
        0
      ],
      [
        4122,
        0
      ]
    ]
  ],
  [
    4126,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4123,
        0
      ],
      [
        4125,
        0
      ]
    ]
  ],
  [
    4130,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4129,
        0
      ],
      [
        4126,
        0
      ]
    ]
  ],
  [
    4131,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4130,
        0
      ]
    ]
  ],
  [
    4136,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5661,
        0
      ]
    ]
  ],
  [
    5994,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        5992,
        0
      ]
    ]
  ],
  [
    4134,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5994,
        0
      ]
    ]
  ],
  [
    4137,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4134,
        0
      ],
      [
        4136,
        0
      ]
    ]
  ],
  [
    4138,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4137,
        0
      ]
    ]
  ],
  [
    4145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5662,
        0
      ]
    ]
  ],
  [
    4139,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4134,
        0
      ]
    ]
  ],
  [
    4142,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4139,
        0
      ]
    ]
  ],
  [
    4140,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4139,
        0
      ]
    ]
  ],
  [
    4141,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4140,
        0
      ]
    ]
  ],
  [
    4143,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4141,
        0
      ],
      [
        4142,
        0
      ]
    ]
  ],
  [
    4146,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4143,
        0
      ],
      [
        4145,
        0
      ]
    ]
  ],
  [
    4147,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4138,
        0
      ],
      [
        4146,
        0
      ]
    ]
  ],
  [
    4152,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4147,
        0
      ],
      [
        4131,
        0
      ]
    ]
  ],
  [
    4155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4152,
        0
      ],
      [
        4154,
        0
      ]
    ]
  ],
  [
    4158,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4155,
        0
      ],
      [
        4157,
        0
      ]
    ]
  ],
  [
    6216,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4158,
        0
      ]
    ]
  ],
  [
    6217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4158,
        0
      ],
      [
        6216,
        0
      ]
    ]
  ],
  [
    6218,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6217,
        0
      ]
    ]
  ],
  [
    6219,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6217,
        0
      ],
      [
        6218,
        0
      ]
    ]
  ],
  [
    4168,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6219,
        0
      ],
      [
        4163,
        0
      ]
    ]
  ],
  [
    4170,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4168,
        0
      ]
    ]
  ],
  [
    4171,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4170,
        0
      ]
    ]
  ],
  [
    4172,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4171,
        0
      ],
      [
        1454,
        0
      ]
    ]
  ],
  [
    4173,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4102,
        0
      ],
      [
        4172,
        0
      ]
    ]
  ],
  [
    1452,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1294,
        0
      ]
    ]
  ],
  [
    1453,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1293,
        0
      ]
    ]
  ],
  [
    4190,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1292,
        0
      ]
    ]
  ],
  [
    5996,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4190,
        0
      ],
      [
        1453,
        0
      ]
    ]
  ],
  [
    4187,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1296,
        0
      ]
    ]
  ],
  [
    4181,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5664,
        0
      ]
    ]
  ],
  [
    4177,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4176,
        0
      ]
    ]
  ],
  [
    4174,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4173,
        0
      ],
      [
        4173,
        0
      ]
    ]
  ],
  [
    4175,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4174,
        0
      ]
    ]
  ],
  [
    4178,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4175,
        0
      ],
      [
        4177,
        0
      ]
    ]
  ],
  [
    4179,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4178,
        0
      ]
    ]
  ],
  [
    4182,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4179,
        0
      ],
      [
        4181,
        0
      ]
    ]
  ],
  [
    4183,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4182,
        0
      ]
    ]
  ],
  [
    4184,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4183,
        0
      ]
    ]
  ],
  [
    4185,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4184,
        0
      ]
    ]
  ],
  [
    4186,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4173,
        0
      ],
      [
        4185,
        0
      ]
    ]
  ],
  [
    4188,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4187,
        0
      ],
      [
        4186,
        0
      ]
    ]
  ],
  [
    5997,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4188,
        0
      ],
      [
        5996,
        0
      ]
    ]
  ],
  [
    5999,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5997,
        0
      ]
    ]
  ],
  [
    5998,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        5997,
        0
      ]
    ]
  ],
  [
    4192,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        5998,
        0
      ]
    ]
  ],
  [
    4193,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5998,
        0
      ],
      [
        4192,
        0
      ]
    ]
  ],
  [
    4194,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4193,
        0
      ],
      [
        5999,
        0
      ]
    ]
  ],
  [
    4195,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4194,
        0
      ],
      [
        1452,
        0
      ]
    ]
  ],
  [
    4196,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4173,
        0
      ],
      [
        4195,
        0
      ]
    ]
  ],
  [
    1450,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1300,
        0
      ]
    ]
  ],
  [
    4254,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1299,
        0
      ]
    ]
  ],
  [
    4226,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1297,
        0
      ]
    ]
  ],
  [
    1451,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1298,
        0
      ]
    ]
  ],
  [
    6000,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1451,
        0
      ],
      [
        4226,
        0
      ],
      [
        4254,
        0
      ]
    ]
  ],
  [
    4210,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1304,
        0
      ]
    ]
  ],
  [
    4204,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5665,
        0
      ]
    ]
  ],
  [
    4200,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4199,
        0
      ]
    ]
  ],
  [
    4197,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4196,
        0
      ],
      [
        4196,
        0
      ]
    ]
  ],
  [
    4198,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4197,
        0
      ]
    ]
  ],
  [
    4201,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4198,
        0
      ],
      [
        4200,
        0
      ]
    ]
  ],
  [
    4202,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4201,
        0
      ]
    ]
  ],
  [
    4205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4202,
        0
      ],
      [
        4204,
        0
      ]
    ]
  ],
  [
    4206,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4205,
        0
      ]
    ]
  ],
  [
    4207,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4206,
        0
      ]
    ]
  ],
  [
    4208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4207,
        0
      ]
    ]
  ],
  [
    4209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4196,
        0
      ],
      [
        4208,
        0
      ]
    ]
  ],
  [
    4211,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4210,
        0
      ],
      [
        4209,
        0
      ]
    ]
  ],
  [
    6001,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4211,
        0
      ],
      [
        6000,
        0
      ]
    ]
  ],
  [
    6004,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6004,
        0
      ]
    ]
  ],
  [
    4257,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4256,
        0
      ]
    ]
  ],
  [
    4251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5670,
        0
      ]
    ]
  ],
  [
    4248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        426,
        0
      ]
    ]
  ],
  [
    4222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5667,
        0
      ]
    ]
  ],
  [
    6002,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4213,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6002,
        0
      ]
    ]
  ],
  [
    4223,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4213,
        0
      ],
      [
        4222,
        0
      ]
    ]
  ],
  [
    4219,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5666,
        0
      ]
    ]
  ],
  [
    4216,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4213,
        0
      ]
    ]
  ],
  [
    4214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4213,
        0
      ]
    ]
  ],
  [
    4215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4214,
        0
      ]
    ]
  ],
  [
    4217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4215,
        0
      ],
      [
        4216,
        0
      ]
    ]
  ],
  [
    4220,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4217,
        0
      ],
      [
        4219,
        0
      ]
    ]
  ],
  [
    4224,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4223,
        0
      ],
      [
        4220,
        0
      ]
    ]
  ],
  [
    4225,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4224,
        0
      ]
    ]
  ],
  [
    4230,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5668,
        0
      ]
    ]
  ],
  [
    6003,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6001,
        0
      ]
    ]
  ],
  [
    4228,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6003,
        0
      ]
    ]
  ],
  [
    4231,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4228,
        0
      ],
      [
        4230,
        0
      ]
    ]
  ],
  [
    4232,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4231,
        0
      ]
    ]
  ],
  [
    4239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5669,
        0
      ]
    ]
  ],
  [
    4233,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4228,
        0
      ]
    ]
  ],
  [
    4236,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4234,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4235,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4234,
        0
      ]
    ]
  ],
  [
    4237,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4235,
        0
      ],
      [
        4236,
        0
      ]
    ]
  ],
  [
    4240,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4237,
        0
      ],
      [
        4239,
        0
      ]
    ]
  ],
  [
    4241,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4232,
        0
      ],
      [
        4240,
        0
      ]
    ]
  ],
  [
    4246,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4241,
        0
      ],
      [
        4225,
        0
      ]
    ]
  ],
  [
    4249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4246,
        0
      ],
      [
        4248,
        0
      ]
    ]
  ],
  [
    4252,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4249,
        0
      ],
      [
        4251,
        0
      ]
    ]
  ],
  [
    6220,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4252,
        0
      ]
    ]
  ],
  [
    6221,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4252,
        0
      ],
      [
        6220,
        0
      ]
    ]
  ],
  [
    6222,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6221,
        0
      ]
    ]
  ],
  [
    6223,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6221,
        0
      ],
      [
        6222,
        0
      ]
    ]
  ],
  [
    4262,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6223,
        0
      ],
      [
        4257,
        0
      ]
    ]
  ],
  [
    4264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4262,
        0
      ]
    ]
  ],
  [
    4265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4264,
        0
      ]
    ]
  ],
  [
    4266,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4265,
        0
      ],
      [
        1450,
        0
      ]
    ]
  ],
  [
    4267,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4196,
        0
      ],
      [
        4266,
        0
      ]
    ]
  ],
  [
    1448,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1303,
        0
      ]
    ]
  ],
  [
    1449,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1302,
        0
      ]
    ]
  ],
  [
    4284,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1301,
        0
      ]
    ]
  ],
  [
    6005,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4284,
        0
      ],
      [
        1449,
        0
      ]
    ]
  ],
  [
    4281,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1305,
        0
      ]
    ]
  ],
  [
    4275,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5671,
        0
      ]
    ]
  ],
  [
    4271,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4270,
        0
      ]
    ]
  ],
  [
    4268,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4267,
        0
      ],
      [
        4267,
        0
      ]
    ]
  ],
  [
    4269,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4268,
        0
      ]
    ]
  ],
  [
    4272,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4269,
        0
      ],
      [
        4271,
        0
      ]
    ]
  ],
  [
    4273,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4272,
        0
      ]
    ]
  ],
  [
    4276,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4273,
        0
      ],
      [
        4275,
        0
      ]
    ]
  ],
  [
    4277,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4276,
        0
      ]
    ]
  ],
  [
    4278,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4277,
        0
      ]
    ]
  ],
  [
    4279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4278,
        0
      ]
    ]
  ],
  [
    4280,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4267,
        0
      ],
      [
        4279,
        0
      ]
    ]
  ],
  [
    4282,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4281,
        0
      ],
      [
        4280,
        0
      ]
    ]
  ],
  [
    6006,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4282,
        0
      ],
      [
        6005,
        0
      ]
    ]
  ],
  [
    6008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6006,
        0
      ]
    ]
  ],
  [
    6007,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6006,
        0
      ]
    ]
  ],
  [
    4286,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6007,
        0
      ]
    ]
  ],
  [
    4287,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6007,
        0
      ],
      [
        4286,
        0
      ]
    ]
  ],
  [
    4288,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4287,
        0
      ],
      [
        6008,
        0
      ]
    ]
  ],
  [
    4289,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4288,
        0
      ],
      [
        1448,
        0
      ]
    ]
  ],
  [
    4290,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4267,
        0
      ],
      [
        4289,
        0
      ]
    ]
  ],
  [
    1446,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1309,
        0
      ]
    ]
  ],
  [
    4348,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1308,
        0
      ]
    ]
  ],
  [
    4320,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1306,
        0
      ]
    ]
  ],
  [
    1447,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1307,
        0
      ]
    ]
  ],
  [
    6009,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1447,
        0
      ],
      [
        4320,
        0
      ],
      [
        4348,
        0
      ]
    ]
  ],
  [
    4304,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1313,
        0
      ]
    ]
  ],
  [
    4298,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5672,
        0
      ]
    ]
  ],
  [
    4294,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4293,
        0
      ]
    ]
  ],
  [
    4291,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4290,
        0
      ],
      [
        4290,
        0
      ]
    ]
  ],
  [
    4292,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4291,
        0
      ]
    ]
  ],
  [
    4295,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4292,
        0
      ],
      [
        4294,
        0
      ]
    ]
  ],
  [
    4296,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4295,
        0
      ]
    ]
  ],
  [
    4299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4296,
        0
      ],
      [
        4298,
        0
      ]
    ]
  ],
  [
    4300,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4299,
        0
      ]
    ]
  ],
  [
    4301,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4300,
        0
      ]
    ]
  ],
  [
    4302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4301,
        0
      ]
    ]
  ],
  [
    4303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4290,
        0
      ],
      [
        4302,
        0
      ]
    ]
  ],
  [
    4305,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4304,
        0
      ],
      [
        4303,
        0
      ]
    ]
  ],
  [
    6010,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4305,
        0
      ],
      [
        6009,
        0
      ]
    ]
  ],
  [
    6013,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6010,
        0
      ]
    ]
  ],
  [
    4350,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6013,
        0
      ]
    ]
  ],
  [
    4351,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4350,
        0
      ]
    ]
  ],
  [
    4345,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5677,
        0
      ]
    ]
  ],
  [
    4342,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        440,
        0
      ]
    ]
  ],
  [
    4316,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5674,
        0
      ]
    ]
  ],
  [
    6011,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6010,
        0
      ]
    ]
  ],
  [
    4307,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6011,
        0
      ]
    ]
  ],
  [
    4317,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4307,
        0
      ],
      [
        4316,
        0
      ]
    ]
  ],
  [
    4313,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5673,
        0
      ]
    ]
  ],
  [
    4310,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4307,
        0
      ]
    ]
  ],
  [
    4308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4307,
        0
      ]
    ]
  ],
  [
    4309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4308,
        0
      ]
    ]
  ],
  [
    4311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4309,
        0
      ],
      [
        4310,
        0
      ]
    ]
  ],
  [
    4314,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4311,
        0
      ],
      [
        4313,
        0
      ]
    ]
  ],
  [
    4318,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4317,
        0
      ],
      [
        4314,
        0
      ]
    ]
  ],
  [
    4319,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4318,
        0
      ]
    ]
  ],
  [
    4324,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5675,
        0
      ]
    ]
  ],
  [
    6012,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6010,
        0
      ]
    ]
  ],
  [
    4322,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6012,
        0
      ]
    ]
  ],
  [
    4325,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4322,
        0
      ],
      [
        4324,
        0
      ]
    ]
  ],
  [
    4326,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4325,
        0
      ]
    ]
  ],
  [
    4333,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5676,
        0
      ]
    ]
  ],
  [
    4327,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4322,
        0
      ]
    ]
  ],
  [
    4330,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4327,
        0
      ]
    ]
  ],
  [
    4328,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4327,
        0
      ]
    ]
  ],
  [
    4329,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4328,
        0
      ]
    ]
  ],
  [
    4331,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4329,
        0
      ],
      [
        4330,
        0
      ]
    ]
  ],
  [
    4334,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4331,
        0
      ],
      [
        4333,
        0
      ]
    ]
  ],
  [
    4335,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4326,
        0
      ],
      [
        4334,
        0
      ]
    ]
  ],
  [
    4340,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4335,
        0
      ],
      [
        4319,
        0
      ]
    ]
  ],
  [
    4343,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4340,
        0
      ],
      [
        4342,
        0
      ]
    ]
  ],
  [
    4346,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4343,
        0
      ],
      [
        4345,
        0
      ]
    ]
  ],
  [
    6224,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4346,
        0
      ]
    ]
  ],
  [
    6225,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4346,
        0
      ],
      [
        6224,
        0
      ]
    ]
  ],
  [
    6226,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6225,
        0
      ]
    ]
  ],
  [
    6227,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6225,
        0
      ],
      [
        6226,
        0
      ]
    ]
  ],
  [
    4356,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6227,
        0
      ],
      [
        4351,
        0
      ]
    ]
  ],
  [
    4358,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4356,
        0
      ]
    ]
  ],
  [
    4359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4358,
        0
      ]
    ]
  ],
  [
    4360,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4359,
        0
      ],
      [
        1446,
        0
      ]
    ]
  ],
  [
    4361,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4290,
        0
      ],
      [
        4360,
        0
      ]
    ]
  ],
  [
    1444,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1312,
        0
      ]
    ]
  ],
  [
    1445,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1311,
        0
      ]
    ]
  ],
  [
    4378,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1310,
        0
      ]
    ]
  ],
  [
    6014,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4378,
        0
      ],
      [
        1445,
        0
      ]
    ]
  ],
  [
    4375,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1314,
        0
      ]
    ]
  ],
  [
    4369,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5678,
        0
      ]
    ]
  ],
  [
    4365,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4364,
        0
      ]
    ]
  ],
  [
    4362,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4361,
        0
      ],
      [
        4361,
        0
      ]
    ]
  ],
  [
    4363,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4362,
        0
      ]
    ]
  ],
  [
    4366,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4363,
        0
      ],
      [
        4365,
        0
      ]
    ]
  ],
  [
    4367,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4366,
        0
      ]
    ]
  ],
  [
    4370,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4367,
        0
      ],
      [
        4369,
        0
      ]
    ]
  ],
  [
    4371,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4370,
        0
      ]
    ]
  ],
  [
    4372,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4371,
        0
      ]
    ]
  ],
  [
    4373,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4372,
        0
      ]
    ]
  ],
  [
    4374,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4361,
        0
      ],
      [
        4373,
        0
      ]
    ]
  ],
  [
    4376,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4375,
        0
      ],
      [
        4374,
        0
      ]
    ]
  ],
  [
    6015,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4376,
        0
      ],
      [
        6014,
        0
      ]
    ]
  ],
  [
    6017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6015,
        0
      ]
    ]
  ],
  [
    6016,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6015,
        0
      ]
    ]
  ],
  [
    4380,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6016,
        0
      ]
    ]
  ],
  [
    4381,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6016,
        0
      ],
      [
        4380,
        0
      ]
    ]
  ],
  [
    4382,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4381,
        0
      ],
      [
        6017,
        0
      ]
    ]
  ],
  [
    4383,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4382,
        0
      ],
      [
        1444,
        0
      ]
    ]
  ],
  [
    4384,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4361,
        0
      ],
      [
        4383,
        0
      ]
    ]
  ],
  [
    1442,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1318,
        0
      ]
    ]
  ],
  [
    4442,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1317,
        0
      ]
    ]
  ],
  [
    4414,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1315,
        0
      ]
    ]
  ],
  [
    1443,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1316,
        0
      ]
    ]
  ],
  [
    6018,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1443,
        0
      ],
      [
        4414,
        0
      ],
      [
        4442,
        0
      ]
    ]
  ],
  [
    4398,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1322,
        0
      ]
    ]
  ],
  [
    4392,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5679,
        0
      ]
    ]
  ],
  [
    4388,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4387,
        0
      ]
    ]
  ],
  [
    4385,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4384,
        0
      ],
      [
        4384,
        0
      ]
    ]
  ],
  [
    4386,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4385,
        0
      ]
    ]
  ],
  [
    4389,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4386,
        0
      ],
      [
        4388,
        0
      ]
    ]
  ],
  [
    4390,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4389,
        0
      ]
    ]
  ],
  [
    4393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4390,
        0
      ],
      [
        4392,
        0
      ]
    ]
  ],
  [
    4394,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4393,
        0
      ]
    ]
  ],
  [
    4395,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4394,
        0
      ]
    ]
  ],
  [
    4396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4395,
        0
      ]
    ]
  ],
  [
    4397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4384,
        0
      ],
      [
        4396,
        0
      ]
    ]
  ],
  [
    4399,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4398,
        0
      ],
      [
        4397,
        0
      ]
    ]
  ],
  [
    6019,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4399,
        0
      ],
      [
        6018,
        0
      ]
    ]
  ],
  [
    6022,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6019,
        0
      ]
    ]
  ],
  [
    4444,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6022,
        0
      ]
    ]
  ],
  [
    4445,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4444,
        0
      ]
    ]
  ],
  [
    4439,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5684,
        0
      ]
    ]
  ],
  [
    4436,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        454,
        0
      ]
    ]
  ],
  [
    4410,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5681,
        0
      ]
    ]
  ],
  [
    6020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6019,
        0
      ]
    ]
  ],
  [
    4401,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6020,
        0
      ]
    ]
  ],
  [
    4411,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4401,
        0
      ],
      [
        4410,
        0
      ]
    ]
  ],
  [
    4407,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5680,
        0
      ]
    ]
  ],
  [
    4404,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4401,
        0
      ]
    ]
  ],
  [
    4402,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4401,
        0
      ]
    ]
  ],
  [
    4403,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4402,
        0
      ]
    ]
  ],
  [
    4405,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4403,
        0
      ],
      [
        4404,
        0
      ]
    ]
  ],
  [
    4408,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4405,
        0
      ],
      [
        4407,
        0
      ]
    ]
  ],
  [
    4412,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4411,
        0
      ],
      [
        4408,
        0
      ]
    ]
  ],
  [
    4413,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4412,
        0
      ]
    ]
  ],
  [
    4418,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5682,
        0
      ]
    ]
  ],
  [
    6021,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6019,
        0
      ]
    ]
  ],
  [
    4416,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6021,
        0
      ]
    ]
  ],
  [
    4419,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4416,
        0
      ],
      [
        4418,
        0
      ]
    ]
  ],
  [
    4420,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4419,
        0
      ]
    ]
  ],
  [
    4427,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5683,
        0
      ]
    ]
  ],
  [
    4421,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4416,
        0
      ]
    ]
  ],
  [
    4424,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4421,
        0
      ]
    ]
  ],
  [
    4422,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4421,
        0
      ]
    ]
  ],
  [
    4423,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4422,
        0
      ]
    ]
  ],
  [
    4425,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4423,
        0
      ],
      [
        4424,
        0
      ]
    ]
  ],
  [
    4428,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4425,
        0
      ],
      [
        4427,
        0
      ]
    ]
  ],
  [
    4429,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4420,
        0
      ],
      [
        4428,
        0
      ]
    ]
  ],
  [
    4434,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4429,
        0
      ],
      [
        4413,
        0
      ]
    ]
  ],
  [
    4437,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4434,
        0
      ],
      [
        4436,
        0
      ]
    ]
  ],
  [
    4440,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4437,
        0
      ],
      [
        4439,
        0
      ]
    ]
  ],
  [
    6228,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4440,
        0
      ]
    ]
  ],
  [
    6229,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4440,
        0
      ],
      [
        6228,
        0
      ]
    ]
  ],
  [
    6230,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6229,
        0
      ]
    ]
  ],
  [
    6231,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6229,
        0
      ],
      [
        6230,
        0
      ]
    ]
  ],
  [
    4450,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6231,
        0
      ],
      [
        4445,
        0
      ]
    ]
  ],
  [
    4452,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4450,
        0
      ]
    ]
  ],
  [
    4453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4452,
        0
      ]
    ]
  ],
  [
    4454,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4453,
        0
      ],
      [
        1442,
        0
      ]
    ]
  ],
  [
    4455,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4384,
        0
      ],
      [
        4454,
        0
      ]
    ]
  ],
  [
    1440,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1321,
        0
      ]
    ]
  ],
  [
    1441,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1320,
        0
      ]
    ]
  ],
  [
    4472,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1319,
        0
      ]
    ]
  ],
  [
    6023,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4472,
        0
      ],
      [
        1441,
        0
      ]
    ]
  ],
  [
    4469,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1323,
        0
      ]
    ]
  ],
  [
    4463,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5685,
        0
      ]
    ]
  ],
  [
    4459,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4458,
        0
      ]
    ]
  ],
  [
    4456,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4455,
        0
      ],
      [
        4455,
        0
      ]
    ]
  ],
  [
    4457,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4456,
        0
      ]
    ]
  ],
  [
    4460,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4457,
        0
      ],
      [
        4459,
        0
      ]
    ]
  ],
  [
    4461,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4460,
        0
      ]
    ]
  ],
  [
    4464,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4461,
        0
      ],
      [
        4463,
        0
      ]
    ]
  ],
  [
    4465,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4464,
        0
      ]
    ]
  ],
  [
    4466,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4465,
        0
      ]
    ]
  ],
  [
    4467,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4466,
        0
      ]
    ]
  ],
  [
    4468,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4455,
        0
      ],
      [
        4467,
        0
      ]
    ]
  ],
  [
    4470,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4469,
        0
      ],
      [
        4468,
        0
      ]
    ]
  ],
  [
    6024,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4470,
        0
      ],
      [
        6023,
        0
      ]
    ]
  ],
  [
    6026,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6024,
        0
      ]
    ]
  ],
  [
    6025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6024,
        0
      ]
    ]
  ],
  [
    4474,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6025,
        0
      ]
    ]
  ],
  [
    4475,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6025,
        0
      ],
      [
        4474,
        0
      ]
    ]
  ],
  [
    4476,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4475,
        0
      ],
      [
        6026,
        0
      ]
    ]
  ],
  [
    4477,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4476,
        0
      ],
      [
        1440,
        0
      ]
    ]
  ],
  [
    4478,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4455,
        0
      ],
      [
        4477,
        0
      ]
    ]
  ],
  [
    1438,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1327,
        0
      ]
    ]
  ],
  [
    4536,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1326,
        0
      ]
    ]
  ],
  [
    4508,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1324,
        0
      ]
    ]
  ],
  [
    1439,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1325,
        0
      ]
    ]
  ],
  [
    6027,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1439,
        0
      ],
      [
        4508,
        0
      ],
      [
        4536,
        0
      ]
    ]
  ],
  [
    4492,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1331,
        0
      ]
    ]
  ],
  [
    4486,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5686,
        0
      ]
    ]
  ],
  [
    4482,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4481,
        0
      ]
    ]
  ],
  [
    4479,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4478,
        0
      ],
      [
        4478,
        0
      ]
    ]
  ],
  [
    4480,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4479,
        0
      ]
    ]
  ],
  [
    4483,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4480,
        0
      ],
      [
        4482,
        0
      ]
    ]
  ],
  [
    4484,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4483,
        0
      ]
    ]
  ],
  [
    4487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4484,
        0
      ],
      [
        4486,
        0
      ]
    ]
  ],
  [
    4488,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4487,
        0
      ]
    ]
  ],
  [
    4489,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4488,
        0
      ]
    ]
  ],
  [
    4490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4489,
        0
      ]
    ]
  ],
  [
    4491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4478,
        0
      ],
      [
        4490,
        0
      ]
    ]
  ],
  [
    4493,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4492,
        0
      ],
      [
        4491,
        0
      ]
    ]
  ],
  [
    6028,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4493,
        0
      ],
      [
        6027,
        0
      ]
    ]
  ],
  [
    6031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6028,
        0
      ]
    ]
  ],
  [
    4538,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6031,
        0
      ]
    ]
  ],
  [
    4539,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4538,
        0
      ]
    ]
  ],
  [
    4533,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5578,
        0
      ]
    ]
  ],
  [
    4530,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        468,
        0
      ]
    ]
  ],
  [
    4504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5688,
        0
      ]
    ]
  ],
  [
    6029,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6028,
        0
      ]
    ]
  ],
  [
    4495,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6029,
        0
      ]
    ]
  ],
  [
    4505,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4495,
        0
      ],
      [
        4504,
        0
      ]
    ]
  ],
  [
    4501,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5687,
        0
      ]
    ]
  ],
  [
    4498,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4495,
        0
      ]
    ]
  ],
  [
    4496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4495,
        0
      ]
    ]
  ],
  [
    4497,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4496,
        0
      ]
    ]
  ],
  [
    4499,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4497,
        0
      ],
      [
        4498,
        0
      ]
    ]
  ],
  [
    4502,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4499,
        0
      ],
      [
        4501,
        0
      ]
    ]
  ],
  [
    4506,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4505,
        0
      ],
      [
        4502,
        0
      ]
    ]
  ],
  [
    4507,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4506,
        0
      ]
    ]
  ],
  [
    4512,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5689,
        0
      ]
    ]
  ],
  [
    6030,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6028,
        0
      ]
    ]
  ],
  [
    4510,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6030,
        0
      ]
    ]
  ],
  [
    4513,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4510,
        0
      ],
      [
        4512,
        0
      ]
    ]
  ],
  [
    4514,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4513,
        0
      ]
    ]
  ],
  [
    4521,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5690,
        0
      ]
    ]
  ],
  [
    4515,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4510,
        0
      ]
    ]
  ],
  [
    4518,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4515,
        0
      ]
    ]
  ],
  [
    4516,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4515,
        0
      ]
    ]
  ],
  [
    4517,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4516,
        0
      ]
    ]
  ],
  [
    4519,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4517,
        0
      ],
      [
        4518,
        0
      ]
    ]
  ],
  [
    4522,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4519,
        0
      ],
      [
        4521,
        0
      ]
    ]
  ],
  [
    4523,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4514,
        0
      ],
      [
        4522,
        0
      ]
    ]
  ],
  [
    4528,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4523,
        0
      ],
      [
        4507,
        0
      ]
    ]
  ],
  [
    4531,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4528,
        0
      ],
      [
        4530,
        0
      ]
    ]
  ],
  [
    4534,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4531,
        0
      ],
      [
        4533,
        0
      ]
    ]
  ],
  [
    6232,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4534,
        0
      ]
    ]
  ],
  [
    6233,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4534,
        0
      ],
      [
        6232,
        0
      ]
    ]
  ],
  [
    6234,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6233,
        0
      ]
    ]
  ],
  [
    6235,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6233,
        0
      ],
      [
        6234,
        0
      ]
    ]
  ],
  [
    4544,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6235,
        0
      ],
      [
        4539,
        0
      ]
    ]
  ],
  [
    4546,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4544,
        0
      ]
    ]
  ],
  [
    4547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4546,
        0
      ]
    ]
  ],
  [
    4548,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4547,
        0
      ],
      [
        1438,
        0
      ]
    ]
  ],
  [
    4549,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4478,
        0
      ],
      [
        4548,
        0
      ]
    ]
  ],
  [
    1436,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1330,
        0
      ]
    ]
  ],
  [
    1437,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1329,
        0
      ]
    ]
  ],
  [
    4566,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1328,
        0
      ]
    ]
  ],
  [
    6032,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4566,
        0
      ],
      [
        1437,
        0
      ]
    ]
  ],
  [
    4563,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1332,
        0
      ]
    ]
  ],
  [
    4557,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5579,
        0
      ]
    ]
  ],
  [
    4553,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4552,
        0
      ]
    ]
  ],
  [
    4550,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4549,
        0
      ],
      [
        4549,
        0
      ]
    ]
  ],
  [
    4551,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4550,
        0
      ]
    ]
  ],
  [
    4554,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4551,
        0
      ],
      [
        4553,
        0
      ]
    ]
  ],
  [
    4555,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4554,
        0
      ]
    ]
  ],
  [
    4558,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4555,
        0
      ],
      [
        4557,
        0
      ]
    ]
  ],
  [
    4559,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4558,
        0
      ]
    ]
  ],
  [
    4560,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4559,
        0
      ]
    ]
  ],
  [
    4561,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4560,
        0
      ]
    ]
  ],
  [
    4562,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4549,
        0
      ],
      [
        4561,
        0
      ]
    ]
  ],
  [
    4564,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4563,
        0
      ],
      [
        4562,
        0
      ]
    ]
  ],
  [
    6033,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4564,
        0
      ],
      [
        6032,
        0
      ]
    ]
  ],
  [
    6035,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6033,
        0
      ]
    ]
  ],
  [
    6034,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6033,
        0
      ]
    ]
  ],
  [
    4568,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6034,
        0
      ]
    ]
  ],
  [
    4569,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6034,
        0
      ],
      [
        4568,
        0
      ]
    ]
  ],
  [
    4570,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4569,
        0
      ],
      [
        6035,
        0
      ]
    ]
  ],
  [
    4571,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4570,
        0
      ],
      [
        1436,
        0
      ]
    ]
  ],
  [
    4572,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4549,
        0
      ],
      [
        4571,
        0
      ]
    ]
  ],
  [
    1434,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1336,
        0
      ]
    ]
  ],
  [
    4630,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1335,
        0
      ]
    ]
  ],
  [
    4602,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1333,
        0
      ]
    ]
  ],
  [
    1435,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1334,
        0
      ]
    ]
  ],
  [
    6036,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1435,
        0
      ],
      [
        4602,
        0
      ],
      [
        4630,
        0
      ]
    ]
  ],
  [
    4586,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1340,
        0
      ]
    ]
  ],
  [
    4580,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5691,
        0
      ]
    ]
  ],
  [
    4576,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4575,
        0
      ]
    ]
  ],
  [
    4573,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4572,
        0
      ],
      [
        4572,
        0
      ]
    ]
  ],
  [
    4574,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4573,
        0
      ]
    ]
  ],
  [
    4577,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4574,
        0
      ],
      [
        4576,
        0
      ]
    ]
  ],
  [
    4578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4577,
        0
      ]
    ]
  ],
  [
    4581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4578,
        0
      ],
      [
        4580,
        0
      ]
    ]
  ],
  [
    4582,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4581,
        0
      ]
    ]
  ],
  [
    4583,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4582,
        0
      ]
    ]
  ],
  [
    4584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4583,
        0
      ]
    ]
  ],
  [
    4585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4572,
        0
      ],
      [
        4584,
        0
      ]
    ]
  ],
  [
    4587,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4586,
        0
      ],
      [
        4585,
        0
      ]
    ]
  ],
  [
    6037,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4587,
        0
      ],
      [
        6036,
        0
      ]
    ]
  ],
  [
    6040,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6037,
        0
      ]
    ]
  ],
  [
    4632,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6040,
        0
      ]
    ]
  ],
  [
    4633,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4632,
        0
      ]
    ]
  ],
  [
    4627,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5696,
        0
      ]
    ]
  ],
  [
    4624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        482,
        0
      ]
    ]
  ],
  [
    4598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5693,
        0
      ]
    ]
  ],
  [
    6038,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6037,
        0
      ]
    ]
  ],
  [
    4589,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6038,
        0
      ]
    ]
  ],
  [
    4599,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4589,
        0
      ],
      [
        4598,
        0
      ]
    ]
  ],
  [
    4595,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5692,
        0
      ]
    ]
  ],
  [
    4592,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4589,
        0
      ]
    ]
  ],
  [
    4590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4589,
        0
      ]
    ]
  ],
  [
    4591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4590,
        0
      ]
    ]
  ],
  [
    4593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4591,
        0
      ],
      [
        4592,
        0
      ]
    ]
  ],
  [
    4596,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4593,
        0
      ],
      [
        4595,
        0
      ]
    ]
  ],
  [
    4600,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4599,
        0
      ],
      [
        4596,
        0
      ]
    ]
  ],
  [
    4601,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4600,
        0
      ]
    ]
  ],
  [
    4606,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5694,
        0
      ]
    ]
  ],
  [
    6039,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6037,
        0
      ]
    ]
  ],
  [
    4604,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6039,
        0
      ]
    ]
  ],
  [
    4607,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4604,
        0
      ],
      [
        4606,
        0
      ]
    ]
  ],
  [
    4608,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4607,
        0
      ]
    ]
  ],
  [
    4615,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5695,
        0
      ]
    ]
  ],
  [
    4609,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4604,
        0
      ]
    ]
  ],
  [
    4612,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4609,
        0
      ]
    ]
  ],
  [
    4610,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4609,
        0
      ]
    ]
  ],
  [
    4611,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4610,
        0
      ]
    ]
  ],
  [
    4613,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4611,
        0
      ],
      [
        4612,
        0
      ]
    ]
  ],
  [
    4616,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4613,
        0
      ],
      [
        4615,
        0
      ]
    ]
  ],
  [
    4617,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4608,
        0
      ],
      [
        4616,
        0
      ]
    ]
  ],
  [
    4622,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4617,
        0
      ],
      [
        4601,
        0
      ]
    ]
  ],
  [
    4625,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4622,
        0
      ],
      [
        4624,
        0
      ]
    ]
  ],
  [
    4628,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4625,
        0
      ],
      [
        4627,
        0
      ]
    ]
  ],
  [
    6236,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4628,
        0
      ]
    ]
  ],
  [
    6237,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4628,
        0
      ],
      [
        6236,
        0
      ]
    ]
  ],
  [
    6238,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6237,
        0
      ]
    ]
  ],
  [
    6239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6237,
        0
      ],
      [
        6238,
        0
      ]
    ]
  ],
  [
    4638,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6239,
        0
      ],
      [
        4633,
        0
      ]
    ]
  ],
  [
    4640,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4638,
        0
      ]
    ]
  ],
  [
    4641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4640,
        0
      ]
    ]
  ],
  [
    4642,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4641,
        0
      ],
      [
        1434,
        0
      ]
    ]
  ],
  [
    4643,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4572,
        0
      ],
      [
        4642,
        0
      ]
    ]
  ],
  [
    1432,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1339,
        0
      ]
    ]
  ],
  [
    1433,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1338,
        0
      ]
    ]
  ],
  [
    4660,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1337,
        0
      ]
    ]
  ],
  [
    6041,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4660,
        0
      ],
      [
        1433,
        0
      ]
    ]
  ],
  [
    4657,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1341,
        0
      ]
    ]
  ],
  [
    4651,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5697,
        0
      ]
    ]
  ],
  [
    4647,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4646,
        0
      ]
    ]
  ],
  [
    4644,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4643,
        0
      ],
      [
        4643,
        0
      ]
    ]
  ],
  [
    4645,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4644,
        0
      ]
    ]
  ],
  [
    4648,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4645,
        0
      ],
      [
        4647,
        0
      ]
    ]
  ],
  [
    4649,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4648,
        0
      ]
    ]
  ],
  [
    4652,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4649,
        0
      ],
      [
        4651,
        0
      ]
    ]
  ],
  [
    4653,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4652,
        0
      ]
    ]
  ],
  [
    4654,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4653,
        0
      ]
    ]
  ],
  [
    4655,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4654,
        0
      ]
    ]
  ],
  [
    4656,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4643,
        0
      ],
      [
        4655,
        0
      ]
    ]
  ],
  [
    4658,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4657,
        0
      ],
      [
        4656,
        0
      ]
    ]
  ],
  [
    6042,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4658,
        0
      ],
      [
        6041,
        0
      ]
    ]
  ],
  [
    6044,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6042,
        0
      ]
    ]
  ],
  [
    6043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6042,
        0
      ]
    ]
  ],
  [
    4662,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6043,
        0
      ]
    ]
  ],
  [
    4663,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6043,
        0
      ],
      [
        4662,
        0
      ]
    ]
  ],
  [
    4664,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4663,
        0
      ],
      [
        6044,
        0
      ]
    ]
  ],
  [
    4665,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4664,
        0
      ],
      [
        1432,
        0
      ]
    ]
  ],
  [
    4666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4643,
        0
      ],
      [
        4665,
        0
      ]
    ]
  ],
  [
    1430,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1345,
        0
      ]
    ]
  ],
  [
    4724,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1344,
        0
      ]
    ]
  ],
  [
    4696,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1342,
        0
      ]
    ]
  ],
  [
    1431,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1343,
        0
      ]
    ]
  ],
  [
    6045,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1431,
        0
      ],
      [
        4696,
        0
      ],
      [
        4724,
        0
      ]
    ]
  ],
  [
    4680,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1349,
        0
      ]
    ]
  ],
  [
    4674,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5698,
        0
      ]
    ]
  ],
  [
    4670,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4669,
        0
      ]
    ]
  ],
  [
    4667,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4666,
        0
      ],
      [
        4666,
        0
      ]
    ]
  ],
  [
    4668,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4667,
        0
      ]
    ]
  ],
  [
    4671,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4668,
        0
      ],
      [
        4670,
        0
      ]
    ]
  ],
  [
    4672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4671,
        0
      ]
    ]
  ],
  [
    4675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4672,
        0
      ],
      [
        4674,
        0
      ]
    ]
  ],
  [
    4676,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4675,
        0
      ]
    ]
  ],
  [
    4677,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4676,
        0
      ]
    ]
  ],
  [
    4678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4677,
        0
      ]
    ]
  ],
  [
    4679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4666,
        0
      ],
      [
        4678,
        0
      ]
    ]
  ],
  [
    4681,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4680,
        0
      ],
      [
        4679,
        0
      ]
    ]
  ],
  [
    6046,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4681,
        0
      ],
      [
        6045,
        0
      ]
    ]
  ],
  [
    6049,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6046,
        0
      ]
    ]
  ],
  [
    4726,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6049,
        0
      ]
    ]
  ],
  [
    4727,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4726,
        0
      ]
    ]
  ],
  [
    4721,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5703,
        0
      ]
    ]
  ],
  [
    4718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        496,
        0
      ]
    ]
  ],
  [
    4692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5700,
        0
      ]
    ]
  ],
  [
    6047,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6046,
        0
      ]
    ]
  ],
  [
    4683,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6047,
        0
      ]
    ]
  ],
  [
    4693,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4683,
        0
      ],
      [
        4692,
        0
      ]
    ]
  ],
  [
    4689,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5699,
        0
      ]
    ]
  ],
  [
    4686,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4683,
        0
      ]
    ]
  ],
  [
    4684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4683,
        0
      ]
    ]
  ],
  [
    4685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4684,
        0
      ]
    ]
  ],
  [
    4687,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4685,
        0
      ],
      [
        4686,
        0
      ]
    ]
  ],
  [
    4690,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4687,
        0
      ],
      [
        4689,
        0
      ]
    ]
  ],
  [
    4694,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4693,
        0
      ],
      [
        4690,
        0
      ]
    ]
  ],
  [
    4695,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4694,
        0
      ]
    ]
  ],
  [
    4700,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5701,
        0
      ]
    ]
  ],
  [
    6048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6046,
        0
      ]
    ]
  ],
  [
    4698,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6048,
        0
      ]
    ]
  ],
  [
    4701,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4698,
        0
      ],
      [
        4700,
        0
      ]
    ]
  ],
  [
    4702,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4701,
        0
      ]
    ]
  ],
  [
    4709,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5702,
        0
      ]
    ]
  ],
  [
    4703,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4698,
        0
      ]
    ]
  ],
  [
    4706,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4703,
        0
      ]
    ]
  ],
  [
    4704,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4703,
        0
      ]
    ]
  ],
  [
    4705,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4704,
        0
      ]
    ]
  ],
  [
    4707,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4705,
        0
      ],
      [
        4706,
        0
      ]
    ]
  ],
  [
    4710,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4707,
        0
      ],
      [
        4709,
        0
      ]
    ]
  ],
  [
    4711,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4702,
        0
      ],
      [
        4710,
        0
      ]
    ]
  ],
  [
    4716,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4711,
        0
      ],
      [
        4695,
        0
      ]
    ]
  ],
  [
    4719,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4716,
        0
      ],
      [
        4718,
        0
      ]
    ]
  ],
  [
    4722,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4719,
        0
      ],
      [
        4721,
        0
      ]
    ]
  ],
  [
    6240,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4722,
        0
      ]
    ]
  ],
  [
    6241,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4722,
        0
      ],
      [
        6240,
        0
      ]
    ]
  ],
  [
    6242,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6241,
        0
      ]
    ]
  ],
  [
    6243,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6241,
        0
      ],
      [
        6242,
        0
      ]
    ]
  ],
  [
    4732,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6243,
        0
      ],
      [
        4727,
        0
      ]
    ]
  ],
  [
    4734,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4732,
        0
      ]
    ]
  ],
  [
    4735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4734,
        0
      ]
    ]
  ],
  [
    4736,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4735,
        0
      ],
      [
        1430,
        0
      ]
    ]
  ],
  [
    4737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4666,
        0
      ],
      [
        4736,
        0
      ]
    ]
  ],
  [
    1428,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1348,
        0
      ]
    ]
  ],
  [
    1429,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1347,
        0
      ]
    ]
  ],
  [
    4754,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1346,
        0
      ]
    ]
  ],
  [
    6050,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4754,
        0
      ],
      [
        1429,
        0
      ]
    ]
  ],
  [
    4751,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1350,
        0
      ]
    ]
  ],
  [
    4745,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5704,
        0
      ]
    ]
  ],
  [
    4741,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4740,
        0
      ]
    ]
  ],
  [
    4738,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4737,
        0
      ],
      [
        4737,
        0
      ]
    ]
  ],
  [
    4739,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4738,
        0
      ]
    ]
  ],
  [
    4742,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4739,
        0
      ],
      [
        4741,
        0
      ]
    ]
  ],
  [
    4743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4742,
        0
      ]
    ]
  ],
  [
    4746,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4743,
        0
      ],
      [
        4745,
        0
      ]
    ]
  ],
  [
    4747,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4746,
        0
      ]
    ]
  ],
  [
    4748,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4747,
        0
      ]
    ]
  ],
  [
    4749,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4748,
        0
      ]
    ]
  ],
  [
    4750,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4737,
        0
      ],
      [
        4749,
        0
      ]
    ]
  ],
  [
    4752,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4751,
        0
      ],
      [
        4750,
        0
      ]
    ]
  ],
  [
    6051,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4752,
        0
      ],
      [
        6050,
        0
      ]
    ]
  ],
  [
    6053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6051,
        0
      ]
    ]
  ],
  [
    6052,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6051,
        0
      ]
    ]
  ],
  [
    4756,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6052,
        0
      ]
    ]
  ],
  [
    4757,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6052,
        0
      ],
      [
        4756,
        0
      ]
    ]
  ],
  [
    4758,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4757,
        0
      ],
      [
        6053,
        0
      ]
    ]
  ],
  [
    4759,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4758,
        0
      ],
      [
        1428,
        0
      ]
    ]
  ],
  [
    4760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4737,
        0
      ],
      [
        4759,
        0
      ]
    ]
  ],
  [
    1426,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1354,
        0
      ]
    ]
  ],
  [
    4818,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    4790,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1351,
        0
      ]
    ]
  ],
  [
    1427,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1352,
        0
      ]
    ]
  ],
  [
    6054,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1427,
        0
      ],
      [
        4790,
        0
      ],
      [
        4818,
        0
      ]
    ]
  ],
  [
    4774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1358,
        0
      ]
    ]
  ],
  [
    4768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5705,
        0
      ]
    ]
  ],
  [
    4764,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4763,
        0
      ]
    ]
  ],
  [
    4761,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4760,
        0
      ],
      [
        4760,
        0
      ]
    ]
  ],
  [
    4762,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4761,
        0
      ]
    ]
  ],
  [
    4765,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4762,
        0
      ],
      [
        4764,
        0
      ]
    ]
  ],
  [
    4766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4765,
        0
      ]
    ]
  ],
  [
    4769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4766,
        0
      ],
      [
        4768,
        0
      ]
    ]
  ],
  [
    4770,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4769,
        0
      ]
    ]
  ],
  [
    4771,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4770,
        0
      ]
    ]
  ],
  [
    4772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4771,
        0
      ]
    ]
  ],
  [
    4773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4760,
        0
      ],
      [
        4772,
        0
      ]
    ]
  ],
  [
    4775,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4774,
        0
      ],
      [
        4773,
        0
      ]
    ]
  ],
  [
    6055,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4775,
        0
      ],
      [
        6054,
        0
      ]
    ]
  ],
  [
    6058,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6055,
        0
      ]
    ]
  ],
  [
    4820,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6058,
        0
      ]
    ]
  ],
  [
    4821,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4820,
        0
      ]
    ]
  ],
  [
    4815,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5710,
        0
      ]
    ]
  ],
  [
    4812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        510,
        0
      ]
    ]
  ],
  [
    4786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5707,
        0
      ]
    ]
  ],
  [
    6056,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6055,
        0
      ]
    ]
  ],
  [
    4777,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6056,
        0
      ]
    ]
  ],
  [
    4787,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4777,
        0
      ],
      [
        4786,
        0
      ]
    ]
  ],
  [
    4783,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5706,
        0
      ]
    ]
  ],
  [
    4780,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    4778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    4779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4778,
        0
      ]
    ]
  ],
  [
    4781,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4779,
        0
      ],
      [
        4780,
        0
      ]
    ]
  ],
  [
    4784,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4781,
        0
      ],
      [
        4783,
        0
      ]
    ]
  ],
  [
    4788,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4787,
        0
      ],
      [
        4784,
        0
      ]
    ]
  ],
  [
    4789,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4788,
        0
      ]
    ]
  ],
  [
    4794,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5708,
        0
      ]
    ]
  ],
  [
    6057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6055,
        0
      ]
    ]
  ],
  [
    4792,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6057,
        0
      ]
    ]
  ],
  [
    4795,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4792,
        0
      ],
      [
        4794,
        0
      ]
    ]
  ],
  [
    4796,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4795,
        0
      ]
    ]
  ],
  [
    4803,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5709,
        0
      ]
    ]
  ],
  [
    4797,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4792,
        0
      ]
    ]
  ],
  [
    4800,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4797,
        0
      ]
    ]
  ],
  [
    4798,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4797,
        0
      ]
    ]
  ],
  [
    4799,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4798,
        0
      ]
    ]
  ],
  [
    4801,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4799,
        0
      ],
      [
        4800,
        0
      ]
    ]
  ],
  [
    4804,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4801,
        0
      ],
      [
        4803,
        0
      ]
    ]
  ],
  [
    4805,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4796,
        0
      ],
      [
        4804,
        0
      ]
    ]
  ],
  [
    4810,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4805,
        0
      ],
      [
        4789,
        0
      ]
    ]
  ],
  [
    4813,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4810,
        0
      ],
      [
        4812,
        0
      ]
    ]
  ],
  [
    4816,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4813,
        0
      ],
      [
        4815,
        0
      ]
    ]
  ],
  [
    6244,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4816,
        0
      ]
    ]
  ],
  [
    6245,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4816,
        0
      ],
      [
        6244,
        0
      ]
    ]
  ],
  [
    6246,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6245,
        0
      ]
    ]
  ],
  [
    6247,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6245,
        0
      ],
      [
        6246,
        0
      ]
    ]
  ],
  [
    4826,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6247,
        0
      ],
      [
        4821,
        0
      ]
    ]
  ],
  [
    4828,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4826,
        0
      ]
    ]
  ],
  [
    4829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4828,
        0
      ]
    ]
  ],
  [
    4830,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4829,
        0
      ],
      [
        1426,
        0
      ]
    ]
  ],
  [
    4831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4760,
        0
      ],
      [
        4830,
        0
      ]
    ]
  ],
  [
    1424,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1357,
        0
      ]
    ]
  ],
  [
    1425,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1356,
        0
      ]
    ]
  ],
  [
    4848,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1355,
        0
      ]
    ]
  ],
  [
    6059,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4848,
        0
      ],
      [
        1425,
        0
      ]
    ]
  ],
  [
    4845,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1359,
        0
      ]
    ]
  ],
  [
    4839,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5711,
        0
      ]
    ]
  ],
  [
    4835,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4834,
        0
      ]
    ]
  ],
  [
    4832,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4831,
        0
      ],
      [
        4831,
        0
      ]
    ]
  ],
  [
    4833,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4832,
        0
      ]
    ]
  ],
  [
    4836,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4833,
        0
      ],
      [
        4835,
        0
      ]
    ]
  ],
  [
    4837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4836,
        0
      ]
    ]
  ],
  [
    4840,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4837,
        0
      ],
      [
        4839,
        0
      ]
    ]
  ],
  [
    4841,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4840,
        0
      ]
    ]
  ],
  [
    4842,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4841,
        0
      ]
    ]
  ],
  [
    4843,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4842,
        0
      ]
    ]
  ],
  [
    4844,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4831,
        0
      ],
      [
        4843,
        0
      ]
    ]
  ],
  [
    4846,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4845,
        0
      ],
      [
        4844,
        0
      ]
    ]
  ],
  [
    6060,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4846,
        0
      ],
      [
        6059,
        0
      ]
    ]
  ],
  [
    6062,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6060,
        0
      ]
    ]
  ],
  [
    6061,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6060,
        0
      ]
    ]
  ],
  [
    4850,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6061,
        0
      ]
    ]
  ],
  [
    4851,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6061,
        0
      ],
      [
        4850,
        0
      ]
    ]
  ],
  [
    4852,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4851,
        0
      ],
      [
        6062,
        0
      ]
    ]
  ],
  [
    4853,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4852,
        0
      ],
      [
        1424,
        0
      ]
    ]
  ],
  [
    4854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4831,
        0
      ],
      [
        4853,
        0
      ]
    ]
  ],
  [
    1422,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1363,
        0
      ]
    ]
  ],
  [
    4912,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1362,
        0
      ]
    ]
  ],
  [
    4884,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1360,
        0
      ]
    ]
  ],
  [
    1423,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1361,
        0
      ]
    ]
  ],
  [
    6063,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1423,
        0
      ],
      [
        4884,
        0
      ],
      [
        4912,
        0
      ]
    ]
  ],
  [
    4868,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1367,
        0
      ]
    ]
  ],
  [
    4862,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5712,
        0
      ]
    ]
  ],
  [
    4858,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4857,
        0
      ]
    ]
  ],
  [
    4855,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4854,
        0
      ],
      [
        4854,
        0
      ]
    ]
  ],
  [
    4856,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4855,
        0
      ]
    ]
  ],
  [
    4859,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4856,
        0
      ],
      [
        4858,
        0
      ]
    ]
  ],
  [
    4860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4859,
        0
      ]
    ]
  ],
  [
    4863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4860,
        0
      ],
      [
        4862,
        0
      ]
    ]
  ],
  [
    4864,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4863,
        0
      ]
    ]
  ],
  [
    4865,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4864,
        0
      ]
    ]
  ],
  [
    4866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4865,
        0
      ]
    ]
  ],
  [
    4867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4854,
        0
      ],
      [
        4866,
        0
      ]
    ]
  ],
  [
    4869,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4868,
        0
      ],
      [
        4867,
        0
      ]
    ]
  ],
  [
    6064,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4869,
        0
      ],
      [
        6063,
        0
      ]
    ]
  ],
  [
    6067,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6064,
        0
      ]
    ]
  ],
  [
    4914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6067,
        0
      ]
    ]
  ],
  [
    4915,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4914,
        0
      ]
    ]
  ],
  [
    4909,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5717,
        0
      ]
    ]
  ],
  [
    4906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        524,
        0
      ]
    ]
  ],
  [
    4880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5714,
        0
      ]
    ]
  ],
  [
    6065,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6064,
        0
      ]
    ]
  ],
  [
    4871,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6065,
        0
      ]
    ]
  ],
  [
    4881,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4871,
        0
      ],
      [
        4880,
        0
      ]
    ]
  ],
  [
    4877,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5713,
        0
      ]
    ]
  ],
  [
    4874,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4871,
        0
      ]
    ]
  ],
  [
    4872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4871,
        0
      ]
    ]
  ],
  [
    4873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4872,
        0
      ]
    ]
  ],
  [
    4875,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4873,
        0
      ],
      [
        4874,
        0
      ]
    ]
  ],
  [
    4878,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4875,
        0
      ],
      [
        4877,
        0
      ]
    ]
  ],
  [
    4882,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4881,
        0
      ],
      [
        4878,
        0
      ]
    ]
  ],
  [
    4883,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4882,
        0
      ]
    ]
  ],
  [
    4888,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5715,
        0
      ]
    ]
  ],
  [
    6066,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6064,
        0
      ]
    ]
  ],
  [
    4886,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6066,
        0
      ]
    ]
  ],
  [
    4889,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4886,
        0
      ],
      [
        4888,
        0
      ]
    ]
  ],
  [
    4890,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4889,
        0
      ]
    ]
  ],
  [
    4897,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5716,
        0
      ]
    ]
  ],
  [
    4891,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4886,
        0
      ]
    ]
  ],
  [
    4894,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4891,
        0
      ]
    ]
  ],
  [
    4892,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4891,
        0
      ]
    ]
  ],
  [
    4893,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4892,
        0
      ]
    ]
  ],
  [
    4895,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4893,
        0
      ],
      [
        4894,
        0
      ]
    ]
  ],
  [
    4898,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4895,
        0
      ],
      [
        4897,
        0
      ]
    ]
  ],
  [
    4899,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4890,
        0
      ],
      [
        4898,
        0
      ]
    ]
  ],
  [
    4904,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4899,
        0
      ],
      [
        4883,
        0
      ]
    ]
  ],
  [
    4907,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4904,
        0
      ],
      [
        4906,
        0
      ]
    ]
  ],
  [
    4910,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        4907,
        0
      ],
      [
        4909,
        0
      ]
    ]
  ],
  [
    6248,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4910,
        0
      ]
    ]
  ],
  [
    6249,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4910,
        0
      ],
      [
        6248,
        0
      ]
    ]
  ],
  [
    6250,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6249,
        0
      ]
    ]
  ],
  [
    6251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6249,
        0
      ],
      [
        6250,
        0
      ]
    ]
  ],
  [
    4920,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6251,
        0
      ],
      [
        4915,
        0
      ]
    ]
  ],
  [
    4922,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        4920,
        0
      ]
    ]
  ],
  [
    4923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4922,
        0
      ]
    ]
  ],
  [
    4924,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        4923,
        0
      ],
      [
        1422,
        0
      ]
    ]
  ],
  [
    4925,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4854,
        0
      ],
      [
        4924,
        0
      ]
    ]
  ],
  [
    1420,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1366,
        0
      ]
    ]
  ],
  [
    1421,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1365,
        0
      ]
    ]
  ],
  [
    4942,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1364,
        0
      ]
    ]
  ],
  [
    6068,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        4942,
        0
      ],
      [
        1421,
        0
      ]
    ]
  ],
  [
    4939,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1368,
        0
      ]
    ]
  ],
  [
    4933,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5718,
        0
      ]
    ]
  ],
  [
    4929,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4928,
        0
      ]
    ]
  ],
  [
    4926,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4925,
        0
      ],
      [
        4925,
        0
      ]
    ]
  ],
  [
    4927,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4926,
        0
      ]
    ]
  ],
  [
    4930,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4927,
        0
      ],
      [
        4929,
        0
      ]
    ]
  ],
  [
    4931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4930,
        0
      ]
    ]
  ],
  [
    4934,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4931,
        0
      ],
      [
        4933,
        0
      ]
    ]
  ],
  [
    4935,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4934,
        0
      ]
    ]
  ],
  [
    4936,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4935,
        0
      ]
    ]
  ],
  [
    4937,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4936,
        0
      ]
    ]
  ],
  [
    4938,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4925,
        0
      ],
      [
        4937,
        0
      ]
    ]
  ],
  [
    4940,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4939,
        0
      ],
      [
        4938,
        0
      ]
    ]
  ],
  [
    6069,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        4940,
        0
      ],
      [
        6068,
        0
      ]
    ]
  ],
  [
    6071,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6069,
        0
      ]
    ]
  ],
  [
    6070,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6069,
        0
      ]
    ]
  ],
  [
    4944,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6070,
        0
      ]
    ]
  ],
  [
    4945,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6070,
        0
      ],
      [
        4944,
        0
      ]
    ]
  ],
  [
    4946,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        4945,
        0
      ],
      [
        6071,
        0
      ]
    ]
  ],
  [
    4947,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        4946,
        0
      ],
      [
        1420,
        0
      ]
    ]
  ],
  [
    4948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4925,
        0
      ],
      [
        4947,
        0
      ]
    ]
  ],
  [
    1418,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1372,
        0
      ]
    ]
  ],
  [
    5006,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1371,
        0
      ]
    ]
  ],
  [
    4978,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1369,
        0
      ]
    ]
  ],
  [
    1419,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1370,
        0
      ]
    ]
  ],
  [
    6072,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1419,
        0
      ],
      [
        4978,
        0
      ],
      [
        5006,
        0
      ]
    ]
  ],
  [
    4962,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1376,
        0
      ]
    ]
  ],
  [
    4956,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5719,
        0
      ]
    ]
  ],
  [
    4952,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4951,
        0
      ]
    ]
  ],
  [
    4949,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4948,
        0
      ],
      [
        4948,
        0
      ]
    ]
  ],
  [
    4950,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        4949,
        0
      ]
    ]
  ],
  [
    4953,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4950,
        0
      ],
      [
        4952,
        0
      ]
    ]
  ],
  [
    4954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4953,
        0
      ]
    ]
  ],
  [
    4957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4954,
        0
      ],
      [
        4956,
        0
      ]
    ]
  ],
  [
    4958,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4957,
        0
      ]
    ]
  ],
  [
    4959,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4958,
        0
      ]
    ]
  ],
  [
    4960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4959,
        0
      ]
    ]
  ],
  [
    4961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        4948,
        0
      ],
      [
        4960,
        0
      ]
    ]
  ],
  [
    4963,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        4962,
        0
      ],
      [
        4961,
        0
      ]
    ]
  ],
  [
    6073,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        4963,
        0
      ],
      [
        6072,
        0
      ]
    ]
  ],
  [
    6076,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6073,
        0
      ]
    ]
  ],
  [
    5008,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6076,
        0
      ]
    ]
  ],
  [
    5009,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5008,
        0
      ]
    ]
  ],
  [
    5003,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5724,
        0
      ]
    ]
  ],
  [
    5000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        538,
        0
      ]
    ]
  ],
  [
    4974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5721,
        0
      ]
    ]
  ],
  [
    6074,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6073,
        0
      ]
    ]
  ],
  [
    4965,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6074,
        0
      ]
    ]
  ],
  [
    4975,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4965,
        0
      ],
      [
        4974,
        0
      ]
    ]
  ],
  [
    4971,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5720,
        0
      ]
    ]
  ],
  [
    4968,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4965,
        0
      ]
    ]
  ],
  [
    4966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        4965,
        0
      ]
    ]
  ],
  [
    4967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        4966,
        0
      ]
    ]
  ],
  [
    4969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        4967,
        0
      ],
      [
        4968,
        0
      ]
    ]
  ],
  [
    4972,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4969,
        0
      ],
      [
        4971,
        0
      ]
    ]
  ],
  [
    4976,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        4975,
        0
      ],
      [
        4972,
        0
      ]
    ]
  ],
  [
    4977,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4976,
        0
      ]
    ]
  ],
  [
    4982,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5722,
        0
      ]
    ]
  ],
  [
    6075,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6073,
        0
      ]
    ]
  ],
  [
    4980,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6075,
        0
      ]
    ]
  ],
  [
    4983,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        4980,
        0
      ],
      [
        4982,
        0
      ]
    ]
  ],
  [
    4984,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4983,
        0
      ]
    ]
  ],
  [
    4991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5723,
        0
      ]
    ]
  ],
  [
    4985,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4980,
        0
      ]
    ]
  ],
  [
    4988,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4985,
        0
      ]
    ]
  ],
  [
    4986,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        4985,
        0
      ]
    ]
  ],
  [
    4987,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        4986,
        0
      ]
    ]
  ],
  [
    4989,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        4987,
        0
      ],
      [
        4988,
        0
      ]
    ]
  ],
  [
    4992,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        4989,
        0
      ],
      [
        4991,
        0
      ]
    ]
  ],
  [
    4993,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        4984,
        0
      ],
      [
        4992,
        0
      ]
    ]
  ],
  [
    4998,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4993,
        0
      ],
      [
        4977,
        0
      ]
    ]
  ],
  [
    5001,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        4998,
        0
      ],
      [
        5000,
        0
      ]
    ]
  ],
  [
    5004,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5001,
        0
      ],
      [
        5003,
        0
      ]
    ]
  ],
  [
    6252,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5004,
        0
      ]
    ]
  ],
  [
    6253,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5004,
        0
      ],
      [
        6252,
        0
      ]
    ]
  ],
  [
    6254,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6253,
        0
      ]
    ]
  ],
  [
    6255,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6253,
        0
      ],
      [
        6254,
        0
      ]
    ]
  ],
  [
    5014,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6255,
        0
      ],
      [
        5009,
        0
      ]
    ]
  ],
  [
    5016,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5014,
        0
      ]
    ]
  ],
  [
    5017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5016,
        0
      ]
    ]
  ],
  [
    5018,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5017,
        0
      ],
      [
        1418,
        0
      ]
    ]
  ],
  [
    5019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        4948,
        0
      ],
      [
        5018,
        0
      ]
    ]
  ],
  [
    1416,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1375,
        0
      ]
    ]
  ],
  [
    1417,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1374,
        0
      ]
    ]
  ],
  [
    5036,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1373,
        0
      ]
    ]
  ],
  [
    6077,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5036,
        0
      ],
      [
        1417,
        0
      ]
    ]
  ],
  [
    5033,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1377,
        0
      ]
    ]
  ],
  [
    5027,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5725,
        0
      ]
    ]
  ],
  [
    5023,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5022,
        0
      ]
    ]
  ],
  [
    5020,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5019,
        0
      ],
      [
        5019,
        0
      ]
    ]
  ],
  [
    5021,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5020,
        0
      ]
    ]
  ],
  [
    5024,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5021,
        0
      ],
      [
        5023,
        0
      ]
    ]
  ],
  [
    5025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5024,
        0
      ]
    ]
  ],
  [
    5028,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5025,
        0
      ],
      [
        5027,
        0
      ]
    ]
  ],
  [
    5029,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5028,
        0
      ]
    ]
  ],
  [
    5030,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5029,
        0
      ]
    ]
  ],
  [
    5031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5030,
        0
      ]
    ]
  ],
  [
    5032,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5019,
        0
      ],
      [
        5031,
        0
      ]
    ]
  ],
  [
    5034,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5033,
        0
      ],
      [
        5032,
        0
      ]
    ]
  ],
  [
    6078,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5034,
        0
      ],
      [
        6077,
        0
      ]
    ]
  ],
  [
    6080,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6078,
        0
      ]
    ]
  ],
  [
    6079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6078,
        0
      ]
    ]
  ],
  [
    5038,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6079,
        0
      ]
    ]
  ],
  [
    5039,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6079,
        0
      ],
      [
        5038,
        0
      ]
    ]
  ],
  [
    5040,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5039,
        0
      ],
      [
        6080,
        0
      ]
    ]
  ],
  [
    5041,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5040,
        0
      ],
      [
        1416,
        0
      ]
    ]
  ],
  [
    5042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5019,
        0
      ],
      [
        5041,
        0
      ]
    ]
  ],
  [
    1414,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1381,
        0
      ]
    ]
  ],
  [
    5100,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1380,
        0
      ]
    ]
  ],
  [
    5072,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1378,
        0
      ]
    ]
  ],
  [
    1415,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1379,
        0
      ]
    ]
  ],
  [
    6081,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1415,
        0
      ],
      [
        5072,
        0
      ],
      [
        5100,
        0
      ]
    ]
  ],
  [
    5056,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1385,
        0
      ]
    ]
  ],
  [
    5050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5726,
        0
      ]
    ]
  ],
  [
    5046,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5045,
        0
      ]
    ]
  ],
  [
    5043,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5042,
        0
      ],
      [
        5042,
        0
      ]
    ]
  ],
  [
    5044,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5043,
        0
      ]
    ]
  ],
  [
    5047,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5044,
        0
      ],
      [
        5046,
        0
      ]
    ]
  ],
  [
    5048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5047,
        0
      ]
    ]
  ],
  [
    5051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5048,
        0
      ],
      [
        5050,
        0
      ]
    ]
  ],
  [
    5052,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5051,
        0
      ]
    ]
  ],
  [
    5053,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5052,
        0
      ]
    ]
  ],
  [
    5054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5053,
        0
      ]
    ]
  ],
  [
    5055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5042,
        0
      ],
      [
        5054,
        0
      ]
    ]
  ],
  [
    5057,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5056,
        0
      ],
      [
        5055,
        0
      ]
    ]
  ],
  [
    6082,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        5057,
        0
      ],
      [
        6081,
        0
      ]
    ]
  ],
  [
    6085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6085,
        0
      ]
    ]
  ],
  [
    5103,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5102,
        0
      ]
    ]
  ],
  [
    5097,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5731,
        0
      ]
    ]
  ],
  [
    5094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        552,
        0
      ]
    ]
  ],
  [
    5068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5728,
        0
      ]
    ]
  ],
  [
    6083,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5059,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6083,
        0
      ]
    ]
  ],
  [
    5069,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5059,
        0
      ],
      [
        5068,
        0
      ]
    ]
  ],
  [
    5065,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5727,
        0
      ]
    ]
  ],
  [
    5062,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5059,
        0
      ]
    ]
  ],
  [
    5060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5059,
        0
      ]
    ]
  ],
  [
    5061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        5060,
        0
      ]
    ]
  ],
  [
    5063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        5061,
        0
      ],
      [
        5062,
        0
      ]
    ]
  ],
  [
    5066,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5063,
        0
      ],
      [
        5065,
        0
      ]
    ]
  ],
  [
    5070,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        5069,
        0
      ],
      [
        5066,
        0
      ]
    ]
  ],
  [
    5071,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5070,
        0
      ]
    ]
  ],
  [
    5076,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5729,
        0
      ]
    ]
  ],
  [
    6084,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5074,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6084,
        0
      ]
    ]
  ],
  [
    5077,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5074,
        0
      ],
      [
        5076,
        0
      ]
    ]
  ],
  [
    5078,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5077,
        0
      ]
    ]
  ],
  [
    5085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5730,
        0
      ]
    ]
  ],
  [
    5079,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5074,
        0
      ]
    ]
  ],
  [
    5082,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5079,
        0
      ]
    ]
  ],
  [
    5080,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5079,
        0
      ]
    ]
  ],
  [
    5081,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        5080,
        0
      ]
    ]
  ],
  [
    5083,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        5081,
        0
      ],
      [
        5082,
        0
      ]
    ]
  ],
  [
    5086,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        5083,
        0
      ],
      [
        5085,
        0
      ]
    ]
  ],
  [
    5087,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        5078,
        0
      ],
      [
        5086,
        0
      ]
    ]
  ],
  [
    5092,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5087,
        0
      ],
      [
        5071,
        0
      ]
    ]
  ],
  [
    5095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        5092,
        0
      ],
      [
        5094,
        0
      ]
    ]
  ],
  [
    5098,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5095,
        0
      ],
      [
        5097,
        0
      ]
    ]
  ],
  [
    6256,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5098,
        0
      ]
    ]
  ],
  [
    6257,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5098,
        0
      ],
      [
        6256,
        0
      ]
    ]
  ],
  [
    6258,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6257,
        0
      ]
    ]
  ],
  [
    6259,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6257,
        0
      ],
      [
        6258,
        0
      ]
    ]
  ],
  [
    5108,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6259,
        0
      ],
      [
        5103,
        0
      ]
    ]
  ],
  [
    5110,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5108,
        0
      ]
    ]
  ],
  [
    5111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5110,
        0
      ]
    ]
  ],
  [
    5112,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5111,
        0
      ],
      [
        1414,
        0
      ]
    ]
  ],
  [
    5113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5042,
        0
      ],
      [
        5112,
        0
      ]
    ]
  ],
  [
    1412,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1384,
        0
      ]
    ]
  ],
  [
    1413,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1383,
        0
      ]
    ]
  ],
  [
    5130,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1382,
        0
      ]
    ]
  ],
  [
    6086,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5130,
        0
      ],
      [
        1413,
        0
      ]
    ]
  ],
  [
    5127,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1386,
        0
      ]
    ]
  ],
  [
    5121,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5732,
        0
      ]
    ]
  ],
  [
    5117,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5116,
        0
      ]
    ]
  ],
  [
    5114,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5113,
        0
      ],
      [
        5113,
        0
      ]
    ]
  ],
  [
    5115,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5114,
        0
      ]
    ]
  ],
  [
    5118,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5115,
        0
      ],
      [
        5117,
        0
      ]
    ]
  ],
  [
    5119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5118,
        0
      ]
    ]
  ],
  [
    5122,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5119,
        0
      ],
      [
        5121,
        0
      ]
    ]
  ],
  [
    5123,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5122,
        0
      ]
    ]
  ],
  [
    5124,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5123,
        0
      ]
    ]
  ],
  [
    5125,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5124,
        0
      ]
    ]
  ],
  [
    5126,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5113,
        0
      ],
      [
        5125,
        0
      ]
    ]
  ],
  [
    5128,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5127,
        0
      ],
      [
        5126,
        0
      ]
    ]
  ],
  [
    6087,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5128,
        0
      ],
      [
        6086,
        0
      ]
    ]
  ],
  [
    6089,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6087,
        0
      ]
    ]
  ],
  [
    6088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6087,
        0
      ]
    ]
  ],
  [
    5132,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6088,
        0
      ]
    ]
  ],
  [
    5133,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6088,
        0
      ],
      [
        5132,
        0
      ]
    ]
  ],
  [
    5134,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5133,
        0
      ],
      [
        6089,
        0
      ]
    ]
  ],
  [
    5135,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5134,
        0
      ],
      [
        1412,
        0
      ]
    ]
  ],
  [
    5136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5113,
        0
      ],
      [
        5135,
        0
      ]
    ]
  ],
  [
    1410,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1390,
        0
      ]
    ]
  ],
  [
    5194,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1389,
        0
      ]
    ]
  ],
  [
    5166,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1387,
        0
      ]
    ]
  ],
  [
    1411,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1388,
        0
      ]
    ]
  ],
  [
    6090,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 8192,  input1[N0, N1 - 8192].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 24576; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Concat",
    [
      [
        1411,
        0
      ],
      [
        5166,
        0
      ],
      [
        5194,
        0
      ]
    ]
  ],
  [
    5150,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1394,
        0
      ]
    ]
  ],
  [
    5144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5733,
        0
      ]
    ]
  ],
  [
    5140,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5139,
        0
      ]
    ]
  ],
  [
    5137,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5136,
        0
      ],
      [
        5136,
        0
      ]
    ]
  ],
  [
    5138,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5137,
        0
      ]
    ]
  ],
  [
    5141,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5138,
        0
      ],
      [
        5140,
        0
      ]
    ]
  ],
  [
    5142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5141,
        0
      ]
    ]
  ],
  [
    5145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5142,
        0
      ],
      [
        5144,
        0
      ]
    ]
  ],
  [
    5146,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5145,
        0
      ]
    ]
  ],
  [
    5147,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5146,
        0
      ]
    ]
  ],
  [
    5148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5147,
        0
      ]
    ]
  ],
  [
    5149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5136,
        0
      ],
      [
        5148,
        0
      ]
    ]
  ],
  [
    5151,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5150,
        0
      ],
      [
        5149,
        0
      ]
    ]
  ],
  [
    6091,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        5151,
        0
      ],
      [
        6090,
        0
      ]
    ]
  ],
  [
    6094,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6094,
        0
      ]
    ]
  ],
  [
    5197,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5196,
        0
      ]
    ]
  ],
  [
    5191,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5738,
        0
      ]
    ]
  ],
  [
    5188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        566,
        0
      ]
    ]
  ],
  [
    5162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5735,
        0
      ]
    ]
  ],
  [
    6092,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5153,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6092,
        0
      ]
    ]
  ],
  [
    5163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5153,
        0
      ],
      [
        5162,
        0
      ]
    ]
  ],
  [
    5159,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5734,
        0
      ]
    ]
  ],
  [
    5156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5153,
        0
      ]
    ]
  ],
  [
    5154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5153,
        0
      ]
    ]
  ],
  [
    5155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        5154,
        0
      ]
    ]
  ],
  [
    5157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        5155,
        0
      ],
      [
        5156,
        0
      ]
    ]
  ],
  [
    5160,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5157,
        0
      ],
      [
        5159,
        0
      ]
    ]
  ],
  [
    5164,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        5163,
        0
      ],
      [
        5160,
        0
      ]
    ]
  ],
  [
    5165,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5164,
        0
      ]
    ]
  ],
  [
    5170,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5736,
        0
      ]
    ]
  ],
  [
    6093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6093,
        0
      ]
    ]
  ],
  [
    5171,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5168,
        0
      ],
      [
        5170,
        0
      ]
    ]
  ],
  [
    5172,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5171,
        0
      ]
    ]
  ],
  [
    5179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5737,
        0
      ]
    ]
  ],
  [
    5173,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5168,
        0
      ]
    ]
  ],
  [
    5176,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5173,
        0
      ]
    ]
  ],
  [
    5174,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5173,
        0
      ]
    ]
  ],
  [
    5175,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        5174,
        0
      ]
    ]
  ],
  [
    5177,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        5175,
        0
      ],
      [
        5176,
        0
      ]
    ]
  ],
  [
    5180,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        5177,
        0
      ],
      [
        5179,
        0
      ]
    ]
  ],
  [
    5181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        5172,
        0
      ],
      [
        5180,
        0
      ]
    ]
  ],
  [
    5186,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5181,
        0
      ],
      [
        5165,
        0
      ]
    ]
  ],
  [
    5189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        5186,
        0
      ],
      [
        5188,
        0
      ]
    ]
  ],
  [
    5192,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5189,
        0
      ],
      [
        5191,
        0
      ]
    ]
  ],
  [
    6260,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5192,
        0
      ]
    ]
  ],
  [
    6261,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5192,
        0
      ],
      [
        6260,
        0
      ]
    ]
  ],
  [
    6262,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6261,
        0
      ]
    ]
  ],
  [
    6263,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6261,
        0
      ],
      [
        6262,
        0
      ]
    ]
  ],
  [
    5202,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6263,
        0
      ],
      [
        5197,
        0
      ]
    ]
  ],
  [
    5204,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5202,
        0
      ]
    ]
  ],
  [
    5205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5204,
        0
      ]
    ]
  ],
  [
    5206,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5205,
        0
      ],
      [
        1410,
        0
      ]
    ]
  ],
  [
    5207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5136,
        0
      ],
      [
        5206,
        0
      ]
    ]
  ],
  [
    1408,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1393,
        0
      ]
    ]
  ],
  [
    1409,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1392,
        0
      ]
    ]
  ],
  [
    5224,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1391,
        0
      ]
    ]
  ],
  [
    6095,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5224,
        0
      ],
      [
        1409,
        0
      ]
    ]
  ],
  [
    5221,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1395,
        0
      ]
    ]
  ],
  [
    5215,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5739,
        0
      ]
    ]
  ],
  [
    5211,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5210,
        0
      ]
    ]
  ],
  [
    5208,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5207,
        0
      ],
      [
        5207,
        0
      ]
    ]
  ],
  [
    5209,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5208,
        0
      ]
    ]
  ],
  [
    5212,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5209,
        0
      ],
      [
        5211,
        0
      ]
    ]
  ],
  [
    5213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5212,
        0
      ]
    ]
  ],
  [
    5216,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5213,
        0
      ],
      [
        5215,
        0
      ]
    ]
  ],
  [
    5217,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5216,
        0
      ]
    ]
  ],
  [
    5218,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5217,
        0
      ]
    ]
  ],
  [
    5219,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5218,
        0
      ]
    ]
  ],
  [
    5220,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5207,
        0
      ],
      [
        5219,
        0
      ]
    ]
  ],
  [
    5222,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5221,
        0
      ],
      [
        5220,
        0
      ]
    ]
  ],
  [
    6096,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5222,
        0
      ],
      [
        6095,
        0
      ]
    ]
  ],
  [
    6098,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6096,
        0
      ]
    ]
  ],
  [
    6097,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6096,
        0
      ]
    ]
  ],
  [
    5226,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6097,
        0
      ]
    ]
  ],
  [
    5227,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6097,
        0
      ],
      [
        5226,
        0
      ]
    ]
  ],
  [
    5228,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5227,
        0
      ],
      [
        6098,
        0
      ]
    ]
  ],
  [
    5229,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5228,
        0
      ],
      [
        1408,
        0
      ]
    ]
  ],
  [
    5230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5207,
        0
      ],
      [
        5229,
        0
      ]
    ]
  ],
  [
    5238,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5740,
        0
      ]
    ]
  ],
  [
    5234,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5233,
        0
      ]
    ]
  ],
  [
    5231,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5230,
        0
      ],
      [
        5230,
        0
      ]
    ]
  ],
  [
    5232,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5231,
        0
      ]
    ]
  ],
  [
    5235,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5232,
        0
      ],
      [
        5234,
        0
      ]
    ]
  ],
  [
    5236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5235,
        0
      ]
    ]
  ],
  [
    5239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5236,
        0
      ],
      [
        5238,
        0
      ]
    ]
  ],
  [
    5240,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5239,
        0
      ]
    ]
  ],
  [
    5241,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5240,
        0
      ]
    ]
  ],
  [
    5242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5241,
        0
      ]
    ]
  ],
  [
    5243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5230,
        0
      ],
      [
        5242,
        0
      ]
    ]
  ],
  [
    5245,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5244,
        0
      ],
      [
        5243,
        0
      ]
    ]
  ],
  [
    6100,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 24576]} })  ",
    "Dot",
    [
      [
        5245,
        0
      ],
      [
        6099,
        0
      ]
    ]
  ],
  [
    6103,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6100,
        0
      ]
    ]
  ],
  [
    5334,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6103,
        0
      ]
    ]
  ],
  [
    5335,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5334,
        0
      ]
    ]
  ],
  [
    5466,
    "",
    "Result",
    [
      [
        5335,
        0
      ]
    ]
  ],
  [
    5256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5742,
        0
      ]
    ]
  ],
  [
    6101,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6100,
        0
      ]
    ]
  ],
  [
    5247,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6101,
        0
      ]
    ]
  ],
  [
    5257,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5247,
        0
      ],
      [
        5256,
        0
      ]
    ]
  ],
  [
    5253,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5741,
        0
      ]
    ]
  ],
  [
    5250,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5247,
        0
      ]
    ]
  ],
  [
    5248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 8 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Slice",
    [
      [
        5247,
        0
      ]
    ]
  ],
  [
    5249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Negative",
    [
      [
        5248,
        0
      ]
    ]
  ],
  [
    5251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 64]} })  ",
    "Concat",
    [
      [
        5249,
        0
      ],
      [
        5250,
        0
      ]
    ]
  ],
  [
    5254,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5251,
        0
      ],
      [
        5253,
        0
      ]
    ]
  ],
  [
    5258,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Add",
    [
      [
        5257,
        0
      ],
      [
        5254,
        0
      ]
    ]
  ],
  [
    5259,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5258,
        0
      ]
    ]
  ],
  [
    5465,
    "",
    "Result",
    [
      [
        5259,
        0
      ]
    ]
  ],
  [
    5464,
    "",
    "Result",
    [
      [
        5197,
        0
      ]
    ]
  ],
  [
    5260,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5164,
        0
      ]
    ]
  ],
  [
    5463,
    "",
    "Result",
    [
      [
        5260,
        0
      ]
    ]
  ],
  [
    5462,
    "",
    "Result",
    [
      [
        5103,
        0
      ]
    ]
  ],
  [
    5261,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5070,
        0
      ]
    ]
  ],
  [
    5461,
    "",
    "Result",
    [
      [
        5261,
        0
      ]
    ]
  ],
  [
    5460,
    "",
    "Result",
    [
      [
        5009,
        0
      ]
    ]
  ],
  [
    5262,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4976,
        0
      ]
    ]
  ],
  [
    5459,
    "",
    "Result",
    [
      [
        5262,
        0
      ]
    ]
  ],
  [
    5458,
    "",
    "Result",
    [
      [
        4915,
        0
      ]
    ]
  ],
  [
    5263,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4882,
        0
      ]
    ]
  ],
  [
    5457,
    "",
    "Result",
    [
      [
        5263,
        0
      ]
    ]
  ],
  [
    5456,
    "",
    "Result",
    [
      [
        4821,
        0
      ]
    ]
  ],
  [
    5264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4788,
        0
      ]
    ]
  ],
  [
    5455,
    "",
    "Result",
    [
      [
        5264,
        0
      ]
    ]
  ],
  [
    5454,
    "",
    "Result",
    [
      [
        4727,
        0
      ]
    ]
  ],
  [
    5265,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4694,
        0
      ]
    ]
  ],
  [
    5453,
    "",
    "Result",
    [
      [
        5265,
        0
      ]
    ]
  ],
  [
    5452,
    "",
    "Result",
    [
      [
        4633,
        0
      ]
    ]
  ],
  [
    5266,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4600,
        0
      ]
    ]
  ],
  [
    5451,
    "",
    "Result",
    [
      [
        5266,
        0
      ]
    ]
  ],
  [
    5450,
    "",
    "Result",
    [
      [
        4539,
        0
      ]
    ]
  ],
  [
    5267,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4506,
        0
      ]
    ]
  ],
  [
    5449,
    "",
    "Result",
    [
      [
        5267,
        0
      ]
    ]
  ],
  [
    5448,
    "",
    "Result",
    [
      [
        4445,
        0
      ]
    ]
  ],
  [
    5268,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4412,
        0
      ]
    ]
  ],
  [
    5447,
    "",
    "Result",
    [
      [
        5268,
        0
      ]
    ]
  ],
  [
    5446,
    "",
    "Result",
    [
      [
        4351,
        0
      ]
    ]
  ],
  [
    5269,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4318,
        0
      ]
    ]
  ],
  [
    5445,
    "",
    "Result",
    [
      [
        5269,
        0
      ]
    ]
  ],
  [
    5444,
    "",
    "Result",
    [
      [
        4257,
        0
      ]
    ]
  ],
  [
    5270,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4224,
        0
      ]
    ]
  ],
  [
    5443,
    "",
    "Result",
    [
      [
        5270,
        0
      ]
    ]
  ],
  [
    5442,
    "",
    "Result",
    [
      [
        4163,
        0
      ]
    ]
  ],
  [
    5271,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4130,
        0
      ]
    ]
  ],
  [
    5441,
    "",
    "Result",
    [
      [
        5271,
        0
      ]
    ]
  ],
  [
    5440,
    "",
    "Result",
    [
      [
        4069,
        0
      ]
    ]
  ],
  [
    5272,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        4036,
        0
      ]
    ]
  ],
  [
    5439,
    "",
    "Result",
    [
      [
        5272,
        0
      ]
    ]
  ],
  [
    5438,
    "",
    "Result",
    [
      [
        3975,
        0
      ]
    ]
  ],
  [
    5273,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3942,
        0
      ]
    ]
  ],
  [
    5437,
    "",
    "Result",
    [
      [
        5273,
        0
      ]
    ]
  ],
  [
    5436,
    "",
    "Result",
    [
      [
        3881,
        0
      ]
    ]
  ],
  [
    5274,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3848,
        0
      ]
    ]
  ],
  [
    5435,
    "",
    "Result",
    [
      [
        5274,
        0
      ]
    ]
  ],
  [
    5434,
    "",
    "Result",
    [
      [
        3787,
        0
      ]
    ]
  ],
  [
    5275,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3754,
        0
      ]
    ]
  ],
  [
    5433,
    "",
    "Result",
    [
      [
        5275,
        0
      ]
    ]
  ],
  [
    5432,
    "",
    "Result",
    [
      [
        3693,
        0
      ]
    ]
  ],
  [
    5276,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3660,
        0
      ]
    ]
  ],
  [
    5431,
    "",
    "Result",
    [
      [
        5276,
        0
      ]
    ]
  ],
  [
    5430,
    "",
    "Result",
    [
      [
        3599,
        0
      ]
    ]
  ],
  [
    5277,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3566,
        0
      ]
    ]
  ],
  [
    5429,
    "",
    "Result",
    [
      [
        5277,
        0
      ]
    ]
  ],
  [
    5428,
    "",
    "Result",
    [
      [
        3505,
        0
      ]
    ]
  ],
  [
    5278,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3472,
        0
      ]
    ]
  ],
  [
    5427,
    "",
    "Result",
    [
      [
        5278,
        0
      ]
    ]
  ],
  [
    5426,
    "",
    "Result",
    [
      [
        3411,
        0
      ]
    ]
  ],
  [
    5279,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3378,
        0
      ]
    ]
  ],
  [
    5425,
    "",
    "Result",
    [
      [
        5279,
        0
      ]
    ]
  ],
  [
    5424,
    "",
    "Result",
    [
      [
        3317,
        0
      ]
    ]
  ],
  [
    5280,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3284,
        0
      ]
    ]
  ],
  [
    5423,
    "",
    "Result",
    [
      [
        5280,
        0
      ]
    ]
  ],
  [
    5422,
    "",
    "Result",
    [
      [
        3223,
        0
      ]
    ]
  ],
  [
    5281,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3190,
        0
      ]
    ]
  ],
  [
    5421,
    "",
    "Result",
    [
      [
        5281,
        0
      ]
    ]
  ],
  [
    5420,
    "",
    "Result",
    [
      [
        3129,
        0
      ]
    ]
  ],
  [
    5282,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3096,
        0
      ]
    ]
  ],
  [
    5419,
    "",
    "Result",
    [
      [
        5282,
        0
      ]
    ]
  ],
  [
    5418,
    "",
    "Result",
    [
      [
        3035,
        0
      ]
    ]
  ],
  [
    5283,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        3002,
        0
      ]
    ]
  ],
  [
    5417,
    "",
    "Result",
    [
      [
        5283,
        0
      ]
    ]
  ],
  [
    5416,
    "",
    "Result",
    [
      [
        2941,
        0
      ]
    ]
  ],
  [
    5284,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2908,
        0
      ]
    ]
  ],
  [
    5415,
    "",
    "Result",
    [
      [
        5284,
        0
      ]
    ]
  ],
  [
    5414,
    "",
    "Result",
    [
      [
        2847,
        0
      ]
    ]
  ],
  [
    5285,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2814,
        0
      ]
    ]
  ],
  [
    5413,
    "",
    "Result",
    [
      [
        5285,
        0
      ]
    ]
  ],
  [
    5412,
    "",
    "Result",
    [
      [
        2753,
        0
      ]
    ]
  ],
  [
    5286,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2720,
        0
      ]
    ]
  ],
  [
    5411,
    "",
    "Result",
    [
      [
        5286,
        0
      ]
    ]
  ],
  [
    5410,
    "",
    "Result",
    [
      [
        2659,
        0
      ]
    ]
  ],
  [
    5287,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2626,
        0
      ]
    ]
  ],
  [
    5409,
    "",
    "Result",
    [
      [
        5287,
        0
      ]
    ]
  ],
  [
    5408,
    "",
    "Result",
    [
      [
        2565,
        0
      ]
    ]
  ],
  [
    5288,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2532,
        0
      ]
    ]
  ],
  [
    5407,
    "",
    "Result",
    [
      [
        5288,
        0
      ]
    ]
  ],
  [
    5406,
    "",
    "Result",
    [
      [
        2471,
        0
      ]
    ]
  ],
  [
    5289,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2438,
        0
      ]
    ]
  ],
  [
    5405,
    "",
    "Result",
    [
      [
        5289,
        0
      ]
    ]
  ],
  [
    5404,
    "",
    "Result",
    [
      [
        2377,
        0
      ]
    ]
  ],
  [
    5290,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2344,
        0
      ]
    ]
  ],
  [
    5403,
    "",
    "Result",
    [
      [
        5290,
        0
      ]
    ]
  ],
  [
    5402,
    "",
    "Result",
    [
      [
        2283,
        0
      ]
    ]
  ],
  [
    5291,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2250,
        0
      ]
    ]
  ],
  [
    5401,
    "",
    "Result",
    [
      [
        5291,
        0
      ]
    ]
  ],
  [
    5400,
    "",
    "Result",
    [
      [
        2189,
        0
      ]
    ]
  ],
  [
    5292,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2156,
        0
      ]
    ]
  ],
  [
    5399,
    "",
    "Result",
    [
      [
        5292,
        0
      ]
    ]
  ],
  [
    5398,
    "",
    "Result",
    [
      [
        2095,
        0
      ]
    ]
  ],
  [
    5293,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        2062,
        0
      ]
    ]
  ],
  [
    5397,
    "",
    "Result",
    [
      [
        5293,
        0
      ]
    ]
  ],
  [
    5396,
    "",
    "Result",
    [
      [
        2001,
        0
      ]
    ]
  ],
  [
    5294,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1968,
        0
      ]
    ]
  ],
  [
    5395,
    "",
    "Result",
    [
      [
        5294,
        0
      ]
    ]
  ],
  [
    5394,
    "",
    "Result",
    [
      [
        1907,
        0
      ]
    ]
  ],
  [
    5295,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1874,
        0
      ]
    ]
  ],
  [
    5393,
    "",
    "Result",
    [
      [
        5295,
        0
      ]
    ]
  ],
  [
    5392,
    "",
    "Result",
    [
      [
        1813,
        0
      ]
    ]
  ],
  [
    5296,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1780,
        0
      ]
    ]
  ],
  [
    5391,
    "",
    "Result",
    [
      [
        5296,
        0
      ]
    ]
  ],
  [
    5390,
    "",
    "Result",
    [
      [
        1719,
        0
      ]
    ]
  ],
  [
    5297,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1686,
        0
      ]
    ]
  ],
  [
    5389,
    "",
    "Result",
    [
      [
        5297,
        0
      ]
    ]
  ],
  [
    5388,
    "",
    "Result",
    [
      [
        1625,
        0
      ]
    ]
  ],
  [
    5298,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        1592,
        0
      ]
    ]
  ],
  [
    5387,
    "",
    "Result",
    [
      [
        5298,
        0
      ]
    ]
  ],
  [
    5299,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [32000, 8192]} })  ",
    "Reshape",
    [
      [
        1406,
        0
      ]
    ]
  ],
  [
    5382,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1405,
        0
      ]
    ]
  ],
  [
    5302,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Reshape",
    [
      [
        1399,
        0
      ]
    ]
  ],
  [
    5329,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5745,
        0
      ]
    ]
  ],
  [
    5326,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 8, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        580,
        0
      ]
    ]
  ],
  [
    5303,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5258,
        0
      ]
    ]
  ],
  [
    5308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5743,
        0
      ]
    ]
  ],
  [
    6102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 24576]} })  ",
    "Slice",
    [
      [
        6100,
        0
      ]
    ]
  ],
  [
    5306,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 8, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6102,
        0
      ]
    ]
  ],
  [
    5309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Multiply",
    [
      [
        5306,
        0
      ],
      [
        5308,
        0
      ]
    ]
  ],
  [
    5310,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5309,
        0
      ]
    ]
  ],
  [
    5317,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 8; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5744,
        0
      ]
    ]
  ],
  [
    5311,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} })  ",
    "Reshape",
    [
      [
        5306,
        0
      ]
    ]
  ],
  [
    5314,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5311,
        0
      ]
    ]
  ],
  [
    5312,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 8 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Slice",
    [
      [
        5311,
        0
      ]
    ]
  ],
  [
    5313,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Negative",
    [
      [
        5312,
        0
      ]
    ]
  ],
  [
    5315,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 64]} })  ",
    "Concat",
    [
      [
        5313,
        0
      ],
      [
        5314,
        0
      ]
    ]
  ],
  [
    5318,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Multiply",
    [
      [
        5315,
        0
      ],
      [
        5317,
        0
      ]
    ]
  ],
  [
    5319,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Add",
    [
      [
        5310,
        0
      ],
      [
        5318,
        0
      ]
    ]
  ],
  [
    5324,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5319,
        0
      ],
      [
        5303,
        0
      ]
    ]
  ],
  [
    5327,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Divide",
    [
      [
        5324,
        0
      ],
      [
        5326,
        0
      ]
    ]
  ],
  [
    5330,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "Add",
    [
      [
        5327,
        0
      ],
      [
        5329,
        0
      ]
    ]
  ],
  [
    6264,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5330,
        0
      ]
    ]
  ],
  [
    6265,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5330,
        0
      ],
      [
        6264,
        0
      ]
    ]
  ],
  [
    6266,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6265,
        0
      ]
    ]
  ],
  [
    6267,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6265,
        0
      ],
      [
        6266,
        0
      ]
    ]
  ],
  [
    5340,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6267,
        0
      ],
      [
        5335,
        0
      ]
    ]
  ],
  [
    5342,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 8, 66, 128]} })  ",
    "Reshape",
    [
      [
        5340,
        0
      ]
    ]
  ],
  [
    5343,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 8, N2 / 1 % 128] where N2 in 8192;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5342,
        0
      ]
    ]
  ],
  [
    5344,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 8192]} })  ",
    "Dot",
    [
      [
        5343,
        0
      ],
      [
        5302,
        0
      ]
    ]
  ],
  [
    5345,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5230,
        0
      ],
      [
        5344,
        0
      ]
    ]
  ],
  [
    5300,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Reshape",
    [
      [
        1402,
        0
      ]
    ]
  ],
  [
    5301,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1401,
        0
      ]
    ]
  ],
  [
    5362,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Reshape",
    [
      [
        1400,
        0
      ]
    ]
  ],
  [
    6104,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 28672, input1[N0, N1 - 28672])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 28672]} })  ",
    "Concat",
    [
      [
        5362,
        0
      ],
      [
        5301,
        0
      ]
    ]
  ],
  [
    5359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [8192]} })  ",
    "Broadcast",
    [
      [
        1404,
        0
      ]
    ]
  ],
  [
    5353,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5746,
        0
      ]
    ]
  ],
  [
    5349,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5348,
        0
      ]
    ]
  ],
  [
    5346,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5345,
        0
      ],
      [
        5345,
        0
      ]
    ]
  ],
  [
    5347,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5346,
        0
      ]
    ]
  ],
  [
    5350,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5347,
        0
      ],
      [
        5349,
        0
      ]
    ]
  ],
  [
    5351,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5350,
        0
      ]
    ]
  ],
  [
    5354,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5351,
        0
      ],
      [
        5353,
        0
      ]
    ]
  ],
  [
    5355,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5354,
        0
      ]
    ]
  ],
  [
    5356,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5355,
        0
      ]
    ]
  ],
  [
    5357,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5356,
        0
      ]
    ]
  ],
  [
    5358,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5345,
        0
      ],
      [
        5357,
        0
      ]
    ]
  ],
  [
    5360,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5359,
        0
      ],
      [
        5358,
        0
      ]
    ]
  ],
  [
    6105,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 27648]} })  ",
    "Dot",
    [
      [
        5360,
        0
      ],
      [
        6104,
        0
      ]
    ]
  ],
  [
    6107,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 28672] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6105,
        0
      ]
    ]
  ],
  [
    6106,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 28672; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6105,
        0
      ]
    ]
  ],
  [
    5364,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Sigmoid",
    [
      [
        6106,
        0
      ]
    ]
  ],
  [
    5365,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        6106,
        0
      ],
      [
        5364,
        0
      ]
    ]
  ],
  [
    5366,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} })  ",
    "Multiply",
    [
      [
        5365,
        0
      ],
      [
        6107,
        0
      ]
    ]
  ],
  [
    5367,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 28672]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [28672, 8192]} })  ",
    "Dot",
    [
      [
        5366,
        0
      ],
      [
        5300,
        0
      ]
    ]
  ],
  [
    5368,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Add",
    [
      [
        5345,
        0
      ],
      [
        5367,
        0
      ]
    ]
  ],
  [
    5376,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5747,
        0
      ]
    ]
  ],
  [
    5372,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5371,
        0
      ]
    ]
  ],
  [
    5369,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5368,
        0
      ],
      [
        5368,
        0
      ]
    ]
  ],
  [
    5370,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Sum",
    [
      [
        5369,
        0
      ]
    ]
  ],
  [
    5373,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5370,
        0
      ],
      [
        5372,
        0
      ]
    ]
  ],
  [
    5374,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5373,
        0
      ]
    ]
  ],
  [
    5377,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5374,
        0
      ],
      [
        5376,
        0
      ]
    ]
  ],
  [
    5378,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5377,
        0
      ]
    ]
  ],
  [
    5379,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5378,
        0
      ]
    ]
  ],
  [
    5380,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 8192; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5379,
        0
      ]
    ]
  ],
  [
    5381,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Divide",
    [
      [
        5368,
        0
      ],
      [
        5380,
        0
      ]
    ]
  ],
  [
    5383,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} })  ",
    "Multiply",
    [
      [
        5382,
        0
      ],
      [
        5381,
        0
      ]
    ]
  ],
  [
    5384,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 8192]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [8192, 32000]} })  ",
    "Dot",
    [
      [
        5383,
        0
      ],
      [
        5299,
        0
      ]
    ]
  ],
  [
    5385,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].cast(`float32`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32000]} })  ",
    "Convert",
    [
      [
        5384,
        0
      ]
    ]
  ],
  [
    5386,
    "",
    "Result",
    [
      [
        5385,
        0
      ]
    ]
  ]
]