[
  [
    5016,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Reshape",
    [
      [
        5014,
        0
      ]
    ]
  ],
  [
    5017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 40, N2 / 1 % 128] where N2 in 5120;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5016,
        0
      ]
    ]
  ],
  [
    5018,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Dot",
    [
      [
        5017,
        0
      ],
      [
        1418,
        0
      ]
    ]
  ],
  [
    5019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        4948,
        0
      ],
      [
        5018,
        0
      ]
    ]
  ],
  [
    1416,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Reshape",
    [
      [
        1375,
        0
      ]
    ]
  ],
  [
    1417,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1374,
        0
      ]
    ]
  ],
  [
    5036,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1373,
        0
      ]
    ]
  ],
  [
    6077,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 13824, input1[N0, N1 - 13824])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Concat",
    [
      [
        5036,
        0
      ],
      [
        1417,
        0
      ]
    ]
  ],
  [
    5033,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1377,
        0
      ]
    ]
  ],
  [
    5027,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5725,
        0
      ]
    ]
  ],
  [
    5023,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5022,
        0
      ]
    ]
  ],
  [
    5020,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5019,
        0
      ],
      [
        5019,
        0
      ]
    ]
  ],
  [
    5021,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5020,
        0
      ]
    ]
  ],
  [
    5024,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5021,
        0
      ],
      [
        5023,
        0
      ]
    ]
  ],
  [
    5025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5024,
        0
      ]
    ]
  ],
  [
    5028,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5025,
        0
      ],
      [
        5027,
        0
      ]
    ]
  ],
  [
    5029,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5028,
        0
      ]
    ]
  ],
  [
    5030,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5029,
        0
      ]
    ]
  ],
  [
    5031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5030,
        0
      ]
    ]
  ],
  [
    5032,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5019,
        0
      ],
      [
        5031,
        0
      ]
    ]
  ],
  [
    5034,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5033,
        0
      ],
      [
        5032,
        0
      ]
    ]
  ],
  [
    6078,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 27648]} })  ",
    "Dot",
    [
      [
        5034,
        0
      ],
      [
        6077,
        0
      ]
    ]
  ],
  [
    6080,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 13824] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6078,
        0
      ]
    ]
  ],
  [
    6079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6078,
        0
      ]
    ]
  ],
  [
    5038,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Sigmoid",
    [
      [
        6079,
        0
      ]
    ]
  ],
  [
    5039,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        6079,
        0
      ],
      [
        5038,
        0
      ]
    ]
  ],
  [
    5040,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        5039,
        0
      ],
      [
        6080,
        0
      ]
    ]
  ],
  [
    5041,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Dot",
    [
      [
        5040,
        0
      ],
      [
        1416,
        0
      ]
    ]
  ],
  [
    5042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5019,
        0
      ],
      [
        5041,
        0
      ]
    ]
  ],
  [
    1414,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1381,
        0
      ]
    ]
  ],
  [
    5100,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1380,
        0
      ]
    ]
  ],
  [
    5072,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1378,
        0
      ]
    ]
  ],
  [
    1415,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1379,
        0
      ]
    ]
  ],
  [
    6081,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 5120,  input1[N0, N1 - 5120].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 15360; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Concat",
    [
      [
        1415,
        0
      ],
      [
        5072,
        0
      ],
      [
        5100,
        0
      ]
    ]
  ],
  [
    5056,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1385,
        0
      ]
    ]
  ],
  [
    5050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5726,
        0
      ]
    ]
  ],
  [
    5046,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5045,
        0
      ]
    ]
  ],
  [
    5043,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5042,
        0
      ],
      [
        5042,
        0
      ]
    ]
  ],
  [
    5044,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5043,
        0
      ]
    ]
  ],
  [
    5047,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5044,
        0
      ],
      [
        5046,
        0
      ]
    ]
  ],
  [
    5048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5047,
        0
      ]
    ]
  ],
  [
    5051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5048,
        0
      ],
      [
        5050,
        0
      ]
    ]
  ],
  [
    5052,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5051,
        0
      ]
    ]
  ],
  [
    5053,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5052,
        0
      ]
    ]
  ],
  [
    5054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5053,
        0
      ]
    ]
  ],
  [
    5055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5042,
        0
      ],
      [
        5054,
        0
      ]
    ]
  ],
  [
    5057,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5056,
        0
      ],
      [
        5055,
        0
      ]
    ]
  ],
  [
    6082,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 15360]} })  ",
    "Dot",
    [
      [
        5057,
        0
      ],
      [
        6081,
        0
      ]
    ]
  ],
  [
    6085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6085,
        0
      ]
    ]
  ],
  [
    5103,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5102,
        0
      ]
    ]
  ],
  [
    5097,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5731,
        0
      ]
    ]
  ],
  [
    5094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 40, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        552,
        0
      ]
    ]
  ],
  [
    5068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5728,
        0
      ]
    ]
  ],
  [
    6083,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5059,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6083,
        0
      ]
    ]
  ],
  [
    5069,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5059,
        0
      ],
      [
        5068,
        0
      ]
    ]
  ],
  [
    5065,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5727,
        0
      ]
    ]
  ],
  [
    5062,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 40 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Slice",
    [
      [
        5059,
        0
      ]
    ]
  ],
  [
    5060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 40 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Slice",
    [
      [
        5059,
        0
      ]
    ]
  ],
  [
    5061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} })  ",
    "Negative",
    [
      [
        5060,
        0
      ]
    ]
  ],
  [
    5063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} })  ",
    "Concat",
    [
      [
        5061,
        0
      ],
      [
        5062,
        0
      ]
    ]
  ],
  [
    5066,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5063,
        0
      ],
      [
        5065,
        0
      ]
    ]
  ],
  [
    5070,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Add",
    [
      [
        5069,
        0
      ],
      [
        5066,
        0
      ]
    ]
  ],
  [
    5071,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5070,
        0
      ]
    ]
  ],
  [
    5076,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5729,
        0
      ]
    ]
  ],
  [
    6084,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 5120] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6082,
        0
      ]
    ]
  ],
  [
    5074,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6084,
        0
      ]
    ]
  ],
  [
    5077,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5074,
        0
      ],
      [
        5076,
        0
      ]
    ]
  ],
  [
    5078,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5077,
        0
      ]
    ]
  ],
  [
    5085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5730,
        0
      ]
    ]
  ],
  [
    5079,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5074,
        0
      ]
    ]
  ],
  [
    5082,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 40 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Slice",
    [
      [
        5079,
        0
      ]
    ]
  ],
  [
    5080,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 40 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Slice",
    [
      [
        5079,
        0
      ]
    ]
  ],
  [
    5081,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} })  ",
    "Negative",
    [
      [
        5080,
        0
      ]
    ]
  ],
  [
    5083,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} })  ",
    "Concat",
    [
      [
        5081,
        0
      ],
      [
        5082,
        0
      ]
    ]
  ],
  [
    5086,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Multiply",
    [
      [
        5083,
        0
      ],
      [
        5085,
        0
      ]
    ]
  ],
  [
    5087,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Add",
    [
      [
        5078,
        0
      ],
      [
        5086,
        0
      ]
    ]
  ],
  [
    5092,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5087,
        0
      ],
      [
        5071,
        0
      ]
    ]
  ],
  [
    5095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "Divide",
    [
      [
        5092,
        0
      ],
      [
        5094,
        0
      ]
    ]
  ],
  [
    5098,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "Add",
    [
      [
        5095,
        0
      ],
      [
        5097,
        0
      ]
    ]
  ],
  [
    6256,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5098,
        0
      ]
    ]
  ],
  [
    6257,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5098,
        0
      ],
      [
        6256,
        0
      ]
    ]
  ],
  [
    6258,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6257,
        0
      ]
    ]
  ],
  [
    6259,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6257,
        0
      ],
      [
        6258,
        0
      ]
    ]
  ],
  [
    5108,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6259,
        0
      ],
      [
        5103,
        0
      ]
    ]
  ],
  [
    5110,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Reshape",
    [
      [
        5108,
        0
      ]
    ]
  ],
  [
    5111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 40, N2 / 1 % 128] where N2 in 5120;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5110,
        0
      ]
    ]
  ],
  [
    5112,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Dot",
    [
      [
        5111,
        0
      ],
      [
        1414,
        0
      ]
    ]
  ],
  [
    5113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5042,
        0
      ],
      [
        5112,
        0
      ]
    ]
  ],
  [
    1412,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Reshape",
    [
      [
        1384,
        0
      ]
    ]
  ],
  [
    1413,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1383,
        0
      ]
    ]
  ],
  [
    5130,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1382,
        0
      ]
    ]
  ],
  [
    6086,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 13824, input1[N0, N1 - 13824])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Concat",
    [
      [
        5130,
        0
      ],
      [
        1413,
        0
      ]
    ]
  ],
  [
    5127,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1386,
        0
      ]
    ]
  ],
  [
    5121,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5732,
        0
      ]
    ]
  ],
  [
    5117,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5116,
        0
      ]
    ]
  ],
  [
    5114,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5113,
        0
      ],
      [
        5113,
        0
      ]
    ]
  ],
  [
    5115,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5114,
        0
      ]
    ]
  ],
  [
    5118,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5115,
        0
      ],
      [
        5117,
        0
      ]
    ]
  ],
  [
    5119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5118,
        0
      ]
    ]
  ],
  [
    5122,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5119,
        0
      ],
      [
        5121,
        0
      ]
    ]
  ],
  [
    5123,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5122,
        0
      ]
    ]
  ],
  [
    5124,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5123,
        0
      ]
    ]
  ],
  [
    5125,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5124,
        0
      ]
    ]
  ],
  [
    5126,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5113,
        0
      ],
      [
        5125,
        0
      ]
    ]
  ],
  [
    5128,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5127,
        0
      ],
      [
        5126,
        0
      ]
    ]
  ],
  [
    6087,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 27648]} })  ",
    "Dot",
    [
      [
        5128,
        0
      ],
      [
        6086,
        0
      ]
    ]
  ],
  [
    6089,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 13824] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6087,
        0
      ]
    ]
  ],
  [
    6088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6087,
        0
      ]
    ]
  ],
  [
    5132,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Sigmoid",
    [
      [
        6088,
        0
      ]
    ]
  ],
  [
    5133,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        6088,
        0
      ],
      [
        5132,
        0
      ]
    ]
  ],
  [
    5134,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        5133,
        0
      ],
      [
        6089,
        0
      ]
    ]
  ],
  [
    5135,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Dot",
    [
      [
        5134,
        0
      ],
      [
        1412,
        0
      ]
    ]
  ],
  [
    5136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5113,
        0
      ],
      [
        5135,
        0
      ]
    ]
  ],
  [
    1410,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1390,
        0
      ]
    ]
  ],
  [
    5194,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1389,
        0
      ]
    ]
  ],
  [
    5166,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1387,
        0
      ]
    ]
  ],
  [
    1411,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1388,
        0
      ]
    ]
  ],
  [
    6090,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 5120,  input1[N0, N1 - 5120].when(N1 < 10240, input2[N0, N1 - 10240]) )  where N1 in 15360; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Concat",
    [
      [
        1411,
        0
      ],
      [
        5166,
        0
      ],
      [
        5194,
        0
      ]
    ]
  ],
  [
    5150,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1394,
        0
      ]
    ]
  ],
  [
    5144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5733,
        0
      ]
    ]
  ],
  [
    5140,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5139,
        0
      ]
    ]
  ],
  [
    5137,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5136,
        0
      ],
      [
        5136,
        0
      ]
    ]
  ],
  [
    5138,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5137,
        0
      ]
    ]
  ],
  [
    5141,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5138,
        0
      ],
      [
        5140,
        0
      ]
    ]
  ],
  [
    5142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5141,
        0
      ]
    ]
  ],
  [
    5145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5142,
        0
      ],
      [
        5144,
        0
      ]
    ]
  ],
  [
    5146,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5145,
        0
      ]
    ]
  ],
  [
    5147,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5146,
        0
      ]
    ]
  ],
  [
    5148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5147,
        0
      ]
    ]
  ],
  [
    5149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5136,
        0
      ],
      [
        5148,
        0
      ]
    ]
  ],
  [
    5151,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5150,
        0
      ],
      [
        5149,
        0
      ]
    ]
  ],
  [
    6091,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 15360]} })  ",
    "Dot",
    [
      [
        5151,
        0
      ],
      [
        6090,
        0
      ]
    ]
  ],
  [
    6094,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6094,
        0
      ]
    ]
  ],
  [
    5197,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5196,
        0
      ]
    ]
  ],
  [
    5191,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5738,
        0
      ]
    ]
  ],
  [
    5188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 40, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        566,
        0
      ]
    ]
  ],
  [
    5162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5735,
        0
      ]
    ]
  ],
  [
    6092,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5153,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6092,
        0
      ]
    ]
  ],
  [
    5163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5153,
        0
      ],
      [
        5162,
        0
      ]
    ]
  ],
  [
    5159,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5734,
        0
      ]
    ]
  ],
  [
    5156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 40 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Slice",
    [
      [
        5153,
        0
      ]
    ]
  ],
  [
    5154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 40 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Slice",
    [
      [
        5153,
        0
      ]
    ]
  ],
  [
    5155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} })  ",
    "Negative",
    [
      [
        5154,
        0
      ]
    ]
  ],
  [
    5157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} })  ",
    "Concat",
    [
      [
        5155,
        0
      ],
      [
        5156,
        0
      ]
    ]
  ],
  [
    5160,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5157,
        0
      ],
      [
        5159,
        0
      ]
    ]
  ],
  [
    5164,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Add",
    [
      [
        5163,
        0
      ],
      [
        5160,
        0
      ]
    ]
  ],
  [
    5165,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5164,
        0
      ]
    ]
  ],
  [
    5170,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5736,
        0
      ]
    ]
  ],
  [
    6093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 5120] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6091,
        0
      ]
    ]
  ],
  [
    5168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6093,
        0
      ]
    ]
  ],
  [
    5171,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5168,
        0
      ],
      [
        5170,
        0
      ]
    ]
  ],
  [
    5172,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5171,
        0
      ]
    ]
  ],
  [
    5179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5737,
        0
      ]
    ]
  ],
  [
    5173,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5168,
        0
      ]
    ]
  ],
  [
    5176,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 40 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Slice",
    [
      [
        5173,
        0
      ]
    ]
  ],
  [
    5174,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 40 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Slice",
    [
      [
        5173,
        0
      ]
    ]
  ],
  [
    5175,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} })  ",
    "Negative",
    [
      [
        5174,
        0
      ]
    ]
  ],
  [
    5177,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} })  ",
    "Concat",
    [
      [
        5175,
        0
      ],
      [
        5176,
        0
      ]
    ]
  ],
  [
    5180,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Multiply",
    [
      [
        5177,
        0
      ],
      [
        5179,
        0
      ]
    ]
  ],
  [
    5181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Add",
    [
      [
        5172,
        0
      ],
      [
        5180,
        0
      ]
    ]
  ],
  [
    5186,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5181,
        0
      ],
      [
        5165,
        0
      ]
    ]
  ],
  [
    5189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "Divide",
    [
      [
        5186,
        0
      ],
      [
        5188,
        0
      ]
    ]
  ],
  [
    5192,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "Add",
    [
      [
        5189,
        0
      ],
      [
        5191,
        0
      ]
    ]
  ],
  [
    6260,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5192,
        0
      ]
    ]
  ],
  [
    6261,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5192,
        0
      ],
      [
        6260,
        0
      ]
    ]
  ],
  [
    6262,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6261,
        0
      ]
    ]
  ],
  [
    6263,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6261,
        0
      ],
      [
        6262,
        0
      ]
    ]
  ],
  [
    5202,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6263,
        0
      ],
      [
        5197,
        0
      ]
    ]
  ],
  [
    5204,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Reshape",
    [
      [
        5202,
        0
      ]
    ]
  ],
  [
    5205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 40, N2 / 1 % 128] where N2 in 5120;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5204,
        0
      ]
    ]
  ],
  [
    5206,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Dot",
    [
      [
        5205,
        0
      ],
      [
        1410,
        0
      ]
    ]
  ],
  [
    5207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5136,
        0
      ],
      [
        5206,
        0
      ]
    ]
  ],
  [
    1408,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Reshape",
    [
      [
        1393,
        0
      ]
    ]
  ],
  [
    1409,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1392,
        0
      ]
    ]
  ],
  [
    5224,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1391,
        0
      ]
    ]
  ],
  [
    6095,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 13824, input1[N0, N1 - 13824])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Concat",
    [
      [
        5224,
        0
      ],
      [
        1409,
        0
      ]
    ]
  ],
  [
    5221,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1395,
        0
      ]
    ]
  ],
  [
    5215,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5739,
        0
      ]
    ]
  ],
  [
    5211,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5210,
        0
      ]
    ]
  ],
  [
    5208,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5207,
        0
      ],
      [
        5207,
        0
      ]
    ]
  ],
  [
    5209,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5208,
        0
      ]
    ]
  ],
  [
    5212,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5209,
        0
      ],
      [
        5211,
        0
      ]
    ]
  ],
  [
    5213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5212,
        0
      ]
    ]
  ],
  [
    5216,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5213,
        0
      ],
      [
        5215,
        0
      ]
    ]
  ],
  [
    5217,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5216,
        0
      ]
    ]
  ],
  [
    5218,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5217,
        0
      ]
    ]
  ],
  [
    5219,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5218,
        0
      ]
    ]
  ],
  [
    5220,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5207,
        0
      ],
      [
        5219,
        0
      ]
    ]
  ],
  [
    5222,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5221,
        0
      ],
      [
        5220,
        0
      ]
    ]
  ],
  [
    6096,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 27648]} })  ",
    "Dot",
    [
      [
        5222,
        0
      ],
      [
        6095,
        0
      ]
    ]
  ],
  [
    6098,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 13824] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6096,
        0
      ]
    ]
  ],
  [
    6097,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6096,
        0
      ]
    ]
  ],
  [
    5226,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Sigmoid",
    [
      [
        6097,
        0
      ]
    ]
  ],
  [
    5227,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        6097,
        0
      ],
      [
        5226,
        0
      ]
    ]
  ],
  [
    5228,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        5227,
        0
      ],
      [
        6098,
        0
      ]
    ]
  ],
  [
    5229,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Dot",
    [
      [
        5228,
        0
      ],
      [
        1408,
        0
      ]
    ]
  ],
  [
    5230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5207,
        0
      ],
      [
        5229,
        0
      ]
    ]
  ],
  [
    5238,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5740,
        0
      ]
    ]
  ],
  [
    5234,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5233,
        0
      ]
    ]
  ],
  [
    5231,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5230,
        0
      ],
      [
        5230,
        0
      ]
    ]
  ],
  [
    5232,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5231,
        0
      ]
    ]
  ],
  [
    5235,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5232,
        0
      ],
      [
        5234,
        0
      ]
    ]
  ],
  [
    5236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5235,
        0
      ]
    ]
  ],
  [
    5239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5236,
        0
      ],
      [
        5238,
        0
      ]
    ]
  ],
  [
    5240,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5239,
        0
      ]
    ]
  ],
  [
    5241,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5240,
        0
      ]
    ]
  ],
  [
    5242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5241,
        0
      ]
    ]
  ],
  [
    5243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5230,
        0
      ],
      [
        5242,
        0
      ]
    ]
  ],
  [
    5245,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5244,
        0
      ],
      [
        5243,
        0
      ]
    ]
  ],
  [
    6100,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 15360]} })  ",
    "Dot",
    [
      [
        5245,
        0
      ],
      [
        6099,
        0
      ]
    ]
  ],
  [
    6103,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 10240] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6100,
        0
      ]
    ]
  ],
  [
    5334,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6103,
        0
      ]
    ]
  ],
  [
    5335,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5334,
        0
      ]
    ]
  ],
  [
    5466,
    "",
    "Result",
    [
      [
        5335,
        0
      ]
    ]
  ],
  [
    5256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5742,
        0
      ]
    ]
  ],
  [
    6101,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6100,
        0
      ]
    ]
  ],
  [
    5247,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6101,
        0
      ]
    ]
  ],
  [
    5257,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5247,
        0
      ],
      [
        5256,
        0
      ]
    ]
  ],
  [
    5253,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5741,
        0
      ]
    ]
  ],
  [
    5250,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 40 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Slice",
    [
      [
        5247,
        0
      ]
    ]
  ],
  [
    5248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 40 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Slice",
    [
      [
        5247,
        0
      ]
    ]
  ],
  [
    5249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} })  ",
    "Negative",
    [
      [
        5248,
        0
      ]
    ]
  ],
  [
    5251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 64]} })  ",
    "Concat",
    [
      [
        5249,
        0
      ],
      [
        5250,
        0
      ]
    ]
  ],
  [
    5254,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5251,
        0
      ],
      [
        5253,
        0
      ]
    ]
  ],
  [
    5258,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Add",
    [
      [
        5257,
        0
      ],
      [
        5254,
        0
      ]
    ]
  ],
  [
    5259,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5258,
        0
      ]
    ]
  ],
  [
    5465,
    "",
    "Result",
    [
      [
        5259,
        0
      ]
    ]
  ],
  [
    5464,
    "",
    "Result",
    [
      [
        5197,
        0
      ]
    ]
  ],
  [
    5260,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5164,
        0
      ]
    ]
  ],
  [
    5463,
    "",
    "Result",
    [
      [
        5260,
        0
      ]
    ]
  ],
  [
    5462,
    "",
    "Result",
    [
      [
        5103,
        0
      ]
    ]
  ],
  [
    5261,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5070,
        0
      ]
    ]
  ],
  [
    5461,
    "",
    "Result",
    [
      [
        5261,
        0
      ]
    ]
  ],
  [
    5460,
    "",
    "Result",
    [
      [
        5009,
        0
      ]
    ]
  ],
  [
    5262,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4976,
        0
      ]
    ]
  ],
  [
    5459,
    "",
    "Result",
    [
      [
        5262,
        0
      ]
    ]
  ],
  [
    5458,
    "",
    "Result",
    [
      [
        4915,
        0
      ]
    ]
  ],
  [
    5263,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4882,
        0
      ]
    ]
  ],
  [
    5457,
    "",
    "Result",
    [
      [
        5263,
        0
      ]
    ]
  ],
  [
    5456,
    "",
    "Result",
    [
      [
        4821,
        0
      ]
    ]
  ],
  [
    5264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4788,
        0
      ]
    ]
  ],
  [
    5455,
    "",
    "Result",
    [
      [
        5264,
        0
      ]
    ]
  ],
  [
    5454,
    "",
    "Result",
    [
      [
        4727,
        0
      ]
    ]
  ],
  [
    5265,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4694,
        0
      ]
    ]
  ],
  [
    5453,
    "",
    "Result",
    [
      [
        5265,
        0
      ]
    ]
  ],
  [
    5452,
    "",
    "Result",
    [
      [
        4633,
        0
      ]
    ]
  ],
  [
    5266,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4600,
        0
      ]
    ]
  ],
  [
    5451,
    "",
    "Result",
    [
      [
        5266,
        0
      ]
    ]
  ],
  [
    5450,
    "",
    "Result",
    [
      [
        4539,
        0
      ]
    ]
  ],
  [
    5267,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4506,
        0
      ]
    ]
  ],
  [
    5449,
    "",
    "Result",
    [
      [
        5267,
        0
      ]
    ]
  ],
  [
    5448,
    "",
    "Result",
    [
      [
        4445,
        0
      ]
    ]
  ],
  [
    5268,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4412,
        0
      ]
    ]
  ],
  [
    5447,
    "",
    "Result",
    [
      [
        5268,
        0
      ]
    ]
  ],
  [
    5446,
    "",
    "Result",
    [
      [
        4351,
        0
      ]
    ]
  ],
  [
    5269,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4318,
        0
      ]
    ]
  ],
  [
    5445,
    "",
    "Result",
    [
      [
        5269,
        0
      ]
    ]
  ],
  [
    5444,
    "",
    "Result",
    [
      [
        4257,
        0
      ]
    ]
  ],
  [
    5270,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4224,
        0
      ]
    ]
  ],
  [
    5443,
    "",
    "Result",
    [
      [
        5270,
        0
      ]
    ]
  ],
  [
    5442,
    "",
    "Result",
    [
      [
        4163,
        0
      ]
    ]
  ],
  [
    5271,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4130,
        0
      ]
    ]
  ],
  [
    5441,
    "",
    "Result",
    [
      [
        5271,
        0
      ]
    ]
  ],
  [
    5440,
    "",
    "Result",
    [
      [
        4069,
        0
      ]
    ]
  ],
  [
    5272,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        4036,
        0
      ]
    ]
  ],
  [
    5439,
    "",
    "Result",
    [
      [
        5272,
        0
      ]
    ]
  ],
  [
    5438,
    "",
    "Result",
    [
      [
        3975,
        0
      ]
    ]
  ],
  [
    5273,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3942,
        0
      ]
    ]
  ],
  [
    5437,
    "",
    "Result",
    [
      [
        5273,
        0
      ]
    ]
  ],
  [
    5436,
    "",
    "Result",
    [
      [
        3881,
        0
      ]
    ]
  ],
  [
    5274,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3848,
        0
      ]
    ]
  ],
  [
    5435,
    "",
    "Result",
    [
      [
        5274,
        0
      ]
    ]
  ],
  [
    5434,
    "",
    "Result",
    [
      [
        3787,
        0
      ]
    ]
  ],
  [
    5275,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3754,
        0
      ]
    ]
  ],
  [
    5433,
    "",
    "Result",
    [
      [
        5275,
        0
      ]
    ]
  ],
  [
    5432,
    "",
    "Result",
    [
      [
        3693,
        0
      ]
    ]
  ],
  [
    5276,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3660,
        0
      ]
    ]
  ],
  [
    5431,
    "",
    "Result",
    [
      [
        5276,
        0
      ]
    ]
  ],
  [
    5430,
    "",
    "Result",
    [
      [
        3599,
        0
      ]
    ]
  ],
  [
    5277,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3566,
        0
      ]
    ]
  ],
  [
    5429,
    "",
    "Result",
    [
      [
        5277,
        0
      ]
    ]
  ],
  [
    5428,
    "",
    "Result",
    [
      [
        3505,
        0
      ]
    ]
  ],
  [
    5278,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3472,
        0
      ]
    ]
  ],
  [
    5427,
    "",
    "Result",
    [
      [
        5278,
        0
      ]
    ]
  ],
  [
    5426,
    "",
    "Result",
    [
      [
        3411,
        0
      ]
    ]
  ],
  [
    5279,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3378,
        0
      ]
    ]
  ],
  [
    5425,
    "",
    "Result",
    [
      [
        5279,
        0
      ]
    ]
  ],
  [
    5424,
    "",
    "Result",
    [
      [
        3317,
        0
      ]
    ]
  ],
  [
    5280,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3284,
        0
      ]
    ]
  ],
  [
    5423,
    "",
    "Result",
    [
      [
        5280,
        0
      ]
    ]
  ],
  [
    5422,
    "",
    "Result",
    [
      [
        3223,
        0
      ]
    ]
  ],
  [
    5281,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3190,
        0
      ]
    ]
  ],
  [
    5421,
    "",
    "Result",
    [
      [
        5281,
        0
      ]
    ]
  ],
  [
    5420,
    "",
    "Result",
    [
      [
        3129,
        0
      ]
    ]
  ],
  [
    5282,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3096,
        0
      ]
    ]
  ],
  [
    5419,
    "",
    "Result",
    [
      [
        5282,
        0
      ]
    ]
  ],
  [
    5418,
    "",
    "Result",
    [
      [
        3035,
        0
      ]
    ]
  ],
  [
    5283,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        3002,
        0
      ]
    ]
  ],
  [
    5417,
    "",
    "Result",
    [
      [
        5283,
        0
      ]
    ]
  ],
  [
    5416,
    "",
    "Result",
    [
      [
        2941,
        0
      ]
    ]
  ],
  [
    5284,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2908,
        0
      ]
    ]
  ],
  [
    5415,
    "",
    "Result",
    [
      [
        5284,
        0
      ]
    ]
  ],
  [
    5414,
    "",
    "Result",
    [
      [
        2847,
        0
      ]
    ]
  ],
  [
    5285,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2814,
        0
      ]
    ]
  ],
  [
    5413,
    "",
    "Result",
    [
      [
        5285,
        0
      ]
    ]
  ],
  [
    5412,
    "",
    "Result",
    [
      [
        2753,
        0
      ]
    ]
  ],
  [
    5286,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2720,
        0
      ]
    ]
  ],
  [
    5411,
    "",
    "Result",
    [
      [
        5286,
        0
      ]
    ]
  ],
  [
    5410,
    "",
    "Result",
    [
      [
        2659,
        0
      ]
    ]
  ],
  [
    5287,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2626,
        0
      ]
    ]
  ],
  [
    5409,
    "",
    "Result",
    [
      [
        5287,
        0
      ]
    ]
  ],
  [
    5408,
    "",
    "Result",
    [
      [
        2565,
        0
      ]
    ]
  ],
  [
    5288,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2532,
        0
      ]
    ]
  ],
  [
    5407,
    "",
    "Result",
    [
      [
        5288,
        0
      ]
    ]
  ],
  [
    5406,
    "",
    "Result",
    [
      [
        2471,
        0
      ]
    ]
  ],
  [
    5289,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2438,
        0
      ]
    ]
  ],
  [
    5405,
    "",
    "Result",
    [
      [
        5289,
        0
      ]
    ]
  ],
  [
    5404,
    "",
    "Result",
    [
      [
        2377,
        0
      ]
    ]
  ],
  [
    5290,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2344,
        0
      ]
    ]
  ],
  [
    5403,
    "",
    "Result",
    [
      [
        5290,
        0
      ]
    ]
  ],
  [
    5402,
    "",
    "Result",
    [
      [
        2283,
        0
      ]
    ]
  ],
  [
    5291,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2250,
        0
      ]
    ]
  ],
  [
    5401,
    "",
    "Result",
    [
      [
        5291,
        0
      ]
    ]
  ],
  [
    5400,
    "",
    "Result",
    [
      [
        2189,
        0
      ]
    ]
  ],
  [
    5292,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2156,
        0
      ]
    ]
  ],
  [
    5399,
    "",
    "Result",
    [
      [
        5292,
        0
      ]
    ]
  ],
  [
    5398,
    "",
    "Result",
    [
      [
        2095,
        0
      ]
    ]
  ],
  [
    5293,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        2062,
        0
      ]
    ]
  ],
  [
    5397,
    "",
    "Result",
    [
      [
        5293,
        0
      ]
    ]
  ],
  [
    5396,
    "",
    "Result",
    [
      [
        2001,
        0
      ]
    ]
  ],
  [
    5294,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        1968,
        0
      ]
    ]
  ],
  [
    5395,
    "",
    "Result",
    [
      [
        5294,
        0
      ]
    ]
  ],
  [
    5394,
    "",
    "Result",
    [
      [
        1907,
        0
      ]
    ]
  ],
  [
    5295,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        1874,
        0
      ]
    ]
  ],
  [
    5393,
    "",
    "Result",
    [
      [
        5295,
        0
      ]
    ]
  ],
  [
    5392,
    "",
    "Result",
    [
      [
        1813,
        0
      ]
    ]
  ],
  [
    5296,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        1780,
        0
      ]
    ]
  ],
  [
    5391,
    "",
    "Result",
    [
      [
        5296,
        0
      ]
    ]
  ],
  [
    5390,
    "",
    "Result",
    [
      [
        1719,
        0
      ]
    ]
  ],
  [
    5297,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        1686,
        0
      ]
    ]
  ],
  [
    5389,
    "",
    "Result",
    [
      [
        5297,
        0
      ]
    ]
  ],
  [
    5388,
    "",
    "Result",
    [
      [
        1625,
        0
      ]
    ]
  ],
  [
    5298,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        1592,
        0
      ]
    ]
  ],
  [
    5387,
    "",
    "Result",
    [
      [
        5298,
        0
      ]
    ]
  ],
  [
    5299,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [32000, 5120]} })  ",
    "Reshape",
    [
      [
        1406,
        0
      ]
    ]
  ],
  [
    5382,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1405,
        0
      ]
    ]
  ],
  [
    5302,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Reshape",
    [
      [
        1399,
        0
      ]
    ]
  ],
  [
    5329,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        5745,
        0
      ]
    ]
  ],
  [
    5326,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 40, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        580,
        0
      ]
    ]
  ],
  [
    5303,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5258,
        0
      ]
    ]
  ],
  [
    5308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5743,
        0
      ]
    ]
  ],
  [
    6102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 5120] where N0 in 99 , N1 in 66 , N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 15360]} })  ",
    "Slice",
    [
      [
        6100,
        0
      ]
    ]
  ],
  [
    5306,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 40, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        6102,
        0
      ]
    ]
  ],
  [
    5309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Multiply",
    [
      [
        5306,
        0
      ],
      [
        5308,
        0
      ]
    ]
  ],
  [
    5310,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5309,
        0
      ]
    ]
  ],
  [
    5317,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 40; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        5744,
        0
      ]
    ]
  ],
  [
    5311,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} })  ",
    "Reshape",
    [
      [
        5306,
        0
      ]
    ]
  ],
  [
    5314,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 40 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Slice",
    [
      [
        5311,
        0
      ]
    ]
  ],
  [
    5312,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 40 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Slice",
    [
      [
        5311,
        0
      ]
    ]
  ],
  [
    5313,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} })  ",
    "Negative",
    [
      [
        5312,
        0
      ]
    ]
  ],
  [
    5315,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 64]} })  ",
    "Concat",
    [
      [
        5313,
        0
      ],
      [
        5314,
        0
      ]
    ]
  ],
  [
    5318,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Multiply",
    [
      [
        5315,
        0
      ],
      [
        5317,
        0
      ]
    ]
  ],
  [
    5319,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Add",
    [
      [
        5310,
        0
      ],
      [
        5318,
        0
      ]
    ]
  ],
  [
    5324,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        5319,
        0
      ],
      [
        5303,
        0
      ]
    ]
  ],
  [
    5327,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "Divide",
    [
      [
        5324,
        0
      ],
      [
        5326,
        0
      ]
    ]
  ],
  [
    5330,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "Add",
    [
      [
        5327,
        0
      ],
      [
        5329,
        0
      ]
    ]
  ],
  [
    6264,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5330,
        0
      ]
    ]
  ],
  [
    6265,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5330,
        0
      ],
      [
        6264,
        0
      ]
    ]
  ],
  [
    6266,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6265,
        0
      ]
    ]
  ],
  [
    6267,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        6265,
        0
      ],
      [
        6266,
        0
      ]
    ]
  ],
  [
    5340,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        6267,
        0
      ],
      [
        5335,
        0
      ]
    ]
  ],
  [
    5342,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 40, 66, 128]} })  ",
    "Reshape",
    [
      [
        5340,
        0
      ]
    ]
  ],
  [
    5343,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 40, N2 / 1 % 128] where N2 in 5120;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 40, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5342,
        0
      ]
    ]
  ],
  [
    5344,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 5120]} })  ",
    "Dot",
    [
      [
        5343,
        0
      ],
      [
        5302,
        0
      ]
    ]
  ],
  [
    5345,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5230,
        0
      ],
      [
        5344,
        0
      ]
    ]
  ],
  [
    5300,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Reshape",
    [
      [
        1402,
        0
      ]
    ]
  ],
  [
    5301,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1401,
        0
      ]
    ]
  ],
  [
    5362,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Reshape",
    [
      [
        1400,
        0
      ]
    ]
  ],
  [
    6104,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 13824, input1[N0, N1 - 13824])  where N1 in 27648; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 13824]} })  ",
    "Concat",
    [
      [
        5362,
        0
      ],
      [
        5301,
        0
      ]
    ]
  ],
  [
    5359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [5120]} })  ",
    "Broadcast",
    [
      [
        1404,
        0
      ]
    ]
  ],
  [
    5353,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5746,
        0
      ]
    ]
  ],
  [
    5349,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5348,
        0
      ]
    ]
  ],
  [
    5346,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5345,
        0
      ],
      [
        5345,
        0
      ]
    ]
  ],
  [
    5347,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5346,
        0
      ]
    ]
  ],
  [
    5350,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5347,
        0
      ],
      [
        5349,
        0
      ]
    ]
  ],
  [
    5351,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5350,
        0
      ]
    ]
  ],
  [
    5354,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5351,
        0
      ],
      [
        5353,
        0
      ]
    ]
  ],
  [
    5355,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5354,
        0
      ]
    ]
  ],
  [
    5356,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5355,
        0
      ]
    ]
  ],
  [
    5357,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5356,
        0
      ]
    ]
  ],
  [
    5358,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5345,
        0
      ],
      [
        5357,
        0
      ]
    ]
  ],
  [
    5360,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5359,
        0
      ],
      [
        5358,
        0
      ]
    ]
  ],
  [
    6105,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 27648]} })  ",
    "Dot",
    [
      [
        5360,
        0
      ],
      [
        6104,
        0
      ]
    ]
  ],
  [
    6107,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 13824] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6105,
        0
      ]
    ]
  ],
  [
    6106,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 13824; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 27648]} })  ",
    "Slice",
    [
      [
        6105,
        0
      ]
    ]
  ],
  [
    5364,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Sigmoid",
    [
      [
        6106,
        0
      ]
    ]
  ],
  [
    5365,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        6106,
        0
      ],
      [
        5364,
        0
      ]
    ]
  ],
  [
    5366,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} })  ",
    "Multiply",
    [
      [
        5365,
        0
      ],
      [
        6107,
        0
      ]
    ]
  ],
  [
    5367,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 13824]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [13824, 5120]} })  ",
    "Dot",
    [
      [
        5366,
        0
      ],
      [
        5300,
        0
      ]
    ]
  ],
  [
    5368,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Add",
    [
      [
        5345,
        0
      ],
      [
        5367,
        0
      ]
    ]
  ],
  [
    5376,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5747,
        0
      ]
    ]
  ],
  [
    5372,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        5371,
        0
      ]
    ]
  ],
  [
    5369,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5368,
        0
      ],
      [
        5368,
        0
      ]
    ]
  ],
  [
    5370,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Sum",
    [
      [
        5369,
        0
      ]
    ]
  ],
  [
    5373,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        5370,
        0
      ],
      [
        5372,
        0
      ]
    ]
  ],
  [
    5374,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5373,
        0
      ]
    ]
  ],
  [
    5377,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        5374,
        0
      ],
      [
        5376,
        0
      ]
    ]
  ],
  [
    5378,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        5377,
        0
      ]
    ]
  ],
  [
    5379,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        5378,
        0
      ]
    ]
  ],
  [
    5380,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 5120; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        5379,
        0
      ]
    ]
  ],
  [
    5381,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Divide",
    [
      [
        5368,
        0
      ],
      [
        5380,
        0
      ]
    ]
  ],
  [
    5383,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} })  ",
    "Multiply",
    [
      [
        5382,
        0
      ],
      [
        5381,
        0
      ]
    ]
  ],
  [
    5384,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 5120]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [5120, 32000]} })  ",
    "Dot",
    [
      [
        5383,
        0
      ],
      [
        5299,
        0
      ]
    ]
  ],
  [
    5385,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].cast(`float32`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32000]} })  ",
    "Convert",
    [
      [
        5384,
        0
      ]
    ]
  ],
  [
    5386,
    "",
    "Result",
    [
      [
        5385,
        0
      ]
    ]
  ]
]