[
  [
    1447,
    " - einstein_v2(\" output0[N0, N1] = input0[N1] where N0 in 99; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        102,
        0
      ]
    ]
  ],
  [
    1443,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1441,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1410,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1408,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1349,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1347,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1316,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1314,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1255,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1253,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1222,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1220,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1161,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1159,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1128,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1126,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1067,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1065,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1034,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1032,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    973,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    971,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    940,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    938,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    879,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    877,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    846,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    844,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    785,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    783,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    752,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    750,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    691,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    689,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    658,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    656,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    597,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    595,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    564,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    562,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    503,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    501,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    470,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    468,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    409,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    407,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    376,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    374,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    306,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    304,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    281,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[G3, N2] g input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2, 768]} ,  \"input1\" : { \"dtype\" : \"int64\", \"shape\" : [99, 66]} })  ",
    "GatherV2",
    [
      [
        2,
        0
      ],
      [
        277,
        0
      ]
    ]
  ],
  [
    279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[G3, N2] g input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [30522, 768]} ,  \"input1\" : { \"dtype\" : \"int64\", \"shape\" : [99, 66]} })  ",
    "GatherV2",
    [
      [
        0,
        0
      ],
      [
        276,
        0
      ]
    ]
  ],
  [
    280,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        279,
        0
      ],
      [
        51,
        0
      ]
    ]
  ],
  [
    282,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        280,
        0
      ],
      [
        281,
        0
      ]
    ]
  ],
  [
    285,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        284,
        0
      ]
    ]
  ],
  [
    283,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        282,
        0
      ]
    ]
  ],
  [
    286,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        283,
        0
      ],
      [
        285,
        0
      ]
    ]
  ],
  [
    287,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        286,
        0
      ]
    ]
  ],
  [
    288,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        287,
        0
      ]
    ]
  ],
  [
    289,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        288,
        0
      ]
    ]
  ],
  [
    290,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        282,
        0
      ],
      [
        289,
        0
      ]
    ]
  ],
  [
    298,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1453,
        0
      ]
    ]
  ],
  [
    294,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        293,
        0
      ]
    ]
  ],
  [
    291,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        290,
        0
      ],
      [
        290,
        0
      ]
    ]
  ],
  [
    292,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        291,
        0
      ]
    ]
  ],
  [
    295,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        292,
        0
      ],
      [
        294,
        0
      ]
    ]
  ],
  [
    296,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        295,
        0
      ]
    ]
  ],
  [
    299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        296,
        0
      ],
      [
        298,
        0
      ]
    ]
  ],
  [
    300,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        299,
        0
      ]
    ]
  ],
  [
    301,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        300,
        0
      ]
    ]
  ],
  [
    302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        301,
        0
      ]
    ]
  ],
  [
    303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        290,
        0
      ],
      [
        302,
        0
      ]
    ]
  ],
  [
    305,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        303,
        0
      ],
      [
        304,
        0
      ]
    ]
  ],
  [
    307,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        305,
        0
      ],
      [
        306,
        0
      ]
    ]
  ],
  [
    350,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        8,
        0
      ]
    ]
  ],
  [
    309,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        6,
        0
      ]
    ]
  ],
  [
    308,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        307,
        0
      ],
      [
        193,
        0
      ]
    ]
  ],
  [
    310,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        309,
        0
      ],
      [
        308,
        0
      ]
    ]
  ],
  [
    338,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        310,
        0
      ]
    ]
  ],
  [
    339,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        338,
        0
      ]
    ]
  ],
  [
    340,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        339,
        0
      ]
    ]
  ],
  [
    332,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N2] where N0 in 99, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 1]} })  ",
    "Broadcast",
    [
      [
        1452,
        0
      ]
    ]
  ],
  [
    329,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N2] where N0 in 99, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 1]} })  ",
    "Broadcast",
    [
      [
        1454,
        0
      ]
    ]
  ],
  [
    325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N2] where N1 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"int64\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        278,
        0
      ]
    ]
  ],
  [
    326,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, 0, N3] where N1 in 1, N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"int64\", \"shape\" : [99, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        325,
        0
      ]
    ]
  ],
  [
    327,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3].cast(`float32`);\", input_dict={ \"input0\" : { \"dtype\" : \"int64\", \"shape\" : [99, 1, 1, 66]} })  ",
    "Convert",
    [
      [
        326,
        0
      ]
    ]
  ],
  [
    330,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] - input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} })  ",
    "Subtract",
    [
      [
        329,
        0
      ],
      [
        327,
        0
      ]
    ]
  ],
  [
    333,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} })  ",
    "Multiply",
    [
      [
        330,
        0
      ],
      [
        332,
        0
      ]
    ]
  ],
  [
    334,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    335,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        334,
        0
      ]
    ]
  ],
  [
    323,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        127,
        0
      ]
    ]
  ],
  [
    311,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        310,
        0
      ]
    ]
  ],
  [
    312,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        311,
        0
      ]
    ]
  ],
  [
    313,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        312,
        0
      ]
    ]
  ],
  [
    314,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        310,
        0
      ]
    ]
  ],
  [
    315,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        314,
        0
      ]
    ]
  ],
  [
    316,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        315,
        0
      ]
    ]
  ],
  [
    321,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        316,
        0
      ],
      [
        313,
        0
      ]
    ]
  ],
  [
    324,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        321,
        0
      ],
      [
        323,
        0
      ]
    ]
  ],
  [
    336,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        324,
        0
      ],
      [
        335,
        0
      ]
    ]
  ],
  [
    1479,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        336,
        0
      ]
    ]
  ],
  [
    1480,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        336,
        0
      ],
      [
        1479,
        0
      ]
    ]
  ],
  [
    1481,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1480,
        0
      ]
    ]
  ],
  [
    1482,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1480,
        0
      ],
      [
        1481,
        0
      ]
    ]
  ],
  [
    345,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1482,
        0
      ],
      [
        340,
        0
      ]
    ]
  ],
  [
    347,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        345,
        0
      ]
    ]
  ],
  [
    348,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        347,
        0
      ]
    ]
  ],
  [
    349,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        348,
        0
      ],
      [
        182,
        0
      ]
    ]
  ],
  [
    351,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        350,
        0
      ],
      [
        349,
        0
      ]
    ]
  ],
  [
    352,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        351,
        0
      ],
      [
        307,
        0
      ]
    ]
  ],
  [
    355,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        354,
        0
      ]
    ]
  ],
  [
    353,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        352,
        0
      ]
    ]
  ],
  [
    356,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        353,
        0
      ],
      [
        355,
        0
      ]
    ]
  ],
  [
    357,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        356,
        0
      ]
    ]
  ],
  [
    358,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        357,
        0
      ]
    ]
  ],
  [
    359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        358,
        0
      ]
    ]
  ],
  [
    360,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        352,
        0
      ],
      [
        359,
        0
      ]
    ]
  ],
  [
    368,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1455,
        0
      ]
    ]
  ],
  [
    364,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        363,
        0
      ]
    ]
  ],
  [
    361,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        360,
        0
      ],
      [
        360,
        0
      ]
    ]
  ],
  [
    362,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        361,
        0
      ]
    ]
  ],
  [
    365,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        362,
        0
      ],
      [
        364,
        0
      ]
    ]
  ],
  [
    366,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        365,
        0
      ]
    ]
  ],
  [
    369,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        366,
        0
      ],
      [
        368,
        0
      ]
    ]
  ],
  [
    370,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        369,
        0
      ]
    ]
  ],
  [
    371,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        370,
        0
      ]
    ]
  ],
  [
    372,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        371,
        0
      ]
    ]
  ],
  [
    373,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        360,
        0
      ],
      [
        372,
        0
      ]
    ]
  ],
  [
    375,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        373,
        0
      ],
      [
        374,
        0
      ]
    ]
  ],
  [
    377,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        375,
        0
      ],
      [
        376,
        0
      ]
    ]
  ],
  [
    383,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        12,
        0
      ]
    ]
  ],
  [
    379,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        10,
        0
      ]
    ]
  ],
  [
    378,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        377,
        0
      ],
      [
        195,
        0
      ]
    ]
  ],
  [
    380,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        379,
        0
      ],
      [
        378,
        0
      ]
    ]
  ],
  [
    381,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        380,
        0
      ]
    ]
  ],
  [
    382,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        381,
        0
      ],
      [
        256,
        0
      ]
    ]
  ],
  [
    384,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        383,
        0
      ],
      [
        382,
        0
      ]
    ]
  ],
  [
    385,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        384,
        0
      ],
      [
        377,
        0
      ]
    ]
  ],
  [
    388,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        387,
        0
      ]
    ]
  ],
  [
    386,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        385,
        0
      ]
    ]
  ],
  [
    389,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        386,
        0
      ],
      [
        388,
        0
      ]
    ]
  ],
  [
    390,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        389,
        0
      ]
    ]
  ],
  [
    391,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        390,
        0
      ]
    ]
  ],
  [
    392,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        391,
        0
      ]
    ]
  ],
  [
    393,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        385,
        0
      ],
      [
        392,
        0
      ]
    ]
  ],
  [
    401,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1456,
        0
      ]
    ]
  ],
  [
    397,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        396,
        0
      ]
    ]
  ],
  [
    394,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        393,
        0
      ],
      [
        393,
        0
      ]
    ]
  ],
  [
    395,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        394,
        0
      ]
    ]
  ],
  [
    398,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        395,
        0
      ],
      [
        397,
        0
      ]
    ]
  ],
  [
    399,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        398,
        0
      ]
    ]
  ],
  [
    402,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        399,
        0
      ],
      [
        401,
        0
      ]
    ]
  ],
  [
    403,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        402,
        0
      ]
    ]
  ],
  [
    404,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        403,
        0
      ]
    ]
  ],
  [
    405,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        404,
        0
      ]
    ]
  ],
  [
    406,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        393,
        0
      ],
      [
        405,
        0
      ]
    ]
  ],
  [
    408,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        406,
        0
      ],
      [
        407,
        0
      ]
    ]
  ],
  [
    410,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        408,
        0
      ],
      [
        409,
        0
      ]
    ]
  ],
  [
    444,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        16,
        0
      ]
    ]
  ],
  [
    412,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        14,
        0
      ]
    ]
  ],
  [
    411,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        410,
        0
      ],
      [
        139,
        0
      ]
    ]
  ],
  [
    413,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        412,
        0
      ],
      [
        411,
        0
      ]
    ]
  ],
  [
    432,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        413,
        0
      ]
    ]
  ],
  [
    433,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        432,
        0
      ]
    ]
  ],
  [
    434,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        433,
        0
      ]
    ]
  ],
  [
    428,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    429,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        428,
        0
      ]
    ]
  ],
  [
    426,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        154,
        0
      ]
    ]
  ],
  [
    414,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        413,
        0
      ]
    ]
  ],
  [
    415,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        414,
        0
      ]
    ]
  ],
  [
    416,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        415,
        0
      ]
    ]
  ],
  [
    417,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        413,
        0
      ]
    ]
  ],
  [
    418,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        417,
        0
      ]
    ]
  ],
  [
    419,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        418,
        0
      ]
    ]
  ],
  [
    424,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        419,
        0
      ],
      [
        416,
        0
      ]
    ]
  ],
  [
    427,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        424,
        0
      ],
      [
        426,
        0
      ]
    ]
  ],
  [
    430,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        427,
        0
      ],
      [
        429,
        0
      ]
    ]
  ],
  [
    1483,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        430,
        0
      ]
    ]
  ],
  [
    1484,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        430,
        0
      ],
      [
        1483,
        0
      ]
    ]
  ],
  [
    1485,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1484,
        0
      ]
    ]
  ],
  [
    1486,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1484,
        0
      ],
      [
        1485,
        0
      ]
    ]
  ],
  [
    439,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1486,
        0
      ],
      [
        434,
        0
      ]
    ]
  ],
  [
    441,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        439,
        0
      ]
    ]
  ],
  [
    442,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        441,
        0
      ]
    ]
  ],
  [
    443,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        442,
        0
      ],
      [
        63,
        0
      ]
    ]
  ],
  [
    445,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        444,
        0
      ],
      [
        443,
        0
      ]
    ]
  ],
  [
    446,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        445,
        0
      ],
      [
        410,
        0
      ]
    ]
  ],
  [
    449,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        448,
        0
      ]
    ]
  ],
  [
    447,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        446,
        0
      ]
    ]
  ],
  [
    450,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        447,
        0
      ],
      [
        449,
        0
      ]
    ]
  ],
  [
    451,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        450,
        0
      ]
    ]
  ],
  [
    452,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        451,
        0
      ]
    ]
  ],
  [
    453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        452,
        0
      ]
    ]
  ],
  [
    454,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        446,
        0
      ],
      [
        453,
        0
      ]
    ]
  ],
  [
    462,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1457,
        0
      ]
    ]
  ],
  [
    458,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        457,
        0
      ]
    ]
  ],
  [
    455,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        454,
        0
      ],
      [
        454,
        0
      ]
    ]
  ],
  [
    456,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        455,
        0
      ]
    ]
  ],
  [
    459,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        456,
        0
      ],
      [
        458,
        0
      ]
    ]
  ],
  [
    460,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        459,
        0
      ]
    ]
  ],
  [
    463,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        460,
        0
      ],
      [
        462,
        0
      ]
    ]
  ],
  [
    464,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        463,
        0
      ]
    ]
  ],
  [
    465,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        464,
        0
      ]
    ]
  ],
  [
    466,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        465,
        0
      ]
    ]
  ],
  [
    467,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        454,
        0
      ],
      [
        466,
        0
      ]
    ]
  ],
  [
    469,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        467,
        0
      ],
      [
        468,
        0
      ]
    ]
  ],
  [
    471,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        469,
        0
      ],
      [
        470,
        0
      ]
    ]
  ],
  [
    477,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        20,
        0
      ]
    ]
  ],
  [
    473,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        18,
        0
      ]
    ]
  ],
  [
    472,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        471,
        0
      ],
      [
        25,
        0
      ]
    ]
  ],
  [
    474,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        473,
        0
      ],
      [
        472,
        0
      ]
    ]
  ],
  [
    475,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        474,
        0
      ]
    ]
  ],
  [
    476,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        475,
        0
      ],
      [
        39,
        0
      ]
    ]
  ],
  [
    478,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        477,
        0
      ],
      [
        476,
        0
      ]
    ]
  ],
  [
    479,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        478,
        0
      ],
      [
        471,
        0
      ]
    ]
  ],
  [
    482,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        481,
        0
      ]
    ]
  ],
  [
    480,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        479,
        0
      ]
    ]
  ],
  [
    483,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        480,
        0
      ],
      [
        482,
        0
      ]
    ]
  ],
  [
    484,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        483,
        0
      ]
    ]
  ],
  [
    485,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        484,
        0
      ]
    ]
  ],
  [
    486,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        485,
        0
      ]
    ]
  ],
  [
    487,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        479,
        0
      ],
      [
        486,
        0
      ]
    ]
  ],
  [
    495,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1459,
        0
      ]
    ]
  ],
  [
    491,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        490,
        0
      ]
    ]
  ],
  [
    488,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        487,
        0
      ],
      [
        487,
        0
      ]
    ]
  ],
  [
    489,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        488,
        0
      ]
    ]
  ],
  [
    492,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        489,
        0
      ],
      [
        491,
        0
      ]
    ]
  ],
  [
    493,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        492,
        0
      ]
    ]
  ],
  [
    496,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        493,
        0
      ],
      [
        495,
        0
      ]
    ]
  ],
  [
    497,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        496,
        0
      ]
    ]
  ],
  [
    498,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        497,
        0
      ]
    ]
  ],
  [
    499,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        498,
        0
      ]
    ]
  ],
  [
    500,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        487,
        0
      ],
      [
        499,
        0
      ]
    ]
  ],
  [
    502,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        500,
        0
      ],
      [
        501,
        0
      ]
    ]
  ],
  [
    504,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        502,
        0
      ],
      [
        503,
        0
      ]
    ]
  ],
  [
    538,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        24,
        0
      ]
    ]
  ],
  [
    506,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        22,
        0
      ]
    ]
  ],
  [
    505,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        504,
        0
      ],
      [
        29,
        0
      ]
    ]
  ],
  [
    507,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        506,
        0
      ],
      [
        505,
        0
      ]
    ]
  ],
  [
    526,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        507,
        0
      ]
    ]
  ],
  [
    527,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        526,
        0
      ]
    ]
  ],
  [
    528,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        527,
        0
      ]
    ]
  ],
  [
    522,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    523,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        522,
        0
      ]
    ]
  ],
  [
    520,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        181,
        0
      ]
    ]
  ],
  [
    508,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        507,
        0
      ]
    ]
  ],
  [
    509,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        508,
        0
      ]
    ]
  ],
  [
    510,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        509,
        0
      ]
    ]
  ],
  [
    511,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        507,
        0
      ]
    ]
  ],
  [
    512,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        511,
        0
      ]
    ]
  ],
  [
    513,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        512,
        0
      ]
    ]
  ],
  [
    518,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        513,
        0
      ],
      [
        510,
        0
      ]
    ]
  ],
  [
    521,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        518,
        0
      ],
      [
        520,
        0
      ]
    ]
  ],
  [
    524,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        521,
        0
      ],
      [
        523,
        0
      ]
    ]
  ],
  [
    1487,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        524,
        0
      ]
    ]
  ],
  [
    1488,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        524,
        0
      ],
      [
        1487,
        0
      ]
    ]
  ],
  [
    1489,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1488,
        0
      ]
    ]
  ],
  [
    1490,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1488,
        0
      ],
      [
        1489,
        0
      ]
    ]
  ],
  [
    533,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1490,
        0
      ],
      [
        528,
        0
      ]
    ]
  ],
  [
    535,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        533,
        0
      ]
    ]
  ],
  [
    536,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        535,
        0
      ]
    ]
  ],
  [
    537,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        536,
        0
      ],
      [
        11,
        0
      ]
    ]
  ],
  [
    539,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        538,
        0
      ],
      [
        537,
        0
      ]
    ]
  ],
  [
    540,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        539,
        0
      ],
      [
        504,
        0
      ]
    ]
  ],
  [
    543,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        542,
        0
      ]
    ]
  ],
  [
    541,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        540,
        0
      ]
    ]
  ],
  [
    544,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        541,
        0
      ],
      [
        543,
        0
      ]
    ]
  ],
  [
    545,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        544,
        0
      ]
    ]
  ],
  [
    546,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        545,
        0
      ]
    ]
  ],
  [
    547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        546,
        0
      ]
    ]
  ],
  [
    548,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        540,
        0
      ],
      [
        547,
        0
      ]
    ]
  ],
  [
    556,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1461,
        0
      ]
    ]
  ],
  [
    552,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        551,
        0
      ]
    ]
  ],
  [
    549,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        548,
        0
      ],
      [
        548,
        0
      ]
    ]
  ],
  [
    550,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        549,
        0
      ]
    ]
  ],
  [
    553,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        550,
        0
      ],
      [
        552,
        0
      ]
    ]
  ],
  [
    554,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        553,
        0
      ]
    ]
  ],
  [
    557,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        554,
        0
      ],
      [
        556,
        0
      ]
    ]
  ],
  [
    558,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        557,
        0
      ]
    ]
  ],
  [
    559,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        558,
        0
      ]
    ]
  ],
  [
    560,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        559,
        0
      ]
    ]
  ],
  [
    561,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        548,
        0
      ],
      [
        560,
        0
      ]
    ]
  ],
  [
    563,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        561,
        0
      ],
      [
        562,
        0
      ]
    ]
  ],
  [
    565,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        563,
        0
      ],
      [
        564,
        0
      ]
    ]
  ],
  [
    571,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        28,
        0
      ]
    ]
  ],
  [
    567,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        26,
        0
      ]
    ]
  ],
  [
    566,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        565,
        0
      ],
      [
        247,
        0
      ]
    ]
  ],
  [
    568,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        567,
        0
      ],
      [
        566,
        0
      ]
    ]
  ],
  [
    569,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        568,
        0
      ]
    ]
  ],
  [
    570,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        569,
        0
      ],
      [
        141,
        0
      ]
    ]
  ],
  [
    572,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        571,
        0
      ],
      [
        570,
        0
      ]
    ]
  ],
  [
    573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        572,
        0
      ],
      [
        565,
        0
      ]
    ]
  ],
  [
    576,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        575,
        0
      ]
    ]
  ],
  [
    574,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        573,
        0
      ]
    ]
  ],
  [
    577,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        574,
        0
      ],
      [
        576,
        0
      ]
    ]
  ],
  [
    578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        577,
        0
      ]
    ]
  ],
  [
    579,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        578,
        0
      ]
    ]
  ],
  [
    580,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        579,
        0
      ]
    ]
  ],
  [
    581,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        573,
        0
      ],
      [
        580,
        0
      ]
    ]
  ],
  [
    589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1462,
        0
      ]
    ]
  ],
  [
    585,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        584,
        0
      ]
    ]
  ],
  [
    582,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        581,
        0
      ],
      [
        581,
        0
      ]
    ]
  ],
  [
    583,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        582,
        0
      ]
    ]
  ],
  [
    586,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        583,
        0
      ],
      [
        585,
        0
      ]
    ]
  ],
  [
    587,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        586,
        0
      ]
    ]
  ],
  [
    590,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        587,
        0
      ],
      [
        589,
        0
      ]
    ]
  ],
  [
    591,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        590,
        0
      ]
    ]
  ],
  [
    592,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        591,
        0
      ]
    ]
  ],
  [
    593,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        592,
        0
      ]
    ]
  ],
  [
    594,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        581,
        0
      ],
      [
        593,
        0
      ]
    ]
  ],
  [
    596,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        594,
        0
      ],
      [
        595,
        0
      ]
    ]
  ],
  [
    598,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        596,
        0
      ],
      [
        597,
        0
      ]
    ]
  ],
  [
    632,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        32,
        0
      ]
    ]
  ],
  [
    600,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        30,
        0
      ]
    ]
  ],
  [
    599,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        598,
        0
      ],
      [
        192,
        0
      ]
    ]
  ],
  [
    601,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        600,
        0
      ],
      [
        599,
        0
      ]
    ]
  ],
  [
    620,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        601,
        0
      ]
    ]
  ],
  [
    621,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        620,
        0
      ]
    ]
  ],
  [
    622,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        621,
        0
      ]
    ]
  ],
  [
    616,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    617,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        616,
        0
      ]
    ]
  ],
  [
    614,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        208,
        0
      ]
    ]
  ],
  [
    602,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        601,
        0
      ]
    ]
  ],
  [
    603,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        602,
        0
      ]
    ]
  ],
  [
    604,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        603,
        0
      ]
    ]
  ],
  [
    605,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        601,
        0
      ]
    ]
  ],
  [
    606,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        605,
        0
      ]
    ]
  ],
  [
    607,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        606,
        0
      ]
    ]
  ],
  [
    612,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        607,
        0
      ],
      [
        604,
        0
      ]
    ]
  ],
  [
    615,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        612,
        0
      ],
      [
        614,
        0
      ]
    ]
  ],
  [
    618,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        615,
        0
      ],
      [
        617,
        0
      ]
    ]
  ],
  [
    1491,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        618,
        0
      ]
    ]
  ],
  [
    1492,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        618,
        0
      ],
      [
        1491,
        0
      ]
    ]
  ],
  [
    1493,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1492,
        0
      ]
    ]
  ],
  [
    1494,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1492,
        0
      ],
      [
        1493,
        0
      ]
    ]
  ],
  [
    627,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1494,
        0
      ],
      [
        622,
        0
      ]
    ]
  ],
  [
    629,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        627,
        0
      ]
    ]
  ],
  [
    630,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        629,
        0
      ]
    ]
  ],
  [
    631,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        630,
        0
      ],
      [
        33,
        0
      ]
    ]
  ],
  [
    633,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        632,
        0
      ],
      [
        631,
        0
      ]
    ]
  ],
  [
    634,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        633,
        0
      ],
      [
        598,
        0
      ]
    ]
  ],
  [
    637,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        636,
        0
      ]
    ]
  ],
  [
    635,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        634,
        0
      ]
    ]
  ],
  [
    638,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        635,
        0
      ],
      [
        637,
        0
      ]
    ]
  ],
  [
    639,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        638,
        0
      ]
    ]
  ],
  [
    640,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        639,
        0
      ]
    ]
  ],
  [
    641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        640,
        0
      ]
    ]
  ],
  [
    642,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        634,
        0
      ],
      [
        641,
        0
      ]
    ]
  ],
  [
    650,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1463,
        0
      ]
    ]
  ],
  [
    646,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        645,
        0
      ]
    ]
  ],
  [
    643,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        642,
        0
      ],
      [
        642,
        0
      ]
    ]
  ],
  [
    644,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        643,
        0
      ]
    ]
  ],
  [
    647,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        644,
        0
      ],
      [
        646,
        0
      ]
    ]
  ],
  [
    648,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        647,
        0
      ]
    ]
  ],
  [
    651,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        648,
        0
      ],
      [
        650,
        0
      ]
    ]
  ],
  [
    652,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        651,
        0
      ]
    ]
  ],
  [
    653,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        652,
        0
      ]
    ]
  ],
  [
    654,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        653,
        0
      ]
    ]
  ],
  [
    655,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        642,
        0
      ],
      [
        654,
        0
      ]
    ]
  ],
  [
    657,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        655,
        0
      ],
      [
        656,
        0
      ]
    ]
  ],
  [
    659,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        657,
        0
      ],
      [
        658,
        0
      ]
    ]
  ],
  [
    665,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        36,
        0
      ]
    ]
  ],
  [
    661,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        34,
        0
      ]
    ]
  ],
  [
    660,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        659,
        0
      ],
      [
        225,
        0
      ]
    ]
  ],
  [
    662,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        661,
        0
      ],
      [
        660,
        0
      ]
    ]
  ],
  [
    663,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        662,
        0
      ]
    ]
  ],
  [
    664,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        663,
        0
      ],
      [
        153,
        0
      ]
    ]
  ],
  [
    666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        665,
        0
      ],
      [
        664,
        0
      ]
    ]
  ],
  [
    667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        666,
        0
      ],
      [
        659,
        0
      ]
    ]
  ],
  [
    670,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        669,
        0
      ]
    ]
  ],
  [
    668,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        667,
        0
      ]
    ]
  ],
  [
    671,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        668,
        0
      ],
      [
        670,
        0
      ]
    ]
  ],
  [
    672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        671,
        0
      ]
    ]
  ],
  [
    673,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        672,
        0
      ]
    ]
  ],
  [
    674,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        673,
        0
      ]
    ]
  ],
  [
    675,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        667,
        0
      ],
      [
        674,
        0
      ]
    ]
  ],
  [
    683,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1458,
        0
      ]
    ]
  ],
  [
    679,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        678,
        0
      ]
    ]
  ],
  [
    676,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        675,
        0
      ],
      [
        675,
        0
      ]
    ]
  ],
  [
    677,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        676,
        0
      ]
    ]
  ],
  [
    680,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        677,
        0
      ],
      [
        679,
        0
      ]
    ]
  ],
  [
    681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        680,
        0
      ]
    ]
  ],
  [
    684,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        681,
        0
      ],
      [
        683,
        0
      ]
    ]
  ],
  [
    685,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        684,
        0
      ]
    ]
  ],
  [
    686,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        685,
        0
      ]
    ]
  ],
  [
    687,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        686,
        0
      ]
    ]
  ],
  [
    688,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        675,
        0
      ],
      [
        687,
        0
      ]
    ]
  ],
  [
    690,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        688,
        0
      ],
      [
        689,
        0
      ]
    ]
  ],
  [
    692,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        690,
        0
      ],
      [
        691,
        0
      ]
    ]
  ],
  [
    726,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        40,
        0
      ]
    ]
  ],
  [
    694,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        38,
        0
      ]
    ]
  ],
  [
    693,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        692,
        0
      ],
      [
        53,
        0
      ]
    ]
  ],
  [
    695,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        694,
        0
      ],
      [
        693,
        0
      ]
    ]
  ],
  [
    714,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        695,
        0
      ]
    ]
  ],
  [
    715,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        714,
        0
      ]
    ]
  ],
  [
    716,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        715,
        0
      ]
    ]
  ],
  [
    710,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    711,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        710,
        0
      ]
    ]
  ],
  [
    708,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        235,
        0
      ]
    ]
  ],
  [
    696,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        695,
        0
      ]
    ]
  ],
  [
    697,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        696,
        0
      ]
    ]
  ],
  [
    698,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        697,
        0
      ]
    ]
  ],
  [
    699,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        695,
        0
      ]
    ]
  ],
  [
    700,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        699,
        0
      ]
    ]
  ],
  [
    701,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        700,
        0
      ]
    ]
  ],
  [
    706,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        701,
        0
      ],
      [
        698,
        0
      ]
    ]
  ],
  [
    709,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        706,
        0
      ],
      [
        708,
        0
      ]
    ]
  ],
  [
    712,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        709,
        0
      ],
      [
        711,
        0
      ]
    ]
  ],
  [
    1495,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        712,
        0
      ]
    ]
  ],
  [
    1496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        712,
        0
      ],
      [
        1495,
        0
      ]
    ]
  ],
  [
    1497,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1496,
        0
      ]
    ]
  ],
  [
    1498,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1496,
        0
      ],
      [
        1497,
        0
      ]
    ]
  ],
  [
    721,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1498,
        0
      ],
      [
        716,
        0
      ]
    ]
  ],
  [
    723,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        721,
        0
      ]
    ]
  ],
  [
    724,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        723,
        0
      ]
    ]
  ],
  [
    725,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        724,
        0
      ],
      [
        105,
        0
      ]
    ]
  ],
  [
    727,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        726,
        0
      ],
      [
        725,
        0
      ]
    ]
  ],
  [
    728,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        727,
        0
      ],
      [
        692,
        0
      ]
    ]
  ],
  [
    731,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        730,
        0
      ]
    ]
  ],
  [
    729,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        728,
        0
      ]
    ]
  ],
  [
    732,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        729,
        0
      ],
      [
        731,
        0
      ]
    ]
  ],
  [
    733,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        732,
        0
      ]
    ]
  ],
  [
    734,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        733,
        0
      ]
    ]
  ],
  [
    735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        734,
        0
      ]
    ]
  ],
  [
    736,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        728,
        0
      ],
      [
        735,
        0
      ]
    ]
  ],
  [
    744,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1464,
        0
      ]
    ]
  ],
  [
    740,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        739,
        0
      ]
    ]
  ],
  [
    737,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        736,
        0
      ],
      [
        736,
        0
      ]
    ]
  ],
  [
    738,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        737,
        0
      ]
    ]
  ],
  [
    741,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        738,
        0
      ],
      [
        740,
        0
      ]
    ]
  ],
  [
    742,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        741,
        0
      ]
    ]
  ],
  [
    745,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        742,
        0
      ],
      [
        744,
        0
      ]
    ]
  ],
  [
    746,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        745,
        0
      ]
    ]
  ],
  [
    747,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        746,
        0
      ]
    ]
  ],
  [
    748,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        747,
        0
      ]
    ]
  ],
  [
    749,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        736,
        0
      ],
      [
        748,
        0
      ]
    ]
  ],
  [
    751,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        749,
        0
      ],
      [
        750,
        0
      ]
    ]
  ],
  [
    753,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        751,
        0
      ],
      [
        752,
        0
      ]
    ]
  ],
  [
    759,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        44,
        0
      ]
    ]
  ],
  [
    755,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        42,
        0
      ]
    ]
  ],
  [
    754,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        753,
        0
      ],
      [
        9,
        0
      ]
    ]
  ],
  [
    756,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        755,
        0
      ],
      [
        754,
        0
      ]
    ]
  ],
  [
    757,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        756,
        0
      ]
    ]
  ],
  [
    758,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        757,
        0
      ],
      [
        171,
        0
      ]
    ]
  ],
  [
    760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        759,
        0
      ],
      [
        758,
        0
      ]
    ]
  ],
  [
    761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        760,
        0
      ],
      [
        753,
        0
      ]
    ]
  ],
  [
    764,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        763,
        0
      ]
    ]
  ],
  [
    762,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        761,
        0
      ]
    ]
  ],
  [
    765,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        762,
        0
      ],
      [
        764,
        0
      ]
    ]
  ],
  [
    766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        765,
        0
      ]
    ]
  ],
  [
    767,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        766,
        0
      ]
    ]
  ],
  [
    768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        767,
        0
      ]
    ]
  ],
  [
    769,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        761,
        0
      ],
      [
        768,
        0
      ]
    ]
  ],
  [
    777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1465,
        0
      ]
    ]
  ],
  [
    773,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        772,
        0
      ]
    ]
  ],
  [
    770,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        769,
        0
      ],
      [
        769,
        0
      ]
    ]
  ],
  [
    771,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        770,
        0
      ]
    ]
  ],
  [
    774,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        771,
        0
      ],
      [
        773,
        0
      ]
    ]
  ],
  [
    775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        774,
        0
      ]
    ]
  ],
  [
    778,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        775,
        0
      ],
      [
        777,
        0
      ]
    ]
  ],
  [
    779,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        778,
        0
      ]
    ]
  ],
  [
    780,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        779,
        0
      ]
    ]
  ],
  [
    781,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        780,
        0
      ]
    ]
  ],
  [
    782,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        769,
        0
      ],
      [
        781,
        0
      ]
    ]
  ],
  [
    784,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        782,
        0
      ],
      [
        783,
        0
      ]
    ]
  ],
  [
    786,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        784,
        0
      ],
      [
        785,
        0
      ]
    ]
  ],
  [
    820,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        48,
        0
      ]
    ]
  ],
  [
    788,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        46,
        0
      ]
    ]
  ],
  [
    787,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        786,
        0
      ],
      [
        119,
        0
      ]
    ]
  ],
  [
    789,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        788,
        0
      ],
      [
        787,
        0
      ]
    ]
  ],
  [
    808,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        789,
        0
      ]
    ]
  ],
  [
    809,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        808,
        0
      ]
    ]
  ],
  [
    810,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        809,
        0
      ]
    ]
  ],
  [
    804,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    805,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        804,
        0
      ]
    ]
  ],
  [
    802,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        262,
        0
      ]
    ]
  ],
  [
    790,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        789,
        0
      ]
    ]
  ],
  [
    791,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        790,
        0
      ]
    ]
  ],
  [
    792,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        791,
        0
      ]
    ]
  ],
  [
    793,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        789,
        0
      ]
    ]
  ],
  [
    794,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        793,
        0
      ]
    ]
  ],
  [
    795,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        794,
        0
      ]
    ]
  ],
  [
    800,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        795,
        0
      ],
      [
        792,
        0
      ]
    ]
  ],
  [
    803,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        800,
        0
      ],
      [
        802,
        0
      ]
    ]
  ],
  [
    806,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        803,
        0
      ],
      [
        805,
        0
      ]
    ]
  ],
  [
    1499,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        806,
        0
      ]
    ]
  ],
  [
    1500,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        806,
        0
      ],
      [
        1499,
        0
      ]
    ]
  ],
  [
    1501,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1500,
        0
      ]
    ]
  ],
  [
    1502,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1500,
        0
      ],
      [
        1501,
        0
      ]
    ]
  ],
  [
    815,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1502,
        0
      ],
      [
        810,
        0
      ]
    ]
  ],
  [
    817,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        815,
        0
      ]
    ]
  ],
  [
    818,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        817,
        0
      ]
    ]
  ],
  [
    819,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        818,
        0
      ],
      [
        31,
        0
      ]
    ]
  ],
  [
    821,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        820,
        0
      ],
      [
        819,
        0
      ]
    ]
  ],
  [
    822,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        821,
        0
      ],
      [
        786,
        0
      ]
    ]
  ],
  [
    825,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        824,
        0
      ]
    ]
  ],
  [
    823,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        822,
        0
      ]
    ]
  ],
  [
    826,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        823,
        0
      ],
      [
        825,
        0
      ]
    ]
  ],
  [
    827,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        826,
        0
      ]
    ]
  ],
  [
    828,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        827,
        0
      ]
    ]
  ],
  [
    829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        828,
        0
      ]
    ]
  ],
  [
    830,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        822,
        0
      ],
      [
        829,
        0
      ]
    ]
  ],
  [
    838,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1466,
        0
      ]
    ]
  ],
  [
    834,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        833,
        0
      ]
    ]
  ],
  [
    831,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        830,
        0
      ],
      [
        830,
        0
      ]
    ]
  ],
  [
    832,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        831,
        0
      ]
    ]
  ],
  [
    835,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        832,
        0
      ],
      [
        834,
        0
      ]
    ]
  ],
  [
    836,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        835,
        0
      ]
    ]
  ],
  [
    839,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        836,
        0
      ],
      [
        838,
        0
      ]
    ]
  ],
  [
    840,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        839,
        0
      ]
    ]
  ],
  [
    841,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        840,
        0
      ]
    ]
  ],
  [
    842,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        841,
        0
      ]
    ]
  ],
  [
    843,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        830,
        0
      ],
      [
        842,
        0
      ]
    ]
  ],
  [
    845,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        843,
        0
      ],
      [
        844,
        0
      ]
    ]
  ],
  [
    847,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        845,
        0
      ],
      [
        846,
        0
      ]
    ]
  ],
  [
    853,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        52,
        0
      ]
    ]
  ],
  [
    849,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        50,
        0
      ]
    ]
  ],
  [
    848,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        847,
        0
      ],
      [
        172,
        0
      ]
    ]
  ],
  [
    850,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        849,
        0
      ],
      [
        848,
        0
      ]
    ]
  ],
  [
    851,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        850,
        0
      ]
    ]
  ],
  [
    852,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        851,
        0
      ],
      [
        95,
        0
      ]
    ]
  ],
  [
    854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        853,
        0
      ],
      [
        852,
        0
      ]
    ]
  ],
  [
    855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        854,
        0
      ],
      [
        847,
        0
      ]
    ]
  ],
  [
    858,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        857,
        0
      ]
    ]
  ],
  [
    856,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        855,
        0
      ]
    ]
  ],
  [
    859,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        856,
        0
      ],
      [
        858,
        0
      ]
    ]
  ],
  [
    860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        859,
        0
      ]
    ]
  ],
  [
    861,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        860,
        0
      ]
    ]
  ],
  [
    862,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        861,
        0
      ]
    ]
  ],
  [
    863,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        855,
        0
      ],
      [
        862,
        0
      ]
    ]
  ],
  [
    871,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1467,
        0
      ]
    ]
  ],
  [
    867,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        866,
        0
      ]
    ]
  ],
  [
    864,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        863,
        0
      ],
      [
        863,
        0
      ]
    ]
  ],
  [
    865,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        864,
        0
      ]
    ]
  ],
  [
    868,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        865,
        0
      ],
      [
        867,
        0
      ]
    ]
  ],
  [
    869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        868,
        0
      ]
    ]
  ],
  [
    872,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        869,
        0
      ],
      [
        871,
        0
      ]
    ]
  ],
  [
    873,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        872,
        0
      ]
    ]
  ],
  [
    874,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        873,
        0
      ]
    ]
  ],
  [
    875,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        874,
        0
      ]
    ]
  ],
  [
    876,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        863,
        0
      ],
      [
        875,
        0
      ]
    ]
  ],
  [
    878,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        876,
        0
      ],
      [
        877,
        0
      ]
    ]
  ],
  [
    880,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        878,
        0
      ],
      [
        879,
        0
      ]
    ]
  ],
  [
    914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        56,
        0
      ]
    ]
  ],
  [
    882,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        54,
        0
      ]
    ]
  ],
  [
    881,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        880,
        0
      ],
      [
        274,
        0
      ]
    ]
  ],
  [
    883,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        882,
        0
      ],
      [
        881,
        0
      ]
    ]
  ],
  [
    902,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        883,
        0
      ]
    ]
  ],
  [
    903,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        902,
        0
      ]
    ]
  ],
  [
    904,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        903,
        0
      ]
    ]
  ],
  [
    898,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    899,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        898,
        0
      ]
    ]
  ],
  [
    896,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        209,
        0
      ]
    ]
  ],
  [
    884,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        883,
        0
      ]
    ]
  ],
  [
    885,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        884,
        0
      ]
    ]
  ],
  [
    886,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        885,
        0
      ]
    ]
  ],
  [
    887,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        883,
        0
      ]
    ]
  ],
  [
    888,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        887,
        0
      ]
    ]
  ],
  [
    889,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        888,
        0
      ]
    ]
  ],
  [
    894,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        889,
        0
      ],
      [
        886,
        0
      ]
    ]
  ],
  [
    897,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        894,
        0
      ],
      [
        896,
        0
      ]
    ]
  ],
  [
    900,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        897,
        0
      ],
      [
        899,
        0
      ]
    ]
  ],
  [
    1503,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        900,
        0
      ]
    ]
  ],
  [
    1504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        900,
        0
      ],
      [
        1503,
        0
      ]
    ]
  ],
  [
    1505,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1504,
        0
      ]
    ]
  ],
  [
    1506,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1504,
        0
      ],
      [
        1505,
        0
      ]
    ]
  ],
  [
    909,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1506,
        0
      ],
      [
        904,
        0
      ]
    ]
  ],
  [
    911,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        909,
        0
      ]
    ]
  ],
  [
    912,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        911,
        0
      ]
    ]
  ],
  [
    913,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        912,
        0
      ],
      [
        23,
        0
      ]
    ]
  ],
  [
    915,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        914,
        0
      ],
      [
        913,
        0
      ]
    ]
  ],
  [
    916,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        915,
        0
      ],
      [
        880,
        0
      ]
    ]
  ],
  [
    919,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        918,
        0
      ]
    ]
  ],
  [
    917,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        916,
        0
      ]
    ]
  ],
  [
    920,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        917,
        0
      ],
      [
        919,
        0
      ]
    ]
  ],
  [
    921,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        920,
        0
      ]
    ]
  ],
  [
    922,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        921,
        0
      ]
    ]
  ],
  [
    923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        922,
        0
      ]
    ]
  ],
  [
    924,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        916,
        0
      ],
      [
        923,
        0
      ]
    ]
  ],
  [
    932,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1468,
        0
      ]
    ]
  ],
  [
    928,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        927,
        0
      ]
    ]
  ],
  [
    925,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        924,
        0
      ],
      [
        924,
        0
      ]
    ]
  ],
  [
    926,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        925,
        0
      ]
    ]
  ],
  [
    929,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        926,
        0
      ],
      [
        928,
        0
      ]
    ]
  ],
  [
    930,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        929,
        0
      ]
    ]
  ],
  [
    933,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        930,
        0
      ],
      [
        932,
        0
      ]
    ]
  ],
  [
    934,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        933,
        0
      ]
    ]
  ],
  [
    935,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        934,
        0
      ]
    ]
  ],
  [
    936,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        935,
        0
      ]
    ]
  ],
  [
    937,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        924,
        0
      ],
      [
        936,
        0
      ]
    ]
  ],
  [
    939,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        937,
        0
      ],
      [
        938,
        0
      ]
    ]
  ],
  [
    941,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        939,
        0
      ],
      [
        940,
        0
      ]
    ]
  ],
  [
    947,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        60,
        0
      ]
    ]
  ],
  [
    943,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        58,
        0
      ]
    ]
  ],
  [
    942,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        941,
        0
      ],
      [
        218,
        0
      ]
    ]
  ],
  [
    944,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        943,
        0
      ],
      [
        942,
        0
      ]
    ]
  ],
  [
    945,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        944,
        0
      ]
    ]
  ],
  [
    946,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        945,
        0
      ],
      [
        143,
        0
      ]
    ]
  ],
  [
    948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        947,
        0
      ],
      [
        946,
        0
      ]
    ]
  ],
  [
    949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        948,
        0
      ],
      [
        941,
        0
      ]
    ]
  ],
  [
    952,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        951,
        0
      ]
    ]
  ],
  [
    950,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        949,
        0
      ]
    ]
  ],
  [
    953,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        950,
        0
      ],
      [
        952,
        0
      ]
    ]
  ],
  [
    954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        953,
        0
      ]
    ]
  ],
  [
    955,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        954,
        0
      ]
    ]
  ],
  [
    956,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        955,
        0
      ]
    ]
  ],
  [
    957,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        949,
        0
      ],
      [
        956,
        0
      ]
    ]
  ],
  [
    965,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1469,
        0
      ]
    ]
  ],
  [
    961,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        960,
        0
      ]
    ]
  ],
  [
    958,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        957,
        0
      ],
      [
        957,
        0
      ]
    ]
  ],
  [
    959,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        958,
        0
      ]
    ]
  ],
  [
    962,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        959,
        0
      ],
      [
        961,
        0
      ]
    ]
  ],
  [
    963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        962,
        0
      ]
    ]
  ],
  [
    966,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        963,
        0
      ],
      [
        965,
        0
      ]
    ]
  ],
  [
    967,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        966,
        0
      ]
    ]
  ],
  [
    968,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        967,
        0
      ]
    ]
  ],
  [
    969,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        968,
        0
      ]
    ]
  ],
  [
    970,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        957,
        0
      ],
      [
        969,
        0
      ]
    ]
  ],
  [
    972,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        970,
        0
      ],
      [
        971,
        0
      ]
    ]
  ],
  [
    974,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        972,
        0
      ],
      [
        973,
        0
      ]
    ]
  ],
  [
    1008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        64,
        0
      ]
    ]
  ],
  [
    976,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        62,
        0
      ]
    ]
  ],
  [
    975,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        974,
        0
      ],
      [
        89,
        0
      ]
    ]
  ],
  [
    977,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        976,
        0
      ],
      [
        975,
        0
      ]
    ]
  ],
  [
    996,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        977,
        0
      ]
    ]
  ],
  [
    997,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        996,
        0
      ]
    ]
  ],
  [
    998,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        997,
        0
      ]
    ]
  ],
  [
    992,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    993,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        992,
        0
      ]
    ]
  ],
  [
    990,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        237,
        0
      ]
    ]
  ],
  [
    978,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        977,
        0
      ]
    ]
  ],
  [
    979,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        978,
        0
      ]
    ]
  ],
  [
    980,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        979,
        0
      ]
    ]
  ],
  [
    981,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        977,
        0
      ]
    ]
  ],
  [
    982,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        981,
        0
      ]
    ]
  ],
  [
    983,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        982,
        0
      ]
    ]
  ],
  [
    988,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        983,
        0
      ],
      [
        980,
        0
      ]
    ]
  ],
  [
    991,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        988,
        0
      ],
      [
        990,
        0
      ]
    ]
  ],
  [
    994,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        991,
        0
      ],
      [
        993,
        0
      ]
    ]
  ],
  [
    1507,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        994,
        0
      ]
    ]
  ],
  [
    1508,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        994,
        0
      ],
      [
        1507,
        0
      ]
    ]
  ],
  [
    1509,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1508,
        0
      ]
    ]
  ],
  [
    1510,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1508,
        0
      ],
      [
        1509,
        0
      ]
    ]
  ],
  [
    1003,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1510,
        0
      ],
      [
        998,
        0
      ]
    ]
  ],
  [
    1005,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        1003,
        0
      ]
    ]
  ],
  [
    1006,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1005,
        0
      ]
    ]
  ],
  [
    1007,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        1006,
        0
      ],
      [
        155,
        0
      ]
    ]
  ],
  [
    1009,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1008,
        0
      ],
      [
        1007,
        0
      ]
    ]
  ],
  [
    1010,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1009,
        0
      ],
      [
        974,
        0
      ]
    ]
  ],
  [
    1013,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1012,
        0
      ]
    ]
  ],
  [
    1011,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1010,
        0
      ]
    ]
  ],
  [
    1014,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1011,
        0
      ],
      [
        1013,
        0
      ]
    ]
  ],
  [
    1015,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1014,
        0
      ]
    ]
  ],
  [
    1016,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1015,
        0
      ]
    ]
  ],
  [
    1017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1016,
        0
      ]
    ]
  ],
  [
    1018,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1010,
        0
      ],
      [
        1017,
        0
      ]
    ]
  ],
  [
    1026,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1460,
        0
      ]
    ]
  ],
  [
    1022,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1021,
        0
      ]
    ]
  ],
  [
    1019,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1018,
        0
      ],
      [
        1018,
        0
      ]
    ]
  ],
  [
    1020,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1019,
        0
      ]
    ]
  ],
  [
    1023,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1020,
        0
      ],
      [
        1022,
        0
      ]
    ]
  ],
  [
    1024,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1023,
        0
      ]
    ]
  ],
  [
    1027,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1024,
        0
      ],
      [
        1026,
        0
      ]
    ]
  ],
  [
    1028,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1027,
        0
      ]
    ]
  ],
  [
    1029,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1028,
        0
      ]
    ]
  ],
  [
    1030,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1029,
        0
      ]
    ]
  ],
  [
    1031,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1018,
        0
      ],
      [
        1030,
        0
      ]
    ]
  ],
  [
    1033,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1031,
        0
      ],
      [
        1032,
        0
      ]
    ]
  ],
  [
    1035,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1033,
        0
      ],
      [
        1034,
        0
      ]
    ]
  ],
  [
    1041,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        68,
        0
      ]
    ]
  ],
  [
    1037,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        66,
        0
      ]
    ]
  ],
  [
    1036,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        1035,
        0
      ],
      [
        81,
        0
      ]
    ]
  ],
  [
    1038,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1037,
        0
      ],
      [
        1036,
        0
      ]
    ]
  ],
  [
    1039,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        1038,
        0
      ]
    ]
  ],
  [
    1040,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        1039,
        0
      ],
      [
        126,
        0
      ]
    ]
  ],
  [
    1042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1041,
        0
      ],
      [
        1040,
        0
      ]
    ]
  ],
  [
    1043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1042,
        0
      ],
      [
        1035,
        0
      ]
    ]
  ],
  [
    1046,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1045,
        0
      ]
    ]
  ],
  [
    1044,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1043,
        0
      ]
    ]
  ],
  [
    1047,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1044,
        0
      ],
      [
        1046,
        0
      ]
    ]
  ],
  [
    1048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1047,
        0
      ]
    ]
  ],
  [
    1049,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1048,
        0
      ]
    ]
  ],
  [
    1050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1049,
        0
      ]
    ]
  ],
  [
    1051,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1043,
        0
      ],
      [
        1050,
        0
      ]
    ]
  ],
  [
    1059,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1470,
        0
      ]
    ]
  ],
  [
    1055,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1054,
        0
      ]
    ]
  ],
  [
    1052,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1051,
        0
      ],
      [
        1051,
        0
      ]
    ]
  ],
  [
    1053,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1052,
        0
      ]
    ]
  ],
  [
    1056,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1053,
        0
      ],
      [
        1055,
        0
      ]
    ]
  ],
  [
    1057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1056,
        0
      ]
    ]
  ],
  [
    1060,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1057,
        0
      ],
      [
        1059,
        0
      ]
    ]
  ],
  [
    1061,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1060,
        0
      ]
    ]
  ],
  [
    1062,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1061,
        0
      ]
    ]
  ],
  [
    1063,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1062,
        0
      ]
    ]
  ],
  [
    1064,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1051,
        0
      ],
      [
        1063,
        0
      ]
    ]
  ],
  [
    1066,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1064,
        0
      ],
      [
        1065,
        0
      ]
    ]
  ],
  [
    1068,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1066,
        0
      ],
      [
        1067,
        0
      ]
    ]
  ],
  [
    1102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        72,
        0
      ]
    ]
  ],
  [
    1070,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        70,
        0
      ]
    ]
  ],
  [
    1069,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        1068,
        0
      ],
      [
        220,
        0
      ]
    ]
  ],
  [
    1071,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        1070,
        0
      ],
      [
        1069,
        0
      ]
    ]
  ],
  [
    1090,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1071,
        0
      ]
    ]
  ],
  [
    1091,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1090,
        0
      ]
    ]
  ],
  [
    1092,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1091,
        0
      ]
    ]
  ],
  [
    1086,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    1087,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1086,
        0
      ]
    ]
  ],
  [
    1084,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        118,
        0
      ]
    ]
  ],
  [
    1072,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1071,
        0
      ]
    ]
  ],
  [
    1073,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1072,
        0
      ]
    ]
  ],
  [
    1074,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1073,
        0
      ]
    ]
  ],
  [
    1075,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1071,
        0
      ]
    ]
  ],
  [
    1076,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1075,
        0
      ]
    ]
  ],
  [
    1077,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1076,
        0
      ]
    ]
  ],
  [
    1082,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1077,
        0
      ],
      [
        1074,
        0
      ]
    ]
  ],
  [
    1085,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        1082,
        0
      ],
      [
        1084,
        0
      ]
    ]
  ],
  [
    1088,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        1085,
        0
      ],
      [
        1087,
        0
      ]
    ]
  ],
  [
    1511,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1088,
        0
      ]
    ]
  ],
  [
    1512,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1088,
        0
      ],
      [
        1511,
        0
      ]
    ]
  ],
  [
    1513,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1512,
        0
      ]
    ]
  ],
  [
    1514,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1512,
        0
      ],
      [
        1513,
        0
      ]
    ]
  ],
  [
    1097,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1514,
        0
      ],
      [
        1092,
        0
      ]
    ]
  ],
  [
    1099,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        1097,
        0
      ]
    ]
  ],
  [
    1100,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1099,
        0
      ]
    ]
  ],
  [
    1101,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        1100,
        0
      ],
      [
        211,
        0
      ]
    ]
  ],
  [
    1103,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1102,
        0
      ],
      [
        1101,
        0
      ]
    ]
  ],
  [
    1104,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1103,
        0
      ],
      [
        1068,
        0
      ]
    ]
  ],
  [
    1107,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1106,
        0
      ]
    ]
  ],
  [
    1105,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1104,
        0
      ]
    ]
  ],
  [
    1108,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1105,
        0
      ],
      [
        1107,
        0
      ]
    ]
  ],
  [
    1109,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1108,
        0
      ]
    ]
  ],
  [
    1110,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1109,
        0
      ]
    ]
  ],
  [
    1111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1110,
        0
      ]
    ]
  ],
  [
    1112,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1104,
        0
      ],
      [
        1111,
        0
      ]
    ]
  ],
  [
    1120,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1471,
        0
      ]
    ]
  ],
  [
    1116,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1115,
        0
      ]
    ]
  ],
  [
    1113,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1112,
        0
      ],
      [
        1112,
        0
      ]
    ]
  ],
  [
    1114,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1113,
        0
      ]
    ]
  ],
  [
    1117,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1114,
        0
      ],
      [
        1116,
        0
      ]
    ]
  ],
  [
    1118,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1117,
        0
      ]
    ]
  ],
  [
    1121,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1118,
        0
      ],
      [
        1120,
        0
      ]
    ]
  ],
  [
    1122,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1121,
        0
      ]
    ]
  ],
  [
    1123,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1122,
        0
      ]
    ]
  ],
  [
    1124,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1123,
        0
      ]
    ]
  ],
  [
    1125,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1112,
        0
      ],
      [
        1124,
        0
      ]
    ]
  ],
  [
    1127,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1125,
        0
      ],
      [
        1126,
        0
      ]
    ]
  ],
  [
    1129,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1127,
        0
      ],
      [
        1128,
        0
      ]
    ]
  ],
  [
    1135,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        76,
        0
      ]
    ]
  ],
  [
    1131,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        74,
        0
      ]
    ]
  ],
  [
    1130,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        1129,
        0
      ],
      [
        224,
        0
      ]
    ]
  ],
  [
    1132,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1131,
        0
      ],
      [
        1130,
        0
      ]
    ]
  ],
  [
    1133,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        1132,
        0
      ]
    ]
  ],
  [
    1134,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        1133,
        0
      ],
      [
        164,
        0
      ]
    ]
  ],
  [
    1136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1135,
        0
      ],
      [
        1134,
        0
      ]
    ]
  ],
  [
    1137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1136,
        0
      ],
      [
        1129,
        0
      ]
    ]
  ],
  [
    1140,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1139,
        0
      ]
    ]
  ],
  [
    1138,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1137,
        0
      ]
    ]
  ],
  [
    1141,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1138,
        0
      ],
      [
        1140,
        0
      ]
    ]
  ],
  [
    1142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1141,
        0
      ]
    ]
  ],
  [
    1143,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1142,
        0
      ]
    ]
  ],
  [
    1144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1143,
        0
      ]
    ]
  ],
  [
    1145,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1137,
        0
      ],
      [
        1144,
        0
      ]
    ]
  ],
  [
    1153,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1472,
        0
      ]
    ]
  ],
  [
    1149,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1148,
        0
      ]
    ]
  ],
  [
    1146,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1145,
        0
      ],
      [
        1145,
        0
      ]
    ]
  ],
  [
    1147,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1146,
        0
      ]
    ]
  ],
  [
    1150,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1147,
        0
      ],
      [
        1149,
        0
      ]
    ]
  ],
  [
    1151,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1150,
        0
      ]
    ]
  ],
  [
    1154,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1151,
        0
      ],
      [
        1153,
        0
      ]
    ]
  ],
  [
    1155,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1154,
        0
      ]
    ]
  ],
  [
    1156,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1155,
        0
      ]
    ]
  ],
  [
    1157,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1156,
        0
      ]
    ]
  ],
  [
    1158,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1145,
        0
      ],
      [
        1157,
        0
      ]
    ]
  ],
  [
    1160,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1158,
        0
      ],
      [
        1159,
        0
      ]
    ]
  ],
  [
    1162,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1160,
        0
      ],
      [
        1161,
        0
      ]
    ]
  ],
  [
    1196,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        80,
        0
      ]
    ]
  ],
  [
    1164,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        78,
        0
      ]
    ]
  ],
  [
    1163,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        1162,
        0
      ],
      [
        259,
        0
      ]
    ]
  ],
  [
    1165,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        1164,
        0
      ],
      [
        1163,
        0
      ]
    ]
  ],
  [
    1184,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1165,
        0
      ]
    ]
  ],
  [
    1185,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1184,
        0
      ]
    ]
  ],
  [
    1186,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1185,
        0
      ]
    ]
  ],
  [
    1180,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    1181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1180,
        0
      ]
    ]
  ],
  [
    1178,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        232,
        0
      ]
    ]
  ],
  [
    1166,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1165,
        0
      ]
    ]
  ],
  [
    1167,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1166,
        0
      ]
    ]
  ],
  [
    1168,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1167,
        0
      ]
    ]
  ],
  [
    1169,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1165,
        0
      ]
    ]
  ],
  [
    1170,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1169,
        0
      ]
    ]
  ],
  [
    1171,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1170,
        0
      ]
    ]
  ],
  [
    1176,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1171,
        0
      ],
      [
        1168,
        0
      ]
    ]
  ],
  [
    1179,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        1176,
        0
      ],
      [
        1178,
        0
      ]
    ]
  ],
  [
    1182,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        1179,
        0
      ],
      [
        1181,
        0
      ]
    ]
  ],
  [
    1515,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1182,
        0
      ]
    ]
  ],
  [
    1516,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1182,
        0
      ],
      [
        1515,
        0
      ]
    ]
  ],
  [
    1517,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1516,
        0
      ]
    ]
  ],
  [
    1518,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1516,
        0
      ],
      [
        1517,
        0
      ]
    ]
  ],
  [
    1191,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1518,
        0
      ],
      [
        1186,
        0
      ]
    ]
  ],
  [
    1193,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        1191,
        0
      ]
    ]
  ],
  [
    1194,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1193,
        0
      ]
    ]
  ],
  [
    1195,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        1194,
        0
      ],
      [
        140,
        0
      ]
    ]
  ],
  [
    1197,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1196,
        0
      ],
      [
        1195,
        0
      ]
    ]
  ],
  [
    1198,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1197,
        0
      ],
      [
        1162,
        0
      ]
    ]
  ],
  [
    1201,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1200,
        0
      ]
    ]
  ],
  [
    1199,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1198,
        0
      ]
    ]
  ],
  [
    1202,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1199,
        0
      ],
      [
        1201,
        0
      ]
    ]
  ],
  [
    1203,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1202,
        0
      ]
    ]
  ],
  [
    1204,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1203,
        0
      ]
    ]
  ],
  [
    1205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1204,
        0
      ]
    ]
  ],
  [
    1206,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1198,
        0
      ],
      [
        1205,
        0
      ]
    ]
  ],
  [
    1214,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1473,
        0
      ]
    ]
  ],
  [
    1210,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1209,
        0
      ]
    ]
  ],
  [
    1207,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1206,
        0
      ],
      [
        1206,
        0
      ]
    ]
  ],
  [
    1208,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1207,
        0
      ]
    ]
  ],
  [
    1211,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1208,
        0
      ],
      [
        1210,
        0
      ]
    ]
  ],
  [
    1212,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1211,
        0
      ]
    ]
  ],
  [
    1215,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1212,
        0
      ],
      [
        1214,
        0
      ]
    ]
  ],
  [
    1216,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1215,
        0
      ]
    ]
  ],
  [
    1217,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1216,
        0
      ]
    ]
  ],
  [
    1218,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1217,
        0
      ]
    ]
  ],
  [
    1219,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1206,
        0
      ],
      [
        1218,
        0
      ]
    ]
  ],
  [
    1221,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1219,
        0
      ],
      [
        1220,
        0
      ]
    ]
  ],
  [
    1223,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1221,
        0
      ],
      [
        1222,
        0
      ]
    ]
  ],
  [
    1229,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        84,
        0
      ]
    ]
  ],
  [
    1225,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        82,
        0
      ]
    ]
  ],
  [
    1224,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        1223,
        0
      ],
      [
        15,
        0
      ]
    ]
  ],
  [
    1226,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1225,
        0
      ],
      [
        1224,
        0
      ]
    ]
  ],
  [
    1227,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        1226,
        0
      ]
    ]
  ],
  [
    1228,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        1227,
        0
      ],
      [
        49,
        0
      ]
    ]
  ],
  [
    1230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1229,
        0
      ],
      [
        1228,
        0
      ]
    ]
  ],
  [
    1231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1230,
        0
      ],
      [
        1223,
        0
      ]
    ]
  ],
  [
    1234,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1233,
        0
      ]
    ]
  ],
  [
    1232,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1231,
        0
      ]
    ]
  ],
  [
    1235,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1232,
        0
      ],
      [
        1234,
        0
      ]
    ]
  ],
  [
    1236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1235,
        0
      ]
    ]
  ],
  [
    1237,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1236,
        0
      ]
    ]
  ],
  [
    1238,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1237,
        0
      ]
    ]
  ],
  [
    1239,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1231,
        0
      ],
      [
        1238,
        0
      ]
    ]
  ],
  [
    1247,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1474,
        0
      ]
    ]
  ],
  [
    1243,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1242,
        0
      ]
    ]
  ],
  [
    1240,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1239,
        0
      ],
      [
        1239,
        0
      ]
    ]
  ],
  [
    1241,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1240,
        0
      ]
    ]
  ],
  [
    1244,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1241,
        0
      ],
      [
        1243,
        0
      ]
    ]
  ],
  [
    1245,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1244,
        0
      ]
    ]
  ],
  [
    1248,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1245,
        0
      ],
      [
        1247,
        0
      ]
    ]
  ],
  [
    1249,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1248,
        0
      ]
    ]
  ],
  [
    1250,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1249,
        0
      ]
    ]
  ],
  [
    1251,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1250,
        0
      ]
    ]
  ],
  [
    1252,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1239,
        0
      ],
      [
        1251,
        0
      ]
    ]
  ],
  [
    1254,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1252,
        0
      ],
      [
        1253,
        0
      ]
    ]
  ],
  [
    1256,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1254,
        0
      ],
      [
        1255,
        0
      ]
    ]
  ],
  [
    1290,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        88,
        0
      ]
    ]
  ],
  [
    1258,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        86,
        0
      ]
    ]
  ],
  [
    1257,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        1256,
        0
      ],
      [
        27,
        0
      ]
    ]
  ],
  [
    1259,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        1258,
        0
      ],
      [
        1257,
        0
      ]
    ]
  ],
  [
    1278,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1259,
        0
      ]
    ]
  ],
  [
    1279,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1278,
        0
      ]
    ]
  ],
  [
    1280,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1279,
        0
      ]
    ]
  ],
  [
    1274,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    1275,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1274,
        0
      ]
    ]
  ],
  [
    1272,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        231,
        0
      ]
    ]
  ],
  [
    1260,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1259,
        0
      ]
    ]
  ],
  [
    1261,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1260,
        0
      ]
    ]
  ],
  [
    1262,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1261,
        0
      ]
    ]
  ],
  [
    1263,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1259,
        0
      ]
    ]
  ],
  [
    1264,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1263,
        0
      ]
    ]
  ],
  [
    1265,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1264,
        0
      ]
    ]
  ],
  [
    1270,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1265,
        0
      ],
      [
        1262,
        0
      ]
    ]
  ],
  [
    1273,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        1270,
        0
      ],
      [
        1272,
        0
      ]
    ]
  ],
  [
    1276,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        1273,
        0
      ],
      [
        1275,
        0
      ]
    ]
  ],
  [
    1519,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1276,
        0
      ]
    ]
  ],
  [
    1520,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1276,
        0
      ],
      [
        1519,
        0
      ]
    ]
  ],
  [
    1521,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1520,
        0
      ]
    ]
  ],
  [
    1522,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1520,
        0
      ],
      [
        1521,
        0
      ]
    ]
  ],
  [
    1285,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1522,
        0
      ],
      [
        1280,
        0
      ]
    ]
  ],
  [
    1287,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        1285,
        0
      ]
    ]
  ],
  [
    1288,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1287,
        0
      ]
    ]
  ],
  [
    1289,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        1288,
        0
      ],
      [
        252,
        0
      ]
    ]
  ],
  [
    1291,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1290,
        0
      ],
      [
        1289,
        0
      ]
    ]
  ],
  [
    1292,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1291,
        0
      ],
      [
        1256,
        0
      ]
    ]
  ],
  [
    1295,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1294,
        0
      ]
    ]
  ],
  [
    1293,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1292,
        0
      ]
    ]
  ],
  [
    1296,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1293,
        0
      ],
      [
        1295,
        0
      ]
    ]
  ],
  [
    1297,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1296,
        0
      ]
    ]
  ],
  [
    1298,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1297,
        0
      ]
    ]
  ],
  [
    1299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1298,
        0
      ]
    ]
  ],
  [
    1300,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1292,
        0
      ],
      [
        1299,
        0
      ]
    ]
  ],
  [
    1308,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1475,
        0
      ]
    ]
  ],
  [
    1304,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1303,
        0
      ]
    ]
  ],
  [
    1301,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1300,
        0
      ],
      [
        1300,
        0
      ]
    ]
  ],
  [
    1302,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1301,
        0
      ]
    ]
  ],
  [
    1305,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1302,
        0
      ],
      [
        1304,
        0
      ]
    ]
  ],
  [
    1306,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1305,
        0
      ]
    ]
  ],
  [
    1309,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1306,
        0
      ],
      [
        1308,
        0
      ]
    ]
  ],
  [
    1310,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1309,
        0
      ]
    ]
  ],
  [
    1311,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1310,
        0
      ]
    ]
  ],
  [
    1312,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1311,
        0
      ]
    ]
  ],
  [
    1313,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1300,
        0
      ],
      [
        1312,
        0
      ]
    ]
  ],
  [
    1315,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1313,
        0
      ],
      [
        1314,
        0
      ]
    ]
  ],
  [
    1317,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1315,
        0
      ],
      [
        1316,
        0
      ]
    ]
  ],
  [
    1323,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        92,
        0
      ]
    ]
  ],
  [
    1319,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        90,
        0
      ]
    ]
  ],
  [
    1318,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        1317,
        0
      ],
      [
        61,
        0
      ]
    ]
  ],
  [
    1320,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1319,
        0
      ],
      [
        1318,
        0
      ]
    ]
  ],
  [
    1321,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        1320,
        0
      ]
    ]
  ],
  [
    1322,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        1321,
        0
      ],
      [
        165,
        0
      ]
    ]
  ],
  [
    1324,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1323,
        0
      ],
      [
        1322,
        0
      ]
    ]
  ],
  [
    1325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1324,
        0
      ],
      [
        1317,
        0
      ]
    ]
  ],
  [
    1328,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1327,
        0
      ]
    ]
  ],
  [
    1326,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1325,
        0
      ]
    ]
  ],
  [
    1329,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1326,
        0
      ],
      [
        1328,
        0
      ]
    ]
  ],
  [
    1330,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1329,
        0
      ]
    ]
  ],
  [
    1331,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1330,
        0
      ]
    ]
  ],
  [
    1332,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1331,
        0
      ]
    ]
  ],
  [
    1333,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1325,
        0
      ],
      [
        1332,
        0
      ]
    ]
  ],
  [
    1341,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1476,
        0
      ]
    ]
  ],
  [
    1337,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1336,
        0
      ]
    ]
  ],
  [
    1334,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1333,
        0
      ],
      [
        1333,
        0
      ]
    ]
  ],
  [
    1335,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1334,
        0
      ]
    ]
  ],
  [
    1338,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1335,
        0
      ],
      [
        1337,
        0
      ]
    ]
  ],
  [
    1339,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1338,
        0
      ]
    ]
  ],
  [
    1342,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1339,
        0
      ],
      [
        1341,
        0
      ]
    ]
  ],
  [
    1343,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1342,
        0
      ]
    ]
  ],
  [
    1344,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1343,
        0
      ]
    ]
  ],
  [
    1345,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1344,
        0
      ]
    ]
  ],
  [
    1346,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1333,
        0
      ],
      [
        1345,
        0
      ]
    ]
  ],
  [
    1348,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1346,
        0
      ],
      [
        1347,
        0
      ]
    ]
  ],
  [
    1350,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1348,
        0
      ],
      [
        1349,
        0
      ]
    ]
  ],
  [
    1384,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        96,
        0
      ]
    ]
  ],
  [
    1352,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2304]} })  ",
    "Broadcast",
    [
      [
        94,
        0
      ]
    ]
  ],
  [
    1351,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 2304]} })  ",
    "Dot",
    [
      [
        1350,
        0
      ],
      [
        273,
        0
      ]
    ]
  ],
  [
    1353,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Add",
    [
      [
        1352,
        0
      ],
      [
        1351,
        0
      ]
    ]
  ],
  [
    1372,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1536] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    1373,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1372,
        0
      ]
    ]
  ],
  [
    1374,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1373,
        0
      ]
    ]
  ],
  [
    1368,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        333,
        0
      ]
    ]
  ],
  [
    1369,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 12, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1368,
        0
      ]
    ]
  ],
  [
    1366,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 12, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        264,
        0
      ]
    ]
  ],
  [
    1354,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 768] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    1355,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1354,
        0
      ]
    ]
  ],
  [
    1356,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1355,
        0
      ]
    ]
  ],
  [
    1357,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 2304]} })  ",
    "Slice",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    1358,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 12, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1357,
        0
      ]
    ]
  ],
  [
    1359,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} })  ",
    "Reshape",
    [
      [
        1358,
        0
      ]
    ]
  ],
  [
    1364,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1359,
        0
      ],
      [
        1356,
        0
      ]
    ]
  ],
  [
    1367,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Divide",
    [
      [
        1364,
        0
      ],
      [
        1366,
        0
      ]
    ]
  ],
  [
    1370,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "Add",
    [
      [
        1367,
        0
      ],
      [
        1369,
        0
      ]
    ]
  ],
  [
    1523,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1370,
        0
      ]
    ]
  ],
  [
    1524,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1370,
        0
      ],
      [
        1523,
        0
      ]
    ]
  ],
  [
    1525,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1524,
        0
      ]
    ]
  ],
  [
    1526,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1524,
        0
      ],
      [
        1525,
        0
      ]
    ]
  ],
  [
    1379,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        1526,
        0
      ],
      [
        1374,
        0
      ]
    ]
  ],
  [
    1381,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 12, 66, 64]} })  ",
    "Reshape",
    [
      [
        1379,
        0
      ]
    ]
  ],
  [
    1382,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 12, N2 / 1 % 64] where N2 in 768;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1381,
        0
      ]
    ]
  ],
  [
    1383,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        1382,
        0
      ],
      [
        65,
        0
      ]
    ]
  ],
  [
    1385,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1384,
        0
      ],
      [
        1383,
        0
      ]
    ]
  ],
  [
    1386,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1385,
        0
      ],
      [
        1350,
        0
      ]
    ]
  ],
  [
    1389,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1388,
        0
      ]
    ]
  ],
  [
    1387,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1386,
        0
      ]
    ]
  ],
  [
    1390,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1387,
        0
      ],
      [
        1389,
        0
      ]
    ]
  ],
  [
    1391,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1390,
        0
      ]
    ]
  ],
  [
    1392,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1391,
        0
      ]
    ]
  ],
  [
    1393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1392,
        0
      ]
    ]
  ],
  [
    1394,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1386,
        0
      ],
      [
        1393,
        0
      ]
    ]
  ],
  [
    1402,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1477,
        0
      ]
    ]
  ],
  [
    1398,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1397,
        0
      ]
    ]
  ],
  [
    1395,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1394,
        0
      ],
      [
        1394,
        0
      ]
    ]
  ],
  [
    1396,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1395,
        0
      ]
    ]
  ],
  [
    1399,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1396,
        0
      ],
      [
        1398,
        0
      ]
    ]
  ],
  [
    1400,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1399,
        0
      ]
    ]
  ],
  [
    1403,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1400,
        0
      ],
      [
        1402,
        0
      ]
    ]
  ],
  [
    1404,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1403,
        0
      ]
    ]
  ],
  [
    1405,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1404,
        0
      ]
    ]
  ],
  [
    1406,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1405,
        0
      ]
    ]
  ],
  [
    1407,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1394,
        0
      ],
      [
        1406,
        0
      ]
    ]
  ],
  [
    1409,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1407,
        0
      ],
      [
        1408,
        0
      ]
    ]
  ],
  [
    1411,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1409,
        0
      ],
      [
        1410,
        0
      ]
    ]
  ],
  [
    1417,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [768]} })  ",
    "Broadcast",
    [
      [
        100,
        0
      ]
    ]
  ],
  [
    1413,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        98,
        0
      ]
    ]
  ],
  [
    1412,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 3072]} })  ",
    "Dot",
    [
      [
        1411,
        0
      ],
      [
        57,
        0
      ]
    ]
  ],
  [
    1414,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1413,
        0
      ],
      [
        1412,
        0
      ]
    ]
  ],
  [
    1415,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Relu",
    [
      [
        1414,
        0
      ]
    ]
  ],
  [
    1416,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [3072, 768]} })  ",
    "Dot",
    [
      [
        1415,
        0
      ],
      [
        75,
        0
      ]
    ]
  ],
  [
    1418,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1417,
        0
      ],
      [
        1416,
        0
      ]
    ]
  ],
  [
    1419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1418,
        0
      ],
      [
        1411,
        0
      ]
    ]
  ],
  [
    1422,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1421,
        0
      ]
    ]
  ],
  [
    1420,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1419,
        0
      ]
    ]
  ],
  [
    1423,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1420,
        0
      ],
      [
        1422,
        0
      ]
    ]
  ],
  [
    1424,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1423,
        0
      ]
    ]
  ],
  [
    1425,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1424,
        0
      ]
    ]
  ],
  [
    1426,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1425,
        0
      ]
    ]
  ],
  [
    1427,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Subtract",
    [
      [
        1419,
        0
      ],
      [
        1426,
        0
      ]
    ]
  ],
  [
    1435,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1478,
        0
      ]
    ]
  ],
  [
    1431,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1430,
        0
      ]
    ]
  ],
  [
    1428,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1427,
        0
      ],
      [
        1427,
        0
      ]
    ]
  ],
  [
    1429,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Sum",
    [
      [
        1428,
        0
      ]
    ]
  ],
  [
    1432,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1429,
        0
      ],
      [
        1431,
        0
      ]
    ]
  ],
  [
    1433,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1432,
        0
      ]
    ]
  ],
  [
    1436,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1433,
        0
      ],
      [
        1435,
        0
      ]
    ]
  ],
  [
    1437,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1436,
        0
      ]
    ]
  ],
  [
    1438,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1437,
        0
      ]
    ]
  ],
  [
    1439,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 768; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1438,
        0
      ]
    ]
  ],
  [
    1440,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Divide",
    [
      [
        1427,
        0
      ],
      [
        1439,
        0
      ]
    ]
  ],
  [
    1442,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Multiply",
    [
      [
        1440,
        0
      ],
      [
        1441,
        0
      ]
    ]
  ],
  [
    1444,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Add",
    [
      [
        1442,
        0
      ],
      [
        1443,
        0
      ]
    ]
  ],
  [
    1445,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 768]} })  ",
    "Slice",
    [
      [
        1444,
        0
      ]
    ]
  ],
  [
    1528,
    " - einstein_v2(\" output0[N, M] +=! input0[N, K] * input1[M, K]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [768, 768]} })  ",
    "Dot",
    [
      [
        1445,
        0
      ],
      [
        101,
        0
      ]
    ]
  ],
  [
    1448,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1] + input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 768]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 768]} })  ",
    "Add",
    [
      [
        1528,
        0
      ],
      [
        1447,
        0
      ]
    ]
  ],
  [
    1449,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1].call(`tanh`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 768]} })  ",
    "Tanh",
    [
      [
        1448,
        0
      ]
    ]
  ],
  [
    1451,
    "",
    "Result",
    [
      [
        1449,
        0
      ]
    ]
  ],
  [
    1450,
    "",
    "Result",
    [
      [
        1444,
        0
      ]
    ]
  ]
]