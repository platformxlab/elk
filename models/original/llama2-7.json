[
  [
    4324,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1182,
        0
      ]
    ]
  ],
  [
    4296,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1180,
        0
      ]
    ]
  ],
  [
    1191,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1181,
        0
      ]
    ]
  ],
  [
    4947,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1191,
        0
      ],
      [
        4296,
        0
      ],
      [
        4324,
        0
      ]
    ]
  ],
  [
    4244,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1187,
        0
      ]
    ]
  ],
  [
    1316,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[G3, N2] g input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [32000, 4096]} ,  \"input1\" : { \"dtype\" : \"int32\", \"shape\" : [99, 66]} })  ",
    "GatherV2",
    [
      [
        900,
        0
      ],
      [
        899,
        0
      ]
    ]
  ],
  [
    1314,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        904,
        0
      ]
    ]
  ],
  [
    1374,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        903,
        0
      ]
    ]
  ],
  [
    1346,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        901,
        0
      ]
    ]
  ],
  [
    1315,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        902,
        0
      ]
    ]
  ],
  [
    4668,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1315,
        0
      ],
      [
        1346,
        0
      ],
      [
        1374,
        0
      ]
    ]
  ],
  [
    1330,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        908,
        0
      ]
    ]
  ],
  [
    1324,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4444,
        0
      ]
    ]
  ],
  [
    1320,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1319,
        0
      ]
    ]
  ],
  [
    1317,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1316,
        0
      ],
      [
        1316,
        0
      ]
    ]
  ],
  [
    1318,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1317,
        0
      ]
    ]
  ],
  [
    1321,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1318,
        0
      ],
      [
        1320,
        0
      ]
    ]
  ],
  [
    1322,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1321,
        0
      ]
    ]
  ],
  [
    1325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1322,
        0
      ],
      [
        1324,
        0
      ]
    ]
  ],
  [
    1326,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1325,
        0
      ]
    ]
  ],
  [
    1327,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1326,
        0
      ]
    ]
  ],
  [
    1328,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1327,
        0
      ]
    ]
  ],
  [
    1329,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1316,
        0
      ],
      [
        1328,
        0
      ]
    ]
  ],
  [
    1331,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1330,
        0
      ],
      [
        1329,
        0
      ]
    ]
  ],
  [
    4669,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1331,
        0
      ],
      [
        4668,
        0
      ]
    ]
  ],
  [
    4672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4669,
        0
      ]
    ]
  ],
  [
    1376,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4672,
        0
      ]
    ]
  ],
  [
    1377,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1376,
        0
      ]
    ]
  ],
  [
    1371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4450,
        0
      ]
    ]
  ],
  [
    1368,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        26,
        0
      ]
    ]
  ],
  [
    1342,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4447,
        0
      ]
    ]
  ],
  [
    4670,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4669,
        0
      ]
    ]
  ],
  [
    1333,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4670,
        0
      ]
    ]
  ],
  [
    1343,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1333,
        0
      ],
      [
        1342,
        0
      ]
    ]
  ],
  [
    1339,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4446,
        0
      ]
    ]
  ],
  [
    1336,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1333,
        0
      ]
    ]
  ],
  [
    1334,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1333,
        0
      ]
    ]
  ],
  [
    1335,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1334,
        0
      ]
    ]
  ],
  [
    1337,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1335,
        0
      ],
      [
        1336,
        0
      ]
    ]
  ],
  [
    1340,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1337,
        0
      ],
      [
        1339,
        0
      ]
    ]
  ],
  [
    1344,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1343,
        0
      ],
      [
        1340,
        0
      ]
    ]
  ],
  [
    1345,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1344,
        0
      ]
    ]
  ],
  [
    1350,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4445,
        0
      ]
    ]
  ],
  [
    4671,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4669,
        0
      ]
    ]
  ],
  [
    1348,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4671,
        0
      ]
    ]
  ],
  [
    1351,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1348,
        0
      ],
      [
        1350,
        0
      ]
    ]
  ],
  [
    1352,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1351,
        0
      ]
    ]
  ],
  [
    1359,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4449,
        0
      ]
    ]
  ],
  [
    1353,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1348,
        0
      ]
    ]
  ],
  [
    1356,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    1354,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1353,
        0
      ]
    ]
  ],
  [
    1355,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1354,
        0
      ]
    ]
  ],
  [
    1357,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1355,
        0
      ],
      [
        1356,
        0
      ]
    ]
  ],
  [
    1360,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1357,
        0
      ],
      [
        1359,
        0
      ]
    ]
  ],
  [
    1361,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1352,
        0
      ],
      [
        1360,
        0
      ]
    ]
  ],
  [
    1366,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1361,
        0
      ],
      [
        1345,
        0
      ]
    ]
  ],
  [
    1369,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1366,
        0
      ],
      [
        1368,
        0
      ]
    ]
  ],
  [
    1372,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1369,
        0
      ],
      [
        1371,
        0
      ]
    ]
  ],
  [
    4956,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1372,
        0
      ]
    ]
  ],
  [
    4957,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1372,
        0
      ],
      [
        4956,
        0
      ]
    ]
  ],
  [
    4958,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4957,
        0
      ]
    ]
  ],
  [
    4959,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4957,
        0
      ],
      [
        4958,
        0
      ]
    ]
  ],
  [
    1382,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4959,
        0
      ],
      [
        1377,
        0
      ]
    ]
  ],
  [
    1384,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1382,
        0
      ]
    ]
  ],
  [
    1385,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1384,
        0
      ]
    ]
  ],
  [
    1386,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1385,
        0
      ],
      [
        1314,
        0
      ]
    ]
  ],
  [
    1387,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1316,
        0
      ],
      [
        1386,
        0
      ]
    ]
  ],
  [
    1312,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        907,
        0
      ]
    ]
  ],
  [
    1313,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        906,
        0
      ]
    ]
  ],
  [
    1404,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        905,
        0
      ]
    ]
  ],
  [
    4673,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1404,
        0
      ],
      [
        1313,
        0
      ]
    ]
  ],
  [
    1401,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        909,
        0
      ]
    ]
  ],
  [
    1395,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4451,
        0
      ]
    ]
  ],
  [
    1391,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1390,
        0
      ]
    ]
  ],
  [
    1388,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1387,
        0
      ],
      [
        1387,
        0
      ]
    ]
  ],
  [
    1389,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1388,
        0
      ]
    ]
  ],
  [
    1392,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1389,
        0
      ],
      [
        1391,
        0
      ]
    ]
  ],
  [
    1393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1392,
        0
      ]
    ]
  ],
  [
    1396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1393,
        0
      ],
      [
        1395,
        0
      ]
    ]
  ],
  [
    1397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1396,
        0
      ]
    ]
  ],
  [
    1398,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1397,
        0
      ]
    ]
  ],
  [
    1399,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1398,
        0
      ]
    ]
  ],
  [
    1400,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1387,
        0
      ],
      [
        1399,
        0
      ]
    ]
  ],
  [
    1402,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1401,
        0
      ],
      [
        1400,
        0
      ]
    ]
  ],
  [
    4674,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1402,
        0
      ],
      [
        4673,
        0
      ]
    ]
  ],
  [
    4676,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4674,
        0
      ]
    ]
  ],
  [
    4675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4674,
        0
      ]
    ]
  ],
  [
    1406,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4675,
        0
      ]
    ]
  ],
  [
    1407,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4675,
        0
      ],
      [
        1406,
        0
      ]
    ]
  ],
  [
    1408,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1407,
        0
      ],
      [
        4676,
        0
      ]
    ]
  ],
  [
    1409,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1408,
        0
      ],
      [
        1312,
        0
      ]
    ]
  ],
  [
    1410,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1387,
        0
      ],
      [
        1409,
        0
      ]
    ]
  ],
  [
    1310,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        913,
        0
      ]
    ]
  ],
  [
    1468,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        912,
        0
      ]
    ]
  ],
  [
    1440,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        910,
        0
      ]
    ]
  ],
  [
    1311,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        911,
        0
      ]
    ]
  ],
  [
    4677,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1311,
        0
      ],
      [
        1440,
        0
      ],
      [
        1468,
        0
      ]
    ]
  ],
  [
    1424,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        917,
        0
      ]
    ]
  ],
  [
    1418,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4448,
        0
      ]
    ]
  ],
  [
    1414,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1413,
        0
      ]
    ]
  ],
  [
    1411,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1410,
        0
      ],
      [
        1410,
        0
      ]
    ]
  ],
  [
    1412,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1411,
        0
      ]
    ]
  ],
  [
    1415,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1412,
        0
      ],
      [
        1414,
        0
      ]
    ]
  ],
  [
    1416,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1415,
        0
      ]
    ]
  ],
  [
    1419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1416,
        0
      ],
      [
        1418,
        0
      ]
    ]
  ],
  [
    1420,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1419,
        0
      ]
    ]
  ],
  [
    1421,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1420,
        0
      ]
    ]
  ],
  [
    1422,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1421,
        0
      ]
    ]
  ],
  [
    1423,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1410,
        0
      ],
      [
        1422,
        0
      ]
    ]
  ],
  [
    1425,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1424,
        0
      ],
      [
        1423,
        0
      ]
    ]
  ],
  [
    4678,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1425,
        0
      ],
      [
        4677,
        0
      ]
    ]
  ],
  [
    4681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4678,
        0
      ]
    ]
  ],
  [
    1470,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4681,
        0
      ]
    ]
  ],
  [
    1471,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1470,
        0
      ]
    ]
  ],
  [
    1465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4456,
        0
      ]
    ]
  ],
  [
    1462,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        40,
        0
      ]
    ]
  ],
  [
    1436,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4453,
        0
      ]
    ]
  ],
  [
    4679,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4678,
        0
      ]
    ]
  ],
  [
    1427,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4679,
        0
      ]
    ]
  ],
  [
    1437,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1427,
        0
      ],
      [
        1436,
        0
      ]
    ]
  ],
  [
    1433,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4452,
        0
      ]
    ]
  ],
  [
    1430,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1427,
        0
      ]
    ]
  ],
  [
    1428,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1427,
        0
      ]
    ]
  ],
  [
    1429,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1428,
        0
      ]
    ]
  ],
  [
    1431,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1429,
        0
      ],
      [
        1430,
        0
      ]
    ]
  ],
  [
    1434,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1431,
        0
      ],
      [
        1433,
        0
      ]
    ]
  ],
  [
    1438,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1437,
        0
      ],
      [
        1434,
        0
      ]
    ]
  ],
  [
    1439,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1438,
        0
      ]
    ]
  ],
  [
    1444,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4454,
        0
      ]
    ]
  ],
  [
    4680,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4678,
        0
      ]
    ]
  ],
  [
    1442,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4680,
        0
      ]
    ]
  ],
  [
    1445,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1442,
        0
      ],
      [
        1444,
        0
      ]
    ]
  ],
  [
    1446,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1445,
        0
      ]
    ]
  ],
  [
    1453,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4455,
        0
      ]
    ]
  ],
  [
    1447,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1442,
        0
      ]
    ]
  ],
  [
    1450,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1447,
        0
      ]
    ]
  ],
  [
    1448,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1447,
        0
      ]
    ]
  ],
  [
    1449,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1448,
        0
      ]
    ]
  ],
  [
    1451,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1449,
        0
      ],
      [
        1450,
        0
      ]
    ]
  ],
  [
    1454,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1451,
        0
      ],
      [
        1453,
        0
      ]
    ]
  ],
  [
    1455,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1446,
        0
      ],
      [
        1454,
        0
      ]
    ]
  ],
  [
    1460,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1455,
        0
      ],
      [
        1439,
        0
      ]
    ]
  ],
  [
    1463,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1460,
        0
      ],
      [
        1462,
        0
      ]
    ]
  ],
  [
    1466,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1463,
        0
      ],
      [
        1465,
        0
      ]
    ]
  ],
  [
    4960,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1466,
        0
      ]
    ]
  ],
  [
    4961,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1466,
        0
      ],
      [
        4960,
        0
      ]
    ]
  ],
  [
    4962,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4961,
        0
      ]
    ]
  ],
  [
    4963,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4961,
        0
      ],
      [
        4962,
        0
      ]
    ]
  ],
  [
    1476,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4963,
        0
      ],
      [
        1471,
        0
      ]
    ]
  ],
  [
    1478,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1476,
        0
      ]
    ]
  ],
  [
    1479,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1478,
        0
      ]
    ]
  ],
  [
    1480,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1479,
        0
      ],
      [
        1310,
        0
      ]
    ]
  ],
  [
    1481,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1410,
        0
      ],
      [
        1480,
        0
      ]
    ]
  ],
  [
    1308,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        916,
        0
      ]
    ]
  ],
  [
    1309,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        915,
        0
      ]
    ]
  ],
  [
    1498,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        914,
        0
      ]
    ]
  ],
  [
    4682,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1498,
        0
      ],
      [
        1309,
        0
      ]
    ]
  ],
  [
    1495,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        918,
        0
      ]
    ]
  ],
  [
    1489,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4457,
        0
      ]
    ]
  ],
  [
    1485,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1484,
        0
      ]
    ]
  ],
  [
    1482,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1481,
        0
      ],
      [
        1481,
        0
      ]
    ]
  ],
  [
    1483,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1482,
        0
      ]
    ]
  ],
  [
    1486,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1483,
        0
      ],
      [
        1485,
        0
      ]
    ]
  ],
  [
    1487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1486,
        0
      ]
    ]
  ],
  [
    1490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1487,
        0
      ],
      [
        1489,
        0
      ]
    ]
  ],
  [
    1491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1490,
        0
      ]
    ]
  ],
  [
    1492,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1491,
        0
      ]
    ]
  ],
  [
    1493,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1492,
        0
      ]
    ]
  ],
  [
    1494,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1481,
        0
      ],
      [
        1493,
        0
      ]
    ]
  ],
  [
    1496,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1495,
        0
      ],
      [
        1494,
        0
      ]
    ]
  ],
  [
    4683,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1496,
        0
      ],
      [
        4682,
        0
      ]
    ]
  ],
  [
    4685,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4683,
        0
      ]
    ]
  ],
  [
    4684,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4683,
        0
      ]
    ]
  ],
  [
    1500,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4684,
        0
      ]
    ]
  ],
  [
    1501,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4684,
        0
      ],
      [
        1500,
        0
      ]
    ]
  ],
  [
    1502,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1501,
        0
      ],
      [
        4685,
        0
      ]
    ]
  ],
  [
    1503,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1502,
        0
      ],
      [
        1308,
        0
      ]
    ]
  ],
  [
    1504,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1481,
        0
      ],
      [
        1503,
        0
      ]
    ]
  ],
  [
    1306,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        922,
        0
      ]
    ]
  ],
  [
    1562,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        921,
        0
      ]
    ]
  ],
  [
    1534,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        919,
        0
      ]
    ]
  ],
  [
    1307,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        920,
        0
      ]
    ]
  ],
  [
    4686,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1307,
        0
      ],
      [
        1534,
        0
      ],
      [
        1562,
        0
      ]
    ]
  ],
  [
    1518,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        926,
        0
      ]
    ]
  ],
  [
    1512,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4458,
        0
      ]
    ]
  ],
  [
    1508,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1507,
        0
      ]
    ]
  ],
  [
    1505,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1504,
        0
      ],
      [
        1504,
        0
      ]
    ]
  ],
  [
    1506,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1505,
        0
      ]
    ]
  ],
  [
    1509,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1506,
        0
      ],
      [
        1508,
        0
      ]
    ]
  ],
  [
    1510,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1509,
        0
      ]
    ]
  ],
  [
    1513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1510,
        0
      ],
      [
        1512,
        0
      ]
    ]
  ],
  [
    1514,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1513,
        0
      ]
    ]
  ],
  [
    1515,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1514,
        0
      ]
    ]
  ],
  [
    1516,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1515,
        0
      ]
    ]
  ],
  [
    1517,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1504,
        0
      ],
      [
        1516,
        0
      ]
    ]
  ],
  [
    1519,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1518,
        0
      ],
      [
        1517,
        0
      ]
    ]
  ],
  [
    4687,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1519,
        0
      ],
      [
        4686,
        0
      ]
    ]
  ],
  [
    4690,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4687,
        0
      ]
    ]
  ],
  [
    1564,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4690,
        0
      ]
    ]
  ],
  [
    1565,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1564,
        0
      ]
    ]
  ],
  [
    1559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4463,
        0
      ]
    ]
  ],
  [
    1556,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        53,
        0
      ]
    ]
  ],
  [
    1530,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4460,
        0
      ]
    ]
  ],
  [
    4688,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4687,
        0
      ]
    ]
  ],
  [
    1521,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4688,
        0
      ]
    ]
  ],
  [
    1531,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1521,
        0
      ],
      [
        1530,
        0
      ]
    ]
  ],
  [
    1527,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4459,
        0
      ]
    ]
  ],
  [
    1524,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1521,
        0
      ]
    ]
  ],
  [
    1522,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1521,
        0
      ]
    ]
  ],
  [
    1523,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1522,
        0
      ]
    ]
  ],
  [
    1525,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1523,
        0
      ],
      [
        1524,
        0
      ]
    ]
  ],
  [
    1528,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1525,
        0
      ],
      [
        1527,
        0
      ]
    ]
  ],
  [
    1532,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1531,
        0
      ],
      [
        1528,
        0
      ]
    ]
  ],
  [
    1533,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1532,
        0
      ]
    ]
  ],
  [
    1538,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4461,
        0
      ]
    ]
  ],
  [
    4689,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4687,
        0
      ]
    ]
  ],
  [
    1536,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4689,
        0
      ]
    ]
  ],
  [
    1539,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1536,
        0
      ],
      [
        1538,
        0
      ]
    ]
  ],
  [
    1540,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1539,
        0
      ]
    ]
  ],
  [
    1547,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4462,
        0
      ]
    ]
  ],
  [
    1541,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1536,
        0
      ]
    ]
  ],
  [
    1544,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1541,
        0
      ]
    ]
  ],
  [
    1542,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1541,
        0
      ]
    ]
  ],
  [
    1543,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1542,
        0
      ]
    ]
  ],
  [
    1545,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1543,
        0
      ],
      [
        1544,
        0
      ]
    ]
  ],
  [
    1548,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1545,
        0
      ],
      [
        1547,
        0
      ]
    ]
  ],
  [
    1549,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1540,
        0
      ],
      [
        1548,
        0
      ]
    ]
  ],
  [
    1554,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1549,
        0
      ],
      [
        1533,
        0
      ]
    ]
  ],
  [
    1557,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1554,
        0
      ],
      [
        1556,
        0
      ]
    ]
  ],
  [
    1560,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1557,
        0
      ],
      [
        1559,
        0
      ]
    ]
  ],
  [
    4964,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1560,
        0
      ]
    ]
  ],
  [
    4965,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1560,
        0
      ],
      [
        4964,
        0
      ]
    ]
  ],
  [
    4966,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4965,
        0
      ]
    ]
  ],
  [
    4967,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4965,
        0
      ],
      [
        4966,
        0
      ]
    ]
  ],
  [
    1570,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4967,
        0
      ],
      [
        1565,
        0
      ]
    ]
  ],
  [
    1572,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1570,
        0
      ]
    ]
  ],
  [
    1573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1572,
        0
      ]
    ]
  ],
  [
    1574,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1573,
        0
      ],
      [
        1306,
        0
      ]
    ]
  ],
  [
    1575,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1504,
        0
      ],
      [
        1574,
        0
      ]
    ]
  ],
  [
    1304,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        925,
        0
      ]
    ]
  ],
  [
    1305,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        924,
        0
      ]
    ]
  ],
  [
    1592,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        923,
        0
      ]
    ]
  ],
  [
    4691,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1592,
        0
      ],
      [
        1305,
        0
      ]
    ]
  ],
  [
    1589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        927,
        0
      ]
    ]
  ],
  [
    1583,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4464,
        0
      ]
    ]
  ],
  [
    1579,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1578,
        0
      ]
    ]
  ],
  [
    1576,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1575,
        0
      ],
      [
        1575,
        0
      ]
    ]
  ],
  [
    1577,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1576,
        0
      ]
    ]
  ],
  [
    1580,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1577,
        0
      ],
      [
        1579,
        0
      ]
    ]
  ],
  [
    1581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1580,
        0
      ]
    ]
  ],
  [
    1584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1581,
        0
      ],
      [
        1583,
        0
      ]
    ]
  ],
  [
    1585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1584,
        0
      ]
    ]
  ],
  [
    1586,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1585,
        0
      ]
    ]
  ],
  [
    1587,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1586,
        0
      ]
    ]
  ],
  [
    1588,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1575,
        0
      ],
      [
        1587,
        0
      ]
    ]
  ],
  [
    1590,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1589,
        0
      ],
      [
        1588,
        0
      ]
    ]
  ],
  [
    4692,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1590,
        0
      ],
      [
        4691,
        0
      ]
    ]
  ],
  [
    4694,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4692,
        0
      ]
    ]
  ],
  [
    4693,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4692,
        0
      ]
    ]
  ],
  [
    1594,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4693,
        0
      ]
    ]
  ],
  [
    1595,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4693,
        0
      ],
      [
        1594,
        0
      ]
    ]
  ],
  [
    1596,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1595,
        0
      ],
      [
        4694,
        0
      ]
    ]
  ],
  [
    1597,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1596,
        0
      ],
      [
        1304,
        0
      ]
    ]
  ],
  [
    1598,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1575,
        0
      ],
      [
        1597,
        0
      ]
    ]
  ],
  [
    1302,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        931,
        0
      ]
    ]
  ],
  [
    1656,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        930,
        0
      ]
    ]
  ],
  [
    1628,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        928,
        0
      ]
    ]
  ],
  [
    1303,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        929,
        0
      ]
    ]
  ],
  [
    4695,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1303,
        0
      ],
      [
        1628,
        0
      ],
      [
        1656,
        0
      ]
    ]
  ],
  [
    1612,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        935,
        0
      ]
    ]
  ],
  [
    1606,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4465,
        0
      ]
    ]
  ],
  [
    1602,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1601,
        0
      ]
    ]
  ],
  [
    1599,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1598,
        0
      ],
      [
        1598,
        0
      ]
    ]
  ],
  [
    1600,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1599,
        0
      ]
    ]
  ],
  [
    1603,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1600,
        0
      ],
      [
        1602,
        0
      ]
    ]
  ],
  [
    1604,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1603,
        0
      ]
    ]
  ],
  [
    1607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1604,
        0
      ],
      [
        1606,
        0
      ]
    ]
  ],
  [
    1608,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1607,
        0
      ]
    ]
  ],
  [
    1609,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1608,
        0
      ]
    ]
  ],
  [
    1610,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1609,
        0
      ]
    ]
  ],
  [
    1611,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1598,
        0
      ],
      [
        1610,
        0
      ]
    ]
  ],
  [
    1613,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1612,
        0
      ],
      [
        1611,
        0
      ]
    ]
  ],
  [
    4696,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1613,
        0
      ],
      [
        4695,
        0
      ]
    ]
  ],
  [
    4699,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4696,
        0
      ]
    ]
  ],
  [
    1658,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4699,
        0
      ]
    ]
  ],
  [
    1659,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1658,
        0
      ]
    ]
  ],
  [
    1653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4472,
        0
      ]
    ]
  ],
  [
    1650,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        66,
        0
      ]
    ]
  ],
  [
    1624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4469,
        0
      ]
    ]
  ],
  [
    4697,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4696,
        0
      ]
    ]
  ],
  [
    1615,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4697,
        0
      ]
    ]
  ],
  [
    1625,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1615,
        0
      ],
      [
        1624,
        0
      ]
    ]
  ],
  [
    1621,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4468,
        0
      ]
    ]
  ],
  [
    1618,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1615,
        0
      ]
    ]
  ],
  [
    1616,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1615,
        0
      ]
    ]
  ],
  [
    1617,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1616,
        0
      ]
    ]
  ],
  [
    1619,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1617,
        0
      ],
      [
        1618,
        0
      ]
    ]
  ],
  [
    1622,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1619,
        0
      ],
      [
        1621,
        0
      ]
    ]
  ],
  [
    1626,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1625,
        0
      ],
      [
        1622,
        0
      ]
    ]
  ],
  [
    1627,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1626,
        0
      ]
    ]
  ],
  [
    1632,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4470,
        0
      ]
    ]
  ],
  [
    4698,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4696,
        0
      ]
    ]
  ],
  [
    1630,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4698,
        0
      ]
    ]
  ],
  [
    1633,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1630,
        0
      ],
      [
        1632,
        0
      ]
    ]
  ],
  [
    1634,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1633,
        0
      ]
    ]
  ],
  [
    1641,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4471,
        0
      ]
    ]
  ],
  [
    1635,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1630,
        0
      ]
    ]
  ],
  [
    1638,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1635,
        0
      ]
    ]
  ],
  [
    1636,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1635,
        0
      ]
    ]
  ],
  [
    1637,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1636,
        0
      ]
    ]
  ],
  [
    1639,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1637,
        0
      ],
      [
        1638,
        0
      ]
    ]
  ],
  [
    1642,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1639,
        0
      ],
      [
        1641,
        0
      ]
    ]
  ],
  [
    1643,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1634,
        0
      ],
      [
        1642,
        0
      ]
    ]
  ],
  [
    1648,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1643,
        0
      ],
      [
        1627,
        0
      ]
    ]
  ],
  [
    1651,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1648,
        0
      ],
      [
        1650,
        0
      ]
    ]
  ],
  [
    1654,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1651,
        0
      ],
      [
        1653,
        0
      ]
    ]
  ],
  [
    4968,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1654,
        0
      ]
    ]
  ],
  [
    4969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1654,
        0
      ],
      [
        4968,
        0
      ]
    ]
  ],
  [
    4970,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4969,
        0
      ]
    ]
  ],
  [
    4971,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4969,
        0
      ],
      [
        4970,
        0
      ]
    ]
  ],
  [
    1664,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4971,
        0
      ],
      [
        1659,
        0
      ]
    ]
  ],
  [
    1666,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1664,
        0
      ]
    ]
  ],
  [
    1667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1666,
        0
      ]
    ]
  ],
  [
    1668,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1667,
        0
      ],
      [
        1302,
        0
      ]
    ]
  ],
  [
    1669,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1598,
        0
      ],
      [
        1668,
        0
      ]
    ]
  ],
  [
    1300,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        934,
        0
      ]
    ]
  ],
  [
    1301,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        933,
        0
      ]
    ]
  ],
  [
    1686,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        932,
        0
      ]
    ]
  ],
  [
    4700,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1686,
        0
      ],
      [
        1301,
        0
      ]
    ]
  ],
  [
    1683,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        936,
        0
      ]
    ]
  ],
  [
    1677,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4473,
        0
      ]
    ]
  ],
  [
    1673,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1672,
        0
      ]
    ]
  ],
  [
    1670,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1669,
        0
      ],
      [
        1669,
        0
      ]
    ]
  ],
  [
    1671,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1670,
        0
      ]
    ]
  ],
  [
    1674,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1671,
        0
      ],
      [
        1673,
        0
      ]
    ]
  ],
  [
    1675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1674,
        0
      ]
    ]
  ],
  [
    1678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1675,
        0
      ],
      [
        1677,
        0
      ]
    ]
  ],
  [
    1679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1678,
        0
      ]
    ]
  ],
  [
    1680,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1679,
        0
      ]
    ]
  ],
  [
    1681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1680,
        0
      ]
    ]
  ],
  [
    1682,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1669,
        0
      ],
      [
        1681,
        0
      ]
    ]
  ],
  [
    1684,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1683,
        0
      ],
      [
        1682,
        0
      ]
    ]
  ],
  [
    4701,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1684,
        0
      ],
      [
        4700,
        0
      ]
    ]
  ],
  [
    4703,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4701,
        0
      ]
    ]
  ],
  [
    4702,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4701,
        0
      ]
    ]
  ],
  [
    1688,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4702,
        0
      ]
    ]
  ],
  [
    1689,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4702,
        0
      ],
      [
        1688,
        0
      ]
    ]
  ],
  [
    1690,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1689,
        0
      ],
      [
        4703,
        0
      ]
    ]
  ],
  [
    1691,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1690,
        0
      ],
      [
        1300,
        0
      ]
    ]
  ],
  [
    1692,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1669,
        0
      ],
      [
        1691,
        0
      ]
    ]
  ],
  [
    1298,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        940,
        0
      ]
    ]
  ],
  [
    1750,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        939,
        0
      ]
    ]
  ],
  [
    1722,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        937,
        0
      ]
    ]
  ],
  [
    1299,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        938,
        0
      ]
    ]
  ],
  [
    4704,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1299,
        0
      ],
      [
        1722,
        0
      ],
      [
        1750,
        0
      ]
    ]
  ],
  [
    1706,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        944,
        0
      ]
    ]
  ],
  [
    1700,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4474,
        0
      ]
    ]
  ],
  [
    1696,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1695,
        0
      ]
    ]
  ],
  [
    1693,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1692,
        0
      ],
      [
        1692,
        0
      ]
    ]
  ],
  [
    1694,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1693,
        0
      ]
    ]
  ],
  [
    1697,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1694,
        0
      ],
      [
        1696,
        0
      ]
    ]
  ],
  [
    1698,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1697,
        0
      ]
    ]
  ],
  [
    1701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1698,
        0
      ],
      [
        1700,
        0
      ]
    ]
  ],
  [
    1702,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1701,
        0
      ]
    ]
  ],
  [
    1703,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1702,
        0
      ]
    ]
  ],
  [
    1704,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1703,
        0
      ]
    ]
  ],
  [
    1705,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1692,
        0
      ],
      [
        1704,
        0
      ]
    ]
  ],
  [
    1707,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1706,
        0
      ],
      [
        1705,
        0
      ]
    ]
  ],
  [
    4705,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1707,
        0
      ],
      [
        4704,
        0
      ]
    ]
  ],
  [
    4708,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4705,
        0
      ]
    ]
  ],
  [
    1752,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4708,
        0
      ]
    ]
  ],
  [
    1753,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1752,
        0
      ]
    ]
  ],
  [
    1747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4479,
        0
      ]
    ]
  ],
  [
    1744,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        79,
        0
      ]
    ]
  ],
  [
    1718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4476,
        0
      ]
    ]
  ],
  [
    4706,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4705,
        0
      ]
    ]
  ],
  [
    1709,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4706,
        0
      ]
    ]
  ],
  [
    1719,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1709,
        0
      ],
      [
        1718,
        0
      ]
    ]
  ],
  [
    1715,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4475,
        0
      ]
    ]
  ],
  [
    1712,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1709,
        0
      ]
    ]
  ],
  [
    1710,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1709,
        0
      ]
    ]
  ],
  [
    1711,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1710,
        0
      ]
    ]
  ],
  [
    1713,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1711,
        0
      ],
      [
        1712,
        0
      ]
    ]
  ],
  [
    1716,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1713,
        0
      ],
      [
        1715,
        0
      ]
    ]
  ],
  [
    1720,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1719,
        0
      ],
      [
        1716,
        0
      ]
    ]
  ],
  [
    1721,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1720,
        0
      ]
    ]
  ],
  [
    1726,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4477,
        0
      ]
    ]
  ],
  [
    4707,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4705,
        0
      ]
    ]
  ],
  [
    1724,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4707,
        0
      ]
    ]
  ],
  [
    1727,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1724,
        0
      ],
      [
        1726,
        0
      ]
    ]
  ],
  [
    1728,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1727,
        0
      ]
    ]
  ],
  [
    1735,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4478,
        0
      ]
    ]
  ],
  [
    1729,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1724,
        0
      ]
    ]
  ],
  [
    1732,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1729,
        0
      ]
    ]
  ],
  [
    1730,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1729,
        0
      ]
    ]
  ],
  [
    1731,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1730,
        0
      ]
    ]
  ],
  [
    1733,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1731,
        0
      ],
      [
        1732,
        0
      ]
    ]
  ],
  [
    1736,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1733,
        0
      ],
      [
        1735,
        0
      ]
    ]
  ],
  [
    1737,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1728,
        0
      ],
      [
        1736,
        0
      ]
    ]
  ],
  [
    1742,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1737,
        0
      ],
      [
        1721,
        0
      ]
    ]
  ],
  [
    1745,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1742,
        0
      ],
      [
        1744,
        0
      ]
    ]
  ],
  [
    1748,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1745,
        0
      ],
      [
        1747,
        0
      ]
    ]
  ],
  [
    4972,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1748,
        0
      ]
    ]
  ],
  [
    4973,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1748,
        0
      ],
      [
        4972,
        0
      ]
    ]
  ],
  [
    4974,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4973,
        0
      ]
    ]
  ],
  [
    4975,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4973,
        0
      ],
      [
        4974,
        0
      ]
    ]
  ],
  [
    1758,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4975,
        0
      ],
      [
        1753,
        0
      ]
    ]
  ],
  [
    1760,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1758,
        0
      ]
    ]
  ],
  [
    1761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1760,
        0
      ]
    ]
  ],
  [
    1762,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1761,
        0
      ],
      [
        1298,
        0
      ]
    ]
  ],
  [
    1763,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1692,
        0
      ],
      [
        1762,
        0
      ]
    ]
  ],
  [
    1296,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        943,
        0
      ]
    ]
  ],
  [
    1297,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        942,
        0
      ]
    ]
  ],
  [
    1780,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        941,
        0
      ]
    ]
  ],
  [
    4709,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1780,
        0
      ],
      [
        1297,
        0
      ]
    ]
  ],
  [
    1777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        945,
        0
      ]
    ]
  ],
  [
    1771,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4480,
        0
      ]
    ]
  ],
  [
    1767,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1766,
        0
      ]
    ]
  ],
  [
    1764,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1763,
        0
      ],
      [
        1763,
        0
      ]
    ]
  ],
  [
    1765,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1764,
        0
      ]
    ]
  ],
  [
    1768,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1765,
        0
      ],
      [
        1767,
        0
      ]
    ]
  ],
  [
    1769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1768,
        0
      ]
    ]
  ],
  [
    1772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1769,
        0
      ],
      [
        1771,
        0
      ]
    ]
  ],
  [
    1773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1772,
        0
      ]
    ]
  ],
  [
    1774,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1773,
        0
      ]
    ]
  ],
  [
    1775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1774,
        0
      ]
    ]
  ],
  [
    1776,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1763,
        0
      ],
      [
        1775,
        0
      ]
    ]
  ],
  [
    1778,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1777,
        0
      ],
      [
        1776,
        0
      ]
    ]
  ],
  [
    4710,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1778,
        0
      ],
      [
        4709,
        0
      ]
    ]
  ],
  [
    4712,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4710,
        0
      ]
    ]
  ],
  [
    4711,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4710,
        0
      ]
    ]
  ],
  [
    1782,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4711,
        0
      ]
    ]
  ],
  [
    1783,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4711,
        0
      ],
      [
        1782,
        0
      ]
    ]
  ],
  [
    1784,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1783,
        0
      ],
      [
        4712,
        0
      ]
    ]
  ],
  [
    1785,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1784,
        0
      ],
      [
        1296,
        0
      ]
    ]
  ],
  [
    1786,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1763,
        0
      ],
      [
        1785,
        0
      ]
    ]
  ],
  [
    1294,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        949,
        0
      ]
    ]
  ],
  [
    1844,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        948,
        0
      ]
    ]
  ],
  [
    1816,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        946,
        0
      ]
    ]
  ],
  [
    1295,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        947,
        0
      ]
    ]
  ],
  [
    4713,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1295,
        0
      ],
      [
        1816,
        0
      ],
      [
        1844,
        0
      ]
    ]
  ],
  [
    1800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        953,
        0
      ]
    ]
  ],
  [
    1794,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4481,
        0
      ]
    ]
  ],
  [
    1790,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1789,
        0
      ]
    ]
  ],
  [
    1787,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1786,
        0
      ],
      [
        1786,
        0
      ]
    ]
  ],
  [
    1788,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1787,
        0
      ]
    ]
  ],
  [
    1791,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1788,
        0
      ],
      [
        1790,
        0
      ]
    ]
  ],
  [
    1792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1791,
        0
      ]
    ]
  ],
  [
    1795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1792,
        0
      ],
      [
        1794,
        0
      ]
    ]
  ],
  [
    1796,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1795,
        0
      ]
    ]
  ],
  [
    1797,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1796,
        0
      ]
    ]
  ],
  [
    1798,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1797,
        0
      ]
    ]
  ],
  [
    1799,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1786,
        0
      ],
      [
        1798,
        0
      ]
    ]
  ],
  [
    1801,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1800,
        0
      ],
      [
        1799,
        0
      ]
    ]
  ],
  [
    4714,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1801,
        0
      ],
      [
        4713,
        0
      ]
    ]
  ],
  [
    4717,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4714,
        0
      ]
    ]
  ],
  [
    1846,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4717,
        0
      ]
    ]
  ],
  [
    1847,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1846,
        0
      ]
    ]
  ],
  [
    1841,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4486,
        0
      ]
    ]
  ],
  [
    1838,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        92,
        0
      ]
    ]
  ],
  [
    1812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4483,
        0
      ]
    ]
  ],
  [
    4715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4714,
        0
      ]
    ]
  ],
  [
    1803,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4715,
        0
      ]
    ]
  ],
  [
    1813,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1803,
        0
      ],
      [
        1812,
        0
      ]
    ]
  ],
  [
    1809,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4482,
        0
      ]
    ]
  ],
  [
    1806,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1803,
        0
      ]
    ]
  ],
  [
    1804,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1803,
        0
      ]
    ]
  ],
  [
    1805,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1804,
        0
      ]
    ]
  ],
  [
    1807,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1805,
        0
      ],
      [
        1806,
        0
      ]
    ]
  ],
  [
    1810,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1807,
        0
      ],
      [
        1809,
        0
      ]
    ]
  ],
  [
    1814,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1813,
        0
      ],
      [
        1810,
        0
      ]
    ]
  ],
  [
    1815,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1814,
        0
      ]
    ]
  ],
  [
    1820,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4484,
        0
      ]
    ]
  ],
  [
    4716,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4714,
        0
      ]
    ]
  ],
  [
    1818,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4716,
        0
      ]
    ]
  ],
  [
    1821,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1818,
        0
      ],
      [
        1820,
        0
      ]
    ]
  ],
  [
    1822,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1821,
        0
      ]
    ]
  ],
  [
    1829,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4485,
        0
      ]
    ]
  ],
  [
    1823,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1818,
        0
      ]
    ]
  ],
  [
    1826,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1823,
        0
      ]
    ]
  ],
  [
    1824,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1823,
        0
      ]
    ]
  ],
  [
    1825,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1824,
        0
      ]
    ]
  ],
  [
    1827,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1825,
        0
      ],
      [
        1826,
        0
      ]
    ]
  ],
  [
    1830,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1827,
        0
      ],
      [
        1829,
        0
      ]
    ]
  ],
  [
    1831,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1822,
        0
      ],
      [
        1830,
        0
      ]
    ]
  ],
  [
    1836,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1831,
        0
      ],
      [
        1815,
        0
      ]
    ]
  ],
  [
    1839,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1836,
        0
      ],
      [
        1838,
        0
      ]
    ]
  ],
  [
    1842,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1839,
        0
      ],
      [
        1841,
        0
      ]
    ]
  ],
  [
    4976,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1842,
        0
      ]
    ]
  ],
  [
    4977,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1842,
        0
      ],
      [
        4976,
        0
      ]
    ]
  ],
  [
    4978,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4977,
        0
      ]
    ]
  ],
  [
    4979,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4977,
        0
      ],
      [
        4978,
        0
      ]
    ]
  ],
  [
    1852,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4979,
        0
      ],
      [
        1847,
        0
      ]
    ]
  ],
  [
    1854,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1852,
        0
      ]
    ]
  ],
  [
    1855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1854,
        0
      ]
    ]
  ],
  [
    1856,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1855,
        0
      ],
      [
        1294,
        0
      ]
    ]
  ],
  [
    1857,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1786,
        0
      ],
      [
        1856,
        0
      ]
    ]
  ],
  [
    1292,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        952,
        0
      ]
    ]
  ],
  [
    1293,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        951,
        0
      ]
    ]
  ],
  [
    1874,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        950,
        0
      ]
    ]
  ],
  [
    4718,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1874,
        0
      ],
      [
        1293,
        0
      ]
    ]
  ],
  [
    1871,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        954,
        0
      ]
    ]
  ],
  [
    1865,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4487,
        0
      ]
    ]
  ],
  [
    1861,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1860,
        0
      ]
    ]
  ],
  [
    1858,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1857,
        0
      ],
      [
        1857,
        0
      ]
    ]
  ],
  [
    1859,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1858,
        0
      ]
    ]
  ],
  [
    1862,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1859,
        0
      ],
      [
        1861,
        0
      ]
    ]
  ],
  [
    1863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1862,
        0
      ]
    ]
  ],
  [
    1866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1863,
        0
      ],
      [
        1865,
        0
      ]
    ]
  ],
  [
    1867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1866,
        0
      ]
    ]
  ],
  [
    1868,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1867,
        0
      ]
    ]
  ],
  [
    1869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1868,
        0
      ]
    ]
  ],
  [
    1870,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1857,
        0
      ],
      [
        1869,
        0
      ]
    ]
  ],
  [
    1872,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1871,
        0
      ],
      [
        1870,
        0
      ]
    ]
  ],
  [
    4719,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1872,
        0
      ],
      [
        4718,
        0
      ]
    ]
  ],
  [
    4721,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4719,
        0
      ]
    ]
  ],
  [
    4720,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4719,
        0
      ]
    ]
  ],
  [
    1876,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4720,
        0
      ]
    ]
  ],
  [
    1877,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4720,
        0
      ],
      [
        1876,
        0
      ]
    ]
  ],
  [
    1878,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1877,
        0
      ],
      [
        4721,
        0
      ]
    ]
  ],
  [
    1879,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1878,
        0
      ],
      [
        1292,
        0
      ]
    ]
  ],
  [
    1880,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1857,
        0
      ],
      [
        1879,
        0
      ]
    ]
  ],
  [
    1290,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        958,
        0
      ]
    ]
  ],
  [
    1938,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        957,
        0
      ]
    ]
  ],
  [
    1910,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        955,
        0
      ]
    ]
  ],
  [
    1291,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        956,
        0
      ]
    ]
  ],
  [
    4722,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1291,
        0
      ],
      [
        1910,
        0
      ],
      [
        1938,
        0
      ]
    ]
  ],
  [
    1894,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        962,
        0
      ]
    ]
  ],
  [
    1888,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4488,
        0
      ]
    ]
  ],
  [
    1884,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1883,
        0
      ]
    ]
  ],
  [
    1881,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1880,
        0
      ],
      [
        1880,
        0
      ]
    ]
  ],
  [
    1882,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1881,
        0
      ]
    ]
  ],
  [
    1885,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1882,
        0
      ],
      [
        1884,
        0
      ]
    ]
  ],
  [
    1886,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1885,
        0
      ]
    ]
  ],
  [
    1889,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1886,
        0
      ],
      [
        1888,
        0
      ]
    ]
  ],
  [
    1890,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1889,
        0
      ]
    ]
  ],
  [
    1891,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1890,
        0
      ]
    ]
  ],
  [
    1892,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1891,
        0
      ]
    ]
  ],
  [
    1893,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1880,
        0
      ],
      [
        1892,
        0
      ]
    ]
  ],
  [
    1895,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1894,
        0
      ],
      [
        1893,
        0
      ]
    ]
  ],
  [
    4723,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1895,
        0
      ],
      [
        4722,
        0
      ]
    ]
  ],
  [
    4726,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4723,
        0
      ]
    ]
  ],
  [
    1940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4726,
        0
      ]
    ]
  ],
  [
    1941,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1940,
        0
      ]
    ]
  ],
  [
    1935,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4493,
        0
      ]
    ]
  ],
  [
    1932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        105,
        0
      ]
    ]
  ],
  [
    1906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4490,
        0
      ]
    ]
  ],
  [
    4724,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4723,
        0
      ]
    ]
  ],
  [
    1897,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4724,
        0
      ]
    ]
  ],
  [
    1907,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1897,
        0
      ],
      [
        1906,
        0
      ]
    ]
  ],
  [
    1903,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4489,
        0
      ]
    ]
  ],
  [
    1900,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1897,
        0
      ]
    ]
  ],
  [
    1898,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1897,
        0
      ]
    ]
  ],
  [
    1899,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1898,
        0
      ]
    ]
  ],
  [
    1901,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1899,
        0
      ],
      [
        1900,
        0
      ]
    ]
  ],
  [
    1904,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1901,
        0
      ],
      [
        1903,
        0
      ]
    ]
  ],
  [
    1908,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        1907,
        0
      ],
      [
        1904,
        0
      ]
    ]
  ],
  [
    1909,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1908,
        0
      ]
    ]
  ],
  [
    1914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4491,
        0
      ]
    ]
  ],
  [
    4725,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4723,
        0
      ]
    ]
  ],
  [
    1912,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4725,
        0
      ]
    ]
  ],
  [
    1915,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1912,
        0
      ],
      [
        1914,
        0
      ]
    ]
  ],
  [
    1916,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1915,
        0
      ]
    ]
  ],
  [
    1923,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4492,
        0
      ]
    ]
  ],
  [
    1917,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1912,
        0
      ]
    ]
  ],
  [
    1920,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1917,
        0
      ]
    ]
  ],
  [
    1918,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        1917,
        0
      ]
    ]
  ],
  [
    1919,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        1918,
        0
      ]
    ]
  ],
  [
    1921,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        1919,
        0
      ],
      [
        1920,
        0
      ]
    ]
  ],
  [
    1924,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        1921,
        0
      ],
      [
        1923,
        0
      ]
    ]
  ],
  [
    1925,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        1916,
        0
      ],
      [
        1924,
        0
      ]
    ]
  ],
  [
    1930,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        1925,
        0
      ],
      [
        1909,
        0
      ]
    ]
  ],
  [
    1933,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        1930,
        0
      ],
      [
        1932,
        0
      ]
    ]
  ],
  [
    1936,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        1933,
        0
      ],
      [
        1935,
        0
      ]
    ]
  ],
  [
    4980,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1936,
        0
      ]
    ]
  ],
  [
    4981,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1936,
        0
      ],
      [
        4980,
        0
      ]
    ]
  ],
  [
    4982,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4981,
        0
      ]
    ]
  ],
  [
    4983,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4981,
        0
      ],
      [
        4982,
        0
      ]
    ]
  ],
  [
    1946,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4983,
        0
      ],
      [
        1941,
        0
      ]
    ]
  ],
  [
    1948,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        1946,
        0
      ]
    ]
  ],
  [
    1949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1948,
        0
      ]
    ]
  ],
  [
    1950,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        1949,
        0
      ],
      [
        1290,
        0
      ]
    ]
  ],
  [
    1951,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1880,
        0
      ],
      [
        1950,
        0
      ]
    ]
  ],
  [
    1288,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        961,
        0
      ]
    ]
  ],
  [
    1289,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        960,
        0
      ]
    ]
  ],
  [
    1968,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        959,
        0
      ]
    ]
  ],
  [
    4727,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        1968,
        0
      ],
      [
        1289,
        0
      ]
    ]
  ],
  [
    1965,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        963,
        0
      ]
    ]
  ],
  [
    1959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4494,
        0
      ]
    ]
  ],
  [
    1955,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1954,
        0
      ]
    ]
  ],
  [
    1952,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1951,
        0
      ],
      [
        1951,
        0
      ]
    ]
  ],
  [
    1953,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1952,
        0
      ]
    ]
  ],
  [
    1956,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1953,
        0
      ],
      [
        1955,
        0
      ]
    ]
  ],
  [
    1957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1956,
        0
      ]
    ]
  ],
  [
    1960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1957,
        0
      ],
      [
        1959,
        0
      ]
    ]
  ],
  [
    1961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1960,
        0
      ]
    ]
  ],
  [
    1962,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1961,
        0
      ]
    ]
  ],
  [
    1963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1962,
        0
      ]
    ]
  ],
  [
    1964,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1951,
        0
      ],
      [
        1963,
        0
      ]
    ]
  ],
  [
    1966,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1965,
        0
      ],
      [
        1964,
        0
      ]
    ]
  ],
  [
    4728,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        1966,
        0
      ],
      [
        4727,
        0
      ]
    ]
  ],
  [
    4730,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4728,
        0
      ]
    ]
  ],
  [
    4729,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4728,
        0
      ]
    ]
  ],
  [
    1970,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4729,
        0
      ]
    ]
  ],
  [
    1971,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4729,
        0
      ],
      [
        1970,
        0
      ]
    ]
  ],
  [
    1972,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        1971,
        0
      ],
      [
        4730,
        0
      ]
    ]
  ],
  [
    1973,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        1972,
        0
      ],
      [
        1288,
        0
      ]
    ]
  ],
  [
    1974,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1951,
        0
      ],
      [
        1973,
        0
      ]
    ]
  ],
  [
    1286,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        967,
        0
      ]
    ]
  ],
  [
    2032,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        966,
        0
      ]
    ]
  ],
  [
    2004,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        964,
        0
      ]
    ]
  ],
  [
    1287,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        965,
        0
      ]
    ]
  ],
  [
    4731,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1287,
        0
      ],
      [
        2004,
        0
      ],
      [
        2032,
        0
      ]
    ]
  ],
  [
    1988,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        971,
        0
      ]
    ]
  ],
  [
    1982,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4495,
        0
      ]
    ]
  ],
  [
    1978,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1977,
        0
      ]
    ]
  ],
  [
    1975,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1974,
        0
      ],
      [
        1974,
        0
      ]
    ]
  ],
  [
    1976,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        1975,
        0
      ]
    ]
  ],
  [
    1979,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1976,
        0
      ],
      [
        1978,
        0
      ]
    ]
  ],
  [
    1980,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1979,
        0
      ]
    ]
  ],
  [
    1983,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1980,
        0
      ],
      [
        1982,
        0
      ]
    ]
  ],
  [
    1984,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1983,
        0
      ]
    ]
  ],
  [
    1985,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1984,
        0
      ]
    ]
  ],
  [
    1986,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1985,
        0
      ]
    ]
  ],
  [
    1987,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        1974,
        0
      ],
      [
        1986,
        0
      ]
    ]
  ],
  [
    1989,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        1988,
        0
      ],
      [
        1987,
        0
      ]
    ]
  ],
  [
    4732,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        1989,
        0
      ],
      [
        4731,
        0
      ]
    ]
  ],
  [
    4735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4732,
        0
      ]
    ]
  ],
  [
    2034,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4735,
        0
      ]
    ]
  ],
  [
    2035,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2034,
        0
      ]
    ]
  ],
  [
    2029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4499,
        0
      ]
    ]
  ],
  [
    2026,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        118,
        0
      ]
    ]
  ],
  [
    2000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4467,
        0
      ]
    ]
  ],
  [
    4733,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4732,
        0
      ]
    ]
  ],
  [
    1991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4733,
        0
      ]
    ]
  ],
  [
    2001,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1991,
        0
      ],
      [
        2000,
        0
      ]
    ]
  ],
  [
    1997,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4466,
        0
      ]
    ]
  ],
  [
    1994,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1991,
        0
      ]
    ]
  ],
  [
    1992,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        1991,
        0
      ]
    ]
  ],
  [
    1993,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        1992,
        0
      ]
    ]
  ],
  [
    1995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        1993,
        0
      ],
      [
        1994,
        0
      ]
    ]
  ],
  [
    1998,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        1995,
        0
      ],
      [
        1997,
        0
      ]
    ]
  ],
  [
    2002,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2001,
        0
      ],
      [
        1998,
        0
      ]
    ]
  ],
  [
    2003,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2002,
        0
      ]
    ]
  ],
  [
    2008,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4497,
        0
      ]
    ]
  ],
  [
    4734,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4732,
        0
      ]
    ]
  ],
  [
    2006,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4734,
        0
      ]
    ]
  ],
  [
    2009,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2006,
        0
      ],
      [
        2008,
        0
      ]
    ]
  ],
  [
    2010,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2009,
        0
      ]
    ]
  ],
  [
    2017,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4498,
        0
      ]
    ]
  ],
  [
    2011,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2006,
        0
      ]
    ]
  ],
  [
    2014,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2011,
        0
      ]
    ]
  ],
  [
    2012,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2011,
        0
      ]
    ]
  ],
  [
    2013,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2012,
        0
      ]
    ]
  ],
  [
    2015,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2013,
        0
      ],
      [
        2014,
        0
      ]
    ]
  ],
  [
    2018,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2015,
        0
      ],
      [
        2017,
        0
      ]
    ]
  ],
  [
    2019,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2010,
        0
      ],
      [
        2018,
        0
      ]
    ]
  ],
  [
    2024,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2019,
        0
      ],
      [
        2003,
        0
      ]
    ]
  ],
  [
    2027,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2024,
        0
      ],
      [
        2026,
        0
      ]
    ]
  ],
  [
    2030,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2027,
        0
      ],
      [
        2029,
        0
      ]
    ]
  ],
  [
    4984,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2030,
        0
      ]
    ]
  ],
  [
    4985,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2030,
        0
      ],
      [
        4984,
        0
      ]
    ]
  ],
  [
    4986,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4985,
        0
      ]
    ]
  ],
  [
    4987,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4985,
        0
      ],
      [
        4986,
        0
      ]
    ]
  ],
  [
    2040,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4987,
        0
      ],
      [
        2035,
        0
      ]
    ]
  ],
  [
    2042,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2040,
        0
      ]
    ]
  ],
  [
    2043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2042,
        0
      ]
    ]
  ],
  [
    2044,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2043,
        0
      ],
      [
        1286,
        0
      ]
    ]
  ],
  [
    2045,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1974,
        0
      ],
      [
        2044,
        0
      ]
    ]
  ],
  [
    1284,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        970,
        0
      ]
    ]
  ],
  [
    1285,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        969,
        0
      ]
    ]
  ],
  [
    2062,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        968,
        0
      ]
    ]
  ],
  [
    4736,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2062,
        0
      ],
      [
        1285,
        0
      ]
    ]
  ],
  [
    2059,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        972,
        0
      ]
    ]
  ],
  [
    2053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4443,
        0
      ]
    ]
  ],
  [
    2049,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2048,
        0
      ]
    ]
  ],
  [
    2046,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2045,
        0
      ],
      [
        2045,
        0
      ]
    ]
  ],
  [
    2047,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2046,
        0
      ]
    ]
  ],
  [
    2050,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2047,
        0
      ],
      [
        2049,
        0
      ]
    ]
  ],
  [
    2051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2050,
        0
      ]
    ]
  ],
  [
    2054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2051,
        0
      ],
      [
        2053,
        0
      ]
    ]
  ],
  [
    2055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2054,
        0
      ]
    ]
  ],
  [
    2056,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2055,
        0
      ]
    ]
  ],
  [
    2057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2056,
        0
      ]
    ]
  ],
  [
    2058,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2045,
        0
      ],
      [
        2057,
        0
      ]
    ]
  ],
  [
    2060,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2059,
        0
      ],
      [
        2058,
        0
      ]
    ]
  ],
  [
    4737,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2060,
        0
      ],
      [
        4736,
        0
      ]
    ]
  ],
  [
    4739,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4737,
        0
      ]
    ]
  ],
  [
    4738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4737,
        0
      ]
    ]
  ],
  [
    2064,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4738,
        0
      ]
    ]
  ],
  [
    2065,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4738,
        0
      ],
      [
        2064,
        0
      ]
    ]
  ],
  [
    2066,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2065,
        0
      ],
      [
        4739,
        0
      ]
    ]
  ],
  [
    2067,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2066,
        0
      ],
      [
        1284,
        0
      ]
    ]
  ],
  [
    2068,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2045,
        0
      ],
      [
        2067,
        0
      ]
    ]
  ],
  [
    1282,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        976,
        0
      ]
    ]
  ],
  [
    2126,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        975,
        0
      ]
    ]
  ],
  [
    2098,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        973,
        0
      ]
    ]
  ],
  [
    1283,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        974,
        0
      ]
    ]
  ],
  [
    4740,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1283,
        0
      ],
      [
        2098,
        0
      ],
      [
        2126,
        0
      ]
    ]
  ],
  [
    2082,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        980,
        0
      ]
    ]
  ],
  [
    2076,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4501,
        0
      ]
    ]
  ],
  [
    2072,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2071,
        0
      ]
    ]
  ],
  [
    2069,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2068,
        0
      ],
      [
        2068,
        0
      ]
    ]
  ],
  [
    2070,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2069,
        0
      ]
    ]
  ],
  [
    2073,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2070,
        0
      ],
      [
        2072,
        0
      ]
    ]
  ],
  [
    2074,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2073,
        0
      ]
    ]
  ],
  [
    2077,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2074,
        0
      ],
      [
        2076,
        0
      ]
    ]
  ],
  [
    2078,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2077,
        0
      ]
    ]
  ],
  [
    2079,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2078,
        0
      ]
    ]
  ],
  [
    2080,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2079,
        0
      ]
    ]
  ],
  [
    2081,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2068,
        0
      ],
      [
        2080,
        0
      ]
    ]
  ],
  [
    2083,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2082,
        0
      ],
      [
        2081,
        0
      ]
    ]
  ],
  [
    4741,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2083,
        0
      ],
      [
        4740,
        0
      ]
    ]
  ],
  [
    4744,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4741,
        0
      ]
    ]
  ],
  [
    2128,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4744,
        0
      ]
    ]
  ],
  [
    2129,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2128,
        0
      ]
    ]
  ],
  [
    2123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4506,
        0
      ]
    ]
  ],
  [
    2120,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        131,
        0
      ]
    ]
  ],
  [
    2094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4503,
        0
      ]
    ]
  ],
  [
    4742,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4741,
        0
      ]
    ]
  ],
  [
    2085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4742,
        0
      ]
    ]
  ],
  [
    2095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2085,
        0
      ],
      [
        2094,
        0
      ]
    ]
  ],
  [
    2091,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4502,
        0
      ]
    ]
  ],
  [
    2088,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2085,
        0
      ]
    ]
  ],
  [
    2086,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2085,
        0
      ]
    ]
  ],
  [
    2087,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2086,
        0
      ]
    ]
  ],
  [
    2089,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2087,
        0
      ],
      [
        2088,
        0
      ]
    ]
  ],
  [
    2092,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2089,
        0
      ],
      [
        2091,
        0
      ]
    ]
  ],
  [
    2096,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2095,
        0
      ],
      [
        2092,
        0
      ]
    ]
  ],
  [
    2097,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2096,
        0
      ]
    ]
  ],
  [
    2102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4504,
        0
      ]
    ]
  ],
  [
    4743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4741,
        0
      ]
    ]
  ],
  [
    2100,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4743,
        0
      ]
    ]
  ],
  [
    2103,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2100,
        0
      ],
      [
        2102,
        0
      ]
    ]
  ],
  [
    2104,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2103,
        0
      ]
    ]
  ],
  [
    2111,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4505,
        0
      ]
    ]
  ],
  [
    2105,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2100,
        0
      ]
    ]
  ],
  [
    2108,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2105,
        0
      ]
    ]
  ],
  [
    2106,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2105,
        0
      ]
    ]
  ],
  [
    2107,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2106,
        0
      ]
    ]
  ],
  [
    2109,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2107,
        0
      ],
      [
        2108,
        0
      ]
    ]
  ],
  [
    2112,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2109,
        0
      ],
      [
        2111,
        0
      ]
    ]
  ],
  [
    2113,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2104,
        0
      ],
      [
        2112,
        0
      ]
    ]
  ],
  [
    2118,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2113,
        0
      ],
      [
        2097,
        0
      ]
    ]
  ],
  [
    2121,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2118,
        0
      ],
      [
        2120,
        0
      ]
    ]
  ],
  [
    2124,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2121,
        0
      ],
      [
        2123,
        0
      ]
    ]
  ],
  [
    4988,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2124,
        0
      ]
    ]
  ],
  [
    4989,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2124,
        0
      ],
      [
        4988,
        0
      ]
    ]
  ],
  [
    4990,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4989,
        0
      ]
    ]
  ],
  [
    4991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4989,
        0
      ],
      [
        4990,
        0
      ]
    ]
  ],
  [
    2134,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4991,
        0
      ],
      [
        2129,
        0
      ]
    ]
  ],
  [
    2136,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2134,
        0
      ]
    ]
  ],
  [
    2137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2136,
        0
      ]
    ]
  ],
  [
    2138,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2137,
        0
      ],
      [
        1282,
        0
      ]
    ]
  ],
  [
    2139,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2068,
        0
      ],
      [
        2138,
        0
      ]
    ]
  ],
  [
    1280,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        979,
        0
      ]
    ]
  ],
  [
    1281,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        978,
        0
      ]
    ]
  ],
  [
    2156,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        977,
        0
      ]
    ]
  ],
  [
    4745,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2156,
        0
      ],
      [
        1281,
        0
      ]
    ]
  ],
  [
    2153,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        981,
        0
      ]
    ]
  ],
  [
    2147,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4507,
        0
      ]
    ]
  ],
  [
    2143,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2142,
        0
      ]
    ]
  ],
  [
    2140,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2139,
        0
      ],
      [
        2139,
        0
      ]
    ]
  ],
  [
    2141,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2140,
        0
      ]
    ]
  ],
  [
    2144,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2141,
        0
      ],
      [
        2143,
        0
      ]
    ]
  ],
  [
    2145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2144,
        0
      ]
    ]
  ],
  [
    2148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2145,
        0
      ],
      [
        2147,
        0
      ]
    ]
  ],
  [
    2149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2148,
        0
      ]
    ]
  ],
  [
    2150,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2149,
        0
      ]
    ]
  ],
  [
    2151,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2150,
        0
      ]
    ]
  ],
  [
    2152,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2139,
        0
      ],
      [
        2151,
        0
      ]
    ]
  ],
  [
    2154,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2153,
        0
      ],
      [
        2152,
        0
      ]
    ]
  ],
  [
    4746,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2154,
        0
      ],
      [
        4745,
        0
      ]
    ]
  ],
  [
    4748,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4746,
        0
      ]
    ]
  ],
  [
    4747,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4746,
        0
      ]
    ]
  ],
  [
    2158,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4747,
        0
      ]
    ]
  ],
  [
    2159,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4747,
        0
      ],
      [
        2158,
        0
      ]
    ]
  ],
  [
    2160,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2159,
        0
      ],
      [
        4748,
        0
      ]
    ]
  ],
  [
    2161,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2160,
        0
      ],
      [
        1280,
        0
      ]
    ]
  ],
  [
    2162,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2139,
        0
      ],
      [
        2161,
        0
      ]
    ]
  ],
  [
    1278,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        985,
        0
      ]
    ]
  ],
  [
    2220,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        984,
        0
      ]
    ]
  ],
  [
    2192,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        982,
        0
      ]
    ]
  ],
  [
    1279,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        983,
        0
      ]
    ]
  ],
  [
    4749,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1279,
        0
      ],
      [
        2192,
        0
      ],
      [
        2220,
        0
      ]
    ]
  ],
  [
    2176,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        989,
        0
      ]
    ]
  ],
  [
    2170,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4508,
        0
      ]
    ]
  ],
  [
    2166,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2165,
        0
      ]
    ]
  ],
  [
    2163,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2162,
        0
      ],
      [
        2162,
        0
      ]
    ]
  ],
  [
    2164,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2163,
        0
      ]
    ]
  ],
  [
    2167,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2164,
        0
      ],
      [
        2166,
        0
      ]
    ]
  ],
  [
    2168,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2167,
        0
      ]
    ]
  ],
  [
    2171,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2168,
        0
      ],
      [
        2170,
        0
      ]
    ]
  ],
  [
    2172,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2171,
        0
      ]
    ]
  ],
  [
    2173,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2172,
        0
      ]
    ]
  ],
  [
    2174,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2173,
        0
      ]
    ]
  ],
  [
    2175,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2162,
        0
      ],
      [
        2174,
        0
      ]
    ]
  ],
  [
    2177,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2176,
        0
      ],
      [
        2175,
        0
      ]
    ]
  ],
  [
    4750,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2177,
        0
      ],
      [
        4749,
        0
      ]
    ]
  ],
  [
    4753,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4750,
        0
      ]
    ]
  ],
  [
    2222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4753,
        0
      ]
    ]
  ],
  [
    2223,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2222,
        0
      ]
    ]
  ],
  [
    2217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4513,
        0
      ]
    ]
  ],
  [
    2214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        144,
        0
      ]
    ]
  ],
  [
    2188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4510,
        0
      ]
    ]
  ],
  [
    4751,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4750,
        0
      ]
    ]
  ],
  [
    2179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4751,
        0
      ]
    ]
  ],
  [
    2189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2179,
        0
      ],
      [
        2188,
        0
      ]
    ]
  ],
  [
    2185,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4509,
        0
      ]
    ]
  ],
  [
    2182,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2179,
        0
      ]
    ]
  ],
  [
    2180,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2179,
        0
      ]
    ]
  ],
  [
    2181,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2180,
        0
      ]
    ]
  ],
  [
    2183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2181,
        0
      ],
      [
        2182,
        0
      ]
    ]
  ],
  [
    2186,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2183,
        0
      ],
      [
        2185,
        0
      ]
    ]
  ],
  [
    2190,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2189,
        0
      ],
      [
        2186,
        0
      ]
    ]
  ],
  [
    2191,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2190,
        0
      ]
    ]
  ],
  [
    2196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4511,
        0
      ]
    ]
  ],
  [
    4752,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4750,
        0
      ]
    ]
  ],
  [
    2194,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4752,
        0
      ]
    ]
  ],
  [
    2197,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2194,
        0
      ],
      [
        2196,
        0
      ]
    ]
  ],
  [
    2198,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2197,
        0
      ]
    ]
  ],
  [
    2205,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4512,
        0
      ]
    ]
  ],
  [
    2199,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2194,
        0
      ]
    ]
  ],
  [
    2202,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2199,
        0
      ]
    ]
  ],
  [
    2200,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2199,
        0
      ]
    ]
  ],
  [
    2201,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2200,
        0
      ]
    ]
  ],
  [
    2203,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2201,
        0
      ],
      [
        2202,
        0
      ]
    ]
  ],
  [
    2206,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2203,
        0
      ],
      [
        2205,
        0
      ]
    ]
  ],
  [
    2207,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2198,
        0
      ],
      [
        2206,
        0
      ]
    ]
  ],
  [
    2212,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2207,
        0
      ],
      [
        2191,
        0
      ]
    ]
  ],
  [
    2215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2212,
        0
      ],
      [
        2214,
        0
      ]
    ]
  ],
  [
    2218,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2215,
        0
      ],
      [
        2217,
        0
      ]
    ]
  ],
  [
    4992,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2218,
        0
      ]
    ]
  ],
  [
    4993,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2218,
        0
      ],
      [
        4992,
        0
      ]
    ]
  ],
  [
    4994,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4993,
        0
      ]
    ]
  ],
  [
    4995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4993,
        0
      ],
      [
        4994,
        0
      ]
    ]
  ],
  [
    2228,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4995,
        0
      ],
      [
        2223,
        0
      ]
    ]
  ],
  [
    2230,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2228,
        0
      ]
    ]
  ],
  [
    2231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2230,
        0
      ]
    ]
  ],
  [
    2232,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2231,
        0
      ],
      [
        1278,
        0
      ]
    ]
  ],
  [
    2233,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2162,
        0
      ],
      [
        2232,
        0
      ]
    ]
  ],
  [
    1276,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        988,
        0
      ]
    ]
  ],
  [
    1277,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        987,
        0
      ]
    ]
  ],
  [
    2250,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        986,
        0
      ]
    ]
  ],
  [
    4754,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2250,
        0
      ],
      [
        1277,
        0
      ]
    ]
  ],
  [
    2247,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        990,
        0
      ]
    ]
  ],
  [
    2241,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4514,
        0
      ]
    ]
  ],
  [
    2237,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2236,
        0
      ]
    ]
  ],
  [
    2234,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2233,
        0
      ],
      [
        2233,
        0
      ]
    ]
  ],
  [
    2235,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2234,
        0
      ]
    ]
  ],
  [
    2238,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2235,
        0
      ],
      [
        2237,
        0
      ]
    ]
  ],
  [
    2239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2238,
        0
      ]
    ]
  ],
  [
    2242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2239,
        0
      ],
      [
        2241,
        0
      ]
    ]
  ],
  [
    2243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2242,
        0
      ]
    ]
  ],
  [
    2244,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2243,
        0
      ]
    ]
  ],
  [
    2245,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2244,
        0
      ]
    ]
  ],
  [
    2246,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2233,
        0
      ],
      [
        2245,
        0
      ]
    ]
  ],
  [
    2248,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2247,
        0
      ],
      [
        2246,
        0
      ]
    ]
  ],
  [
    4755,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2248,
        0
      ],
      [
        4754,
        0
      ]
    ]
  ],
  [
    4757,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4755,
        0
      ]
    ]
  ],
  [
    4756,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4755,
        0
      ]
    ]
  ],
  [
    2252,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4756,
        0
      ]
    ]
  ],
  [
    2253,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4756,
        0
      ],
      [
        2252,
        0
      ]
    ]
  ],
  [
    2254,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2253,
        0
      ],
      [
        4757,
        0
      ]
    ]
  ],
  [
    2255,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2254,
        0
      ],
      [
        1276,
        0
      ]
    ]
  ],
  [
    2256,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2233,
        0
      ],
      [
        2255,
        0
      ]
    ]
  ],
  [
    1274,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        994,
        0
      ]
    ]
  ],
  [
    2314,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        993,
        0
      ]
    ]
  ],
  [
    2286,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        991,
        0
      ]
    ]
  ],
  [
    1275,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        992,
        0
      ]
    ]
  ],
  [
    4758,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1275,
        0
      ],
      [
        2286,
        0
      ],
      [
        2314,
        0
      ]
    ]
  ],
  [
    2270,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        998,
        0
      ]
    ]
  ],
  [
    2264,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4515,
        0
      ]
    ]
  ],
  [
    2260,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2259,
        0
      ]
    ]
  ],
  [
    2257,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2256,
        0
      ],
      [
        2256,
        0
      ]
    ]
  ],
  [
    2258,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2257,
        0
      ]
    ]
  ],
  [
    2261,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2258,
        0
      ],
      [
        2260,
        0
      ]
    ]
  ],
  [
    2262,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2261,
        0
      ]
    ]
  ],
  [
    2265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2262,
        0
      ],
      [
        2264,
        0
      ]
    ]
  ],
  [
    2266,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2265,
        0
      ]
    ]
  ],
  [
    2267,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2266,
        0
      ]
    ]
  ],
  [
    2268,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2267,
        0
      ]
    ]
  ],
  [
    2269,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2256,
        0
      ],
      [
        2268,
        0
      ]
    ]
  ],
  [
    2271,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2270,
        0
      ],
      [
        2269,
        0
      ]
    ]
  ],
  [
    4759,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2271,
        0
      ],
      [
        4758,
        0
      ]
    ]
  ],
  [
    4762,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4759,
        0
      ]
    ]
  ],
  [
    2316,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4762,
        0
      ]
    ]
  ],
  [
    2317,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2316,
        0
      ]
    ]
  ],
  [
    2311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4520,
        0
      ]
    ]
  ],
  [
    2308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        157,
        0
      ]
    ]
  ],
  [
    2282,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4517,
        0
      ]
    ]
  ],
  [
    4760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4759,
        0
      ]
    ]
  ],
  [
    2273,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4760,
        0
      ]
    ]
  ],
  [
    2283,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2273,
        0
      ],
      [
        2282,
        0
      ]
    ]
  ],
  [
    2279,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4516,
        0
      ]
    ]
  ],
  [
    2276,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2273,
        0
      ]
    ]
  ],
  [
    2274,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2273,
        0
      ]
    ]
  ],
  [
    2275,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2274,
        0
      ]
    ]
  ],
  [
    2277,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2275,
        0
      ],
      [
        2276,
        0
      ]
    ]
  ],
  [
    2280,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2277,
        0
      ],
      [
        2279,
        0
      ]
    ]
  ],
  [
    2284,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2283,
        0
      ],
      [
        2280,
        0
      ]
    ]
  ],
  [
    2285,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2284,
        0
      ]
    ]
  ],
  [
    2290,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4518,
        0
      ]
    ]
  ],
  [
    4761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4759,
        0
      ]
    ]
  ],
  [
    2288,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4761,
        0
      ]
    ]
  ],
  [
    2291,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2288,
        0
      ],
      [
        2290,
        0
      ]
    ]
  ],
  [
    2292,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2291,
        0
      ]
    ]
  ],
  [
    2299,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4519,
        0
      ]
    ]
  ],
  [
    2293,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2288,
        0
      ]
    ]
  ],
  [
    2296,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2293,
        0
      ]
    ]
  ],
  [
    2294,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2293,
        0
      ]
    ]
  ],
  [
    2295,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2294,
        0
      ]
    ]
  ],
  [
    2297,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2295,
        0
      ],
      [
        2296,
        0
      ]
    ]
  ],
  [
    2300,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2297,
        0
      ],
      [
        2299,
        0
      ]
    ]
  ],
  [
    2301,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2292,
        0
      ],
      [
        2300,
        0
      ]
    ]
  ],
  [
    2306,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2301,
        0
      ],
      [
        2285,
        0
      ]
    ]
  ],
  [
    2309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2306,
        0
      ],
      [
        2308,
        0
      ]
    ]
  ],
  [
    2312,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2309,
        0
      ],
      [
        2311,
        0
      ]
    ]
  ],
  [
    4996,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2312,
        0
      ]
    ]
  ],
  [
    4997,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2312,
        0
      ],
      [
        4996,
        0
      ]
    ]
  ],
  [
    4998,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4997,
        0
      ]
    ]
  ],
  [
    4999,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4997,
        0
      ],
      [
        4998,
        0
      ]
    ]
  ],
  [
    2322,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        4999,
        0
      ],
      [
        2317,
        0
      ]
    ]
  ],
  [
    2324,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2322,
        0
      ]
    ]
  ],
  [
    2325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2324,
        0
      ]
    ]
  ],
  [
    2326,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2325,
        0
      ],
      [
        1274,
        0
      ]
    ]
  ],
  [
    2327,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2256,
        0
      ],
      [
        2326,
        0
      ]
    ]
  ],
  [
    1272,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        997,
        0
      ]
    ]
  ],
  [
    1273,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        996,
        0
      ]
    ]
  ],
  [
    2344,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        995,
        0
      ]
    ]
  ],
  [
    4763,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2344,
        0
      ],
      [
        1273,
        0
      ]
    ]
  ],
  [
    2341,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        999,
        0
      ]
    ]
  ],
  [
    2335,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4521,
        0
      ]
    ]
  ],
  [
    2331,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2330,
        0
      ]
    ]
  ],
  [
    2328,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2327,
        0
      ],
      [
        2327,
        0
      ]
    ]
  ],
  [
    2329,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2328,
        0
      ]
    ]
  ],
  [
    2332,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2329,
        0
      ],
      [
        2331,
        0
      ]
    ]
  ],
  [
    2333,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2332,
        0
      ]
    ]
  ],
  [
    2336,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2333,
        0
      ],
      [
        2335,
        0
      ]
    ]
  ],
  [
    2337,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2336,
        0
      ]
    ]
  ],
  [
    2338,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2337,
        0
      ]
    ]
  ],
  [
    2339,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2338,
        0
      ]
    ]
  ],
  [
    2340,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2327,
        0
      ],
      [
        2339,
        0
      ]
    ]
  ],
  [
    2342,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2341,
        0
      ],
      [
        2340,
        0
      ]
    ]
  ],
  [
    4764,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2342,
        0
      ],
      [
        4763,
        0
      ]
    ]
  ],
  [
    4766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4764,
        0
      ]
    ]
  ],
  [
    4765,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4764,
        0
      ]
    ]
  ],
  [
    2346,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4765,
        0
      ]
    ]
  ],
  [
    2347,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4765,
        0
      ],
      [
        2346,
        0
      ]
    ]
  ],
  [
    2348,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2347,
        0
      ],
      [
        4766,
        0
      ]
    ]
  ],
  [
    2349,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2348,
        0
      ],
      [
        1272,
        0
      ]
    ]
  ],
  [
    2350,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2327,
        0
      ],
      [
        2349,
        0
      ]
    ]
  ],
  [
    1270,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1003,
        0
      ]
    ]
  ],
  [
    2408,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1002,
        0
      ]
    ]
  ],
  [
    2380,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1000,
        0
      ]
    ]
  ],
  [
    1271,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1001,
        0
      ]
    ]
  ],
  [
    4767,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1271,
        0
      ],
      [
        2380,
        0
      ],
      [
        2408,
        0
      ]
    ]
  ],
  [
    2364,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1007,
        0
      ]
    ]
  ],
  [
    2358,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4522,
        0
      ]
    ]
  ],
  [
    2354,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2353,
        0
      ]
    ]
  ],
  [
    2351,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2350,
        0
      ],
      [
        2350,
        0
      ]
    ]
  ],
  [
    2352,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2351,
        0
      ]
    ]
  ],
  [
    2355,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2352,
        0
      ],
      [
        2354,
        0
      ]
    ]
  ],
  [
    2356,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2355,
        0
      ]
    ]
  ],
  [
    2359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2356,
        0
      ],
      [
        2358,
        0
      ]
    ]
  ],
  [
    2360,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2359,
        0
      ]
    ]
  ],
  [
    2361,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2360,
        0
      ]
    ]
  ],
  [
    2362,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2361,
        0
      ]
    ]
  ],
  [
    2363,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2350,
        0
      ],
      [
        2362,
        0
      ]
    ]
  ],
  [
    2365,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2364,
        0
      ],
      [
        2363,
        0
      ]
    ]
  ],
  [
    4768,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2365,
        0
      ],
      [
        4767,
        0
      ]
    ]
  ],
  [
    4771,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4768,
        0
      ]
    ]
  ],
  [
    2410,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4771,
        0
      ]
    ]
  ],
  [
    2411,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2410,
        0
      ]
    ]
  ],
  [
    2405,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4527,
        0
      ]
    ]
  ],
  [
    2402,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        170,
        0
      ]
    ]
  ],
  [
    2376,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4524,
        0
      ]
    ]
  ],
  [
    4769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4768,
        0
      ]
    ]
  ],
  [
    2367,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4769,
        0
      ]
    ]
  ],
  [
    2377,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2367,
        0
      ],
      [
        2376,
        0
      ]
    ]
  ],
  [
    2373,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4523,
        0
      ]
    ]
  ],
  [
    2370,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2367,
        0
      ]
    ]
  ],
  [
    2368,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2367,
        0
      ]
    ]
  ],
  [
    2369,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2368,
        0
      ]
    ]
  ],
  [
    2371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2369,
        0
      ],
      [
        2370,
        0
      ]
    ]
  ],
  [
    2374,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2371,
        0
      ],
      [
        2373,
        0
      ]
    ]
  ],
  [
    2378,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2377,
        0
      ],
      [
        2374,
        0
      ]
    ]
  ],
  [
    2379,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2378,
        0
      ]
    ]
  ],
  [
    2384,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4525,
        0
      ]
    ]
  ],
  [
    4770,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4768,
        0
      ]
    ]
  ],
  [
    2382,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4770,
        0
      ]
    ]
  ],
  [
    2385,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2382,
        0
      ],
      [
        2384,
        0
      ]
    ]
  ],
  [
    2386,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2385,
        0
      ]
    ]
  ],
  [
    2393,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4526,
        0
      ]
    ]
  ],
  [
    2387,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2382,
        0
      ]
    ]
  ],
  [
    2390,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2387,
        0
      ]
    ]
  ],
  [
    2388,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2387,
        0
      ]
    ]
  ],
  [
    2389,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2388,
        0
      ]
    ]
  ],
  [
    2391,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2389,
        0
      ],
      [
        2390,
        0
      ]
    ]
  ],
  [
    2394,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2391,
        0
      ],
      [
        2393,
        0
      ]
    ]
  ],
  [
    2395,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2386,
        0
      ],
      [
        2394,
        0
      ]
    ]
  ],
  [
    2400,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2395,
        0
      ],
      [
        2379,
        0
      ]
    ]
  ],
  [
    2403,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2400,
        0
      ],
      [
        2402,
        0
      ]
    ]
  ],
  [
    2406,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2403,
        0
      ],
      [
        2405,
        0
      ]
    ]
  ],
  [
    5000,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2406,
        0
      ]
    ]
  ],
  [
    5001,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2406,
        0
      ],
      [
        5000,
        0
      ]
    ]
  ],
  [
    5002,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5001,
        0
      ]
    ]
  ],
  [
    5003,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5001,
        0
      ],
      [
        5002,
        0
      ]
    ]
  ],
  [
    2416,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5003,
        0
      ],
      [
        2411,
        0
      ]
    ]
  ],
  [
    2418,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2416,
        0
      ]
    ]
  ],
  [
    2419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2418,
        0
      ]
    ]
  ],
  [
    2420,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2419,
        0
      ],
      [
        1270,
        0
      ]
    ]
  ],
  [
    2421,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2350,
        0
      ],
      [
        2420,
        0
      ]
    ]
  ],
  [
    1268,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1006,
        0
      ]
    ]
  ],
  [
    1269,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1005,
        0
      ]
    ]
  ],
  [
    2438,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1004,
        0
      ]
    ]
  ],
  [
    4772,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2438,
        0
      ],
      [
        1269,
        0
      ]
    ]
  ],
  [
    2435,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1008,
        0
      ]
    ]
  ],
  [
    2429,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4528,
        0
      ]
    ]
  ],
  [
    2425,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2424,
        0
      ]
    ]
  ],
  [
    2422,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2421,
        0
      ],
      [
        2421,
        0
      ]
    ]
  ],
  [
    2423,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2422,
        0
      ]
    ]
  ],
  [
    2426,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2423,
        0
      ],
      [
        2425,
        0
      ]
    ]
  ],
  [
    2427,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2426,
        0
      ]
    ]
  ],
  [
    2430,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2427,
        0
      ],
      [
        2429,
        0
      ]
    ]
  ],
  [
    2431,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2430,
        0
      ]
    ]
  ],
  [
    2432,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2431,
        0
      ]
    ]
  ],
  [
    2433,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2432,
        0
      ]
    ]
  ],
  [
    2434,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2421,
        0
      ],
      [
        2433,
        0
      ]
    ]
  ],
  [
    2436,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2435,
        0
      ],
      [
        2434,
        0
      ]
    ]
  ],
  [
    4773,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2436,
        0
      ],
      [
        4772,
        0
      ]
    ]
  ],
  [
    4775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4773,
        0
      ]
    ]
  ],
  [
    4774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4773,
        0
      ]
    ]
  ],
  [
    2440,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4774,
        0
      ]
    ]
  ],
  [
    2441,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4774,
        0
      ],
      [
        2440,
        0
      ]
    ]
  ],
  [
    2442,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2441,
        0
      ],
      [
        4775,
        0
      ]
    ]
  ],
  [
    2443,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2442,
        0
      ],
      [
        1268,
        0
      ]
    ]
  ],
  [
    2444,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2421,
        0
      ],
      [
        2443,
        0
      ]
    ]
  ],
  [
    1266,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1012,
        0
      ]
    ]
  ],
  [
    2502,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1011,
        0
      ]
    ]
  ],
  [
    2474,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1009,
        0
      ]
    ]
  ],
  [
    1267,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1010,
        0
      ]
    ]
  ],
  [
    4776,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1267,
        0
      ],
      [
        2474,
        0
      ],
      [
        2502,
        0
      ]
    ]
  ],
  [
    2458,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1016,
        0
      ]
    ]
  ],
  [
    2452,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4529,
        0
      ]
    ]
  ],
  [
    2448,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2447,
        0
      ]
    ]
  ],
  [
    2445,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2444,
        0
      ],
      [
        2444,
        0
      ]
    ]
  ],
  [
    2446,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2445,
        0
      ]
    ]
  ],
  [
    2449,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2446,
        0
      ],
      [
        2448,
        0
      ]
    ]
  ],
  [
    2450,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2449,
        0
      ]
    ]
  ],
  [
    2453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2450,
        0
      ],
      [
        2452,
        0
      ]
    ]
  ],
  [
    2454,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2453,
        0
      ]
    ]
  ],
  [
    2455,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2454,
        0
      ]
    ]
  ],
  [
    2456,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2455,
        0
      ]
    ]
  ],
  [
    2457,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2444,
        0
      ],
      [
        2456,
        0
      ]
    ]
  ],
  [
    2459,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2458,
        0
      ],
      [
        2457,
        0
      ]
    ]
  ],
  [
    4777,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2459,
        0
      ],
      [
        4776,
        0
      ]
    ]
  ],
  [
    4780,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    2504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4780,
        0
      ]
    ]
  ],
  [
    2505,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2504,
        0
      ]
    ]
  ],
  [
    2499,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4534,
        0
      ]
    ]
  ],
  [
    2496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        183,
        0
      ]
    ]
  ],
  [
    2470,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4531,
        0
      ]
    ]
  ],
  [
    4778,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    2461,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4778,
        0
      ]
    ]
  ],
  [
    2471,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2461,
        0
      ],
      [
        2470,
        0
      ]
    ]
  ],
  [
    2467,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4530,
        0
      ]
    ]
  ],
  [
    2464,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2461,
        0
      ]
    ]
  ],
  [
    2462,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2461,
        0
      ]
    ]
  ],
  [
    2463,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2462,
        0
      ]
    ]
  ],
  [
    2465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2463,
        0
      ],
      [
        2464,
        0
      ]
    ]
  ],
  [
    2468,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2465,
        0
      ],
      [
        2467,
        0
      ]
    ]
  ],
  [
    2472,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2471,
        0
      ],
      [
        2468,
        0
      ]
    ]
  ],
  [
    2473,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2472,
        0
      ]
    ]
  ],
  [
    2478,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4532,
        0
      ]
    ]
  ],
  [
    4779,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4777,
        0
      ]
    ]
  ],
  [
    2476,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4779,
        0
      ]
    ]
  ],
  [
    2479,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2476,
        0
      ],
      [
        2478,
        0
      ]
    ]
  ],
  [
    2480,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2479,
        0
      ]
    ]
  ],
  [
    2487,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4533,
        0
      ]
    ]
  ],
  [
    2481,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2476,
        0
      ]
    ]
  ],
  [
    2484,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2481,
        0
      ]
    ]
  ],
  [
    2482,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2481,
        0
      ]
    ]
  ],
  [
    2483,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2482,
        0
      ]
    ]
  ],
  [
    2485,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2483,
        0
      ],
      [
        2484,
        0
      ]
    ]
  ],
  [
    2488,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2485,
        0
      ],
      [
        2487,
        0
      ]
    ]
  ],
  [
    2489,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2480,
        0
      ],
      [
        2488,
        0
      ]
    ]
  ],
  [
    2494,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2489,
        0
      ],
      [
        2473,
        0
      ]
    ]
  ],
  [
    2497,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2494,
        0
      ],
      [
        2496,
        0
      ]
    ]
  ],
  [
    2500,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2497,
        0
      ],
      [
        2499,
        0
      ]
    ]
  ],
  [
    5004,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2500,
        0
      ]
    ]
  ],
  [
    5005,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2500,
        0
      ],
      [
        5004,
        0
      ]
    ]
  ],
  [
    5006,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5005,
        0
      ]
    ]
  ],
  [
    5007,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5005,
        0
      ],
      [
        5006,
        0
      ]
    ]
  ],
  [
    2510,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5007,
        0
      ],
      [
        2505,
        0
      ]
    ]
  ],
  [
    2512,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2510,
        0
      ]
    ]
  ],
  [
    2513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2512,
        0
      ]
    ]
  ],
  [
    2514,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2513,
        0
      ],
      [
        1266,
        0
      ]
    ]
  ],
  [
    2515,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2444,
        0
      ],
      [
        2514,
        0
      ]
    ]
  ],
  [
    1264,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1015,
        0
      ]
    ]
  ],
  [
    1265,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1014,
        0
      ]
    ]
  ],
  [
    2532,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1013,
        0
      ]
    ]
  ],
  [
    4781,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2532,
        0
      ],
      [
        1265,
        0
      ]
    ]
  ],
  [
    2529,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1017,
        0
      ]
    ]
  ],
  [
    2523,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4535,
        0
      ]
    ]
  ],
  [
    2519,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2518,
        0
      ]
    ]
  ],
  [
    2516,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2515,
        0
      ],
      [
        2515,
        0
      ]
    ]
  ],
  [
    2517,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2516,
        0
      ]
    ]
  ],
  [
    2520,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2517,
        0
      ],
      [
        2519,
        0
      ]
    ]
  ],
  [
    2521,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2520,
        0
      ]
    ]
  ],
  [
    2524,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2521,
        0
      ],
      [
        2523,
        0
      ]
    ]
  ],
  [
    2525,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2524,
        0
      ]
    ]
  ],
  [
    2526,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2525,
        0
      ]
    ]
  ],
  [
    2527,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2526,
        0
      ]
    ]
  ],
  [
    2528,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2515,
        0
      ],
      [
        2527,
        0
      ]
    ]
  ],
  [
    2530,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2529,
        0
      ],
      [
        2528,
        0
      ]
    ]
  ],
  [
    4782,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2530,
        0
      ],
      [
        4781,
        0
      ]
    ]
  ],
  [
    4784,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4782,
        0
      ]
    ]
  ],
  [
    4783,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4782,
        0
      ]
    ]
  ],
  [
    2534,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4783,
        0
      ]
    ]
  ],
  [
    2535,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4783,
        0
      ],
      [
        2534,
        0
      ]
    ]
  ],
  [
    2536,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2535,
        0
      ],
      [
        4784,
        0
      ]
    ]
  ],
  [
    2537,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2536,
        0
      ],
      [
        1264,
        0
      ]
    ]
  ],
  [
    2538,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2515,
        0
      ],
      [
        2537,
        0
      ]
    ]
  ],
  [
    1262,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1021,
        0
      ]
    ]
  ],
  [
    2596,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1020,
        0
      ]
    ]
  ],
  [
    2568,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1018,
        0
      ]
    ]
  ],
  [
    1263,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1019,
        0
      ]
    ]
  ],
  [
    4785,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1263,
        0
      ],
      [
        2568,
        0
      ],
      [
        2596,
        0
      ]
    ]
  ],
  [
    2552,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1025,
        0
      ]
    ]
  ],
  [
    2546,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4536,
        0
      ]
    ]
  ],
  [
    2542,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2541,
        0
      ]
    ]
  ],
  [
    2539,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2538,
        0
      ],
      [
        2538,
        0
      ]
    ]
  ],
  [
    2540,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2539,
        0
      ]
    ]
  ],
  [
    2543,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2540,
        0
      ],
      [
        2542,
        0
      ]
    ]
  ],
  [
    2544,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2543,
        0
      ]
    ]
  ],
  [
    2547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2544,
        0
      ],
      [
        2546,
        0
      ]
    ]
  ],
  [
    2548,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2547,
        0
      ]
    ]
  ],
  [
    2549,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2548,
        0
      ]
    ]
  ],
  [
    2550,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2549,
        0
      ]
    ]
  ],
  [
    2551,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2538,
        0
      ],
      [
        2550,
        0
      ]
    ]
  ],
  [
    2553,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2552,
        0
      ],
      [
        2551,
        0
      ]
    ]
  ],
  [
    4786,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2553,
        0
      ],
      [
        4785,
        0
      ]
    ]
  ],
  [
    4789,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4786,
        0
      ]
    ]
  ],
  [
    2598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4789,
        0
      ]
    ]
  ],
  [
    2599,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2598,
        0
      ]
    ]
  ],
  [
    2593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4541,
        0
      ]
    ]
  ],
  [
    2590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        196,
        0
      ]
    ]
  ],
  [
    2564,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4538,
        0
      ]
    ]
  ],
  [
    4787,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4786,
        0
      ]
    ]
  ],
  [
    2555,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4787,
        0
      ]
    ]
  ],
  [
    2565,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2555,
        0
      ],
      [
        2564,
        0
      ]
    ]
  ],
  [
    2561,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4537,
        0
      ]
    ]
  ],
  [
    2558,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2555,
        0
      ]
    ]
  ],
  [
    2556,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2555,
        0
      ]
    ]
  ],
  [
    2557,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2556,
        0
      ]
    ]
  ],
  [
    2559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2557,
        0
      ],
      [
        2558,
        0
      ]
    ]
  ],
  [
    2562,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2559,
        0
      ],
      [
        2561,
        0
      ]
    ]
  ],
  [
    2566,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2565,
        0
      ],
      [
        2562,
        0
      ]
    ]
  ],
  [
    2567,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2566,
        0
      ]
    ]
  ],
  [
    2572,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4539,
        0
      ]
    ]
  ],
  [
    4788,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4786,
        0
      ]
    ]
  ],
  [
    2570,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4788,
        0
      ]
    ]
  ],
  [
    2573,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2570,
        0
      ],
      [
        2572,
        0
      ]
    ]
  ],
  [
    2574,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2573,
        0
      ]
    ]
  ],
  [
    2581,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4540,
        0
      ]
    ]
  ],
  [
    2575,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2570,
        0
      ]
    ]
  ],
  [
    2578,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2575,
        0
      ]
    ]
  ],
  [
    2576,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2575,
        0
      ]
    ]
  ],
  [
    2577,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2576,
        0
      ]
    ]
  ],
  [
    2579,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2577,
        0
      ],
      [
        2578,
        0
      ]
    ]
  ],
  [
    2582,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2579,
        0
      ],
      [
        2581,
        0
      ]
    ]
  ],
  [
    2583,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2574,
        0
      ],
      [
        2582,
        0
      ]
    ]
  ],
  [
    2588,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2583,
        0
      ],
      [
        2567,
        0
      ]
    ]
  ],
  [
    2591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2588,
        0
      ],
      [
        2590,
        0
      ]
    ]
  ],
  [
    2594,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2591,
        0
      ],
      [
        2593,
        0
      ]
    ]
  ],
  [
    5008,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2594,
        0
      ]
    ]
  ],
  [
    5009,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2594,
        0
      ],
      [
        5008,
        0
      ]
    ]
  ],
  [
    5010,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5009,
        0
      ]
    ]
  ],
  [
    5011,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5009,
        0
      ],
      [
        5010,
        0
      ]
    ]
  ],
  [
    2604,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5011,
        0
      ],
      [
        2599,
        0
      ]
    ]
  ],
  [
    2606,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2604,
        0
      ]
    ]
  ],
  [
    2607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2606,
        0
      ]
    ]
  ],
  [
    2608,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2607,
        0
      ],
      [
        1262,
        0
      ]
    ]
  ],
  [
    2609,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2538,
        0
      ],
      [
        2608,
        0
      ]
    ]
  ],
  [
    1260,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1024,
        0
      ]
    ]
  ],
  [
    1261,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1023,
        0
      ]
    ]
  ],
  [
    2626,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1022,
        0
      ]
    ]
  ],
  [
    4790,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2626,
        0
      ],
      [
        1261,
        0
      ]
    ]
  ],
  [
    2623,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1026,
        0
      ]
    ]
  ],
  [
    2617,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4542,
        0
      ]
    ]
  ],
  [
    2613,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2612,
        0
      ]
    ]
  ],
  [
    2610,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2609,
        0
      ],
      [
        2609,
        0
      ]
    ]
  ],
  [
    2611,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2610,
        0
      ]
    ]
  ],
  [
    2614,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2611,
        0
      ],
      [
        2613,
        0
      ]
    ]
  ],
  [
    2615,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2614,
        0
      ]
    ]
  ],
  [
    2618,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2615,
        0
      ],
      [
        2617,
        0
      ]
    ]
  ],
  [
    2619,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2618,
        0
      ]
    ]
  ],
  [
    2620,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2619,
        0
      ]
    ]
  ],
  [
    2621,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2620,
        0
      ]
    ]
  ],
  [
    2622,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2609,
        0
      ],
      [
        2621,
        0
      ]
    ]
  ],
  [
    2624,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2623,
        0
      ],
      [
        2622,
        0
      ]
    ]
  ],
  [
    4791,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2624,
        0
      ],
      [
        4790,
        0
      ]
    ]
  ],
  [
    4793,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4791,
        0
      ]
    ]
  ],
  [
    4792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4791,
        0
      ]
    ]
  ],
  [
    2628,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4792,
        0
      ]
    ]
  ],
  [
    2629,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4792,
        0
      ],
      [
        2628,
        0
      ]
    ]
  ],
  [
    2630,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2629,
        0
      ],
      [
        4793,
        0
      ]
    ]
  ],
  [
    2631,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2630,
        0
      ],
      [
        1260,
        0
      ]
    ]
  ],
  [
    2632,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2609,
        0
      ],
      [
        2631,
        0
      ]
    ]
  ],
  [
    1258,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1030,
        0
      ]
    ]
  ],
  [
    2690,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1029,
        0
      ]
    ]
  ],
  [
    2662,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1027,
        0
      ]
    ]
  ],
  [
    1259,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1028,
        0
      ]
    ]
  ],
  [
    4794,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1259,
        0
      ],
      [
        2662,
        0
      ],
      [
        2690,
        0
      ]
    ]
  ],
  [
    2646,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1034,
        0
      ]
    ]
  ],
  [
    2640,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4543,
        0
      ]
    ]
  ],
  [
    2636,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2635,
        0
      ]
    ]
  ],
  [
    2633,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2632,
        0
      ],
      [
        2632,
        0
      ]
    ]
  ],
  [
    2634,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2633,
        0
      ]
    ]
  ],
  [
    2637,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2634,
        0
      ],
      [
        2636,
        0
      ]
    ]
  ],
  [
    2638,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2637,
        0
      ]
    ]
  ],
  [
    2641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2638,
        0
      ],
      [
        2640,
        0
      ]
    ]
  ],
  [
    2642,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2641,
        0
      ]
    ]
  ],
  [
    2643,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2642,
        0
      ]
    ]
  ],
  [
    2644,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2643,
        0
      ]
    ]
  ],
  [
    2645,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2632,
        0
      ],
      [
        2644,
        0
      ]
    ]
  ],
  [
    2647,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2646,
        0
      ],
      [
        2645,
        0
      ]
    ]
  ],
  [
    4795,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2647,
        0
      ],
      [
        4794,
        0
      ]
    ]
  ],
  [
    4798,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4795,
        0
      ]
    ]
  ],
  [
    2692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4798,
        0
      ]
    ]
  ],
  [
    2693,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2692,
        0
      ]
    ]
  ],
  [
    2687,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4548,
        0
      ]
    ]
  ],
  [
    2684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        209,
        0
      ]
    ]
  ],
  [
    2658,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4545,
        0
      ]
    ]
  ],
  [
    4796,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4795,
        0
      ]
    ]
  ],
  [
    2649,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4796,
        0
      ]
    ]
  ],
  [
    2659,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2649,
        0
      ],
      [
        2658,
        0
      ]
    ]
  ],
  [
    2655,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4544,
        0
      ]
    ]
  ],
  [
    2652,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2649,
        0
      ]
    ]
  ],
  [
    2650,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2649,
        0
      ]
    ]
  ],
  [
    2651,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2650,
        0
      ]
    ]
  ],
  [
    2653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2651,
        0
      ],
      [
        2652,
        0
      ]
    ]
  ],
  [
    2656,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2653,
        0
      ],
      [
        2655,
        0
      ]
    ]
  ],
  [
    2660,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2659,
        0
      ],
      [
        2656,
        0
      ]
    ]
  ],
  [
    2661,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2660,
        0
      ]
    ]
  ],
  [
    2666,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4546,
        0
      ]
    ]
  ],
  [
    4797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4795,
        0
      ]
    ]
  ],
  [
    2664,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4797,
        0
      ]
    ]
  ],
  [
    2667,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2664,
        0
      ],
      [
        2666,
        0
      ]
    ]
  ],
  [
    2668,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2667,
        0
      ]
    ]
  ],
  [
    2675,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4547,
        0
      ]
    ]
  ],
  [
    2669,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2664,
        0
      ]
    ]
  ],
  [
    2672,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2669,
        0
      ]
    ]
  ],
  [
    2670,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2669,
        0
      ]
    ]
  ],
  [
    2671,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2670,
        0
      ]
    ]
  ],
  [
    2673,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2671,
        0
      ],
      [
        2672,
        0
      ]
    ]
  ],
  [
    2676,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2673,
        0
      ],
      [
        2675,
        0
      ]
    ]
  ],
  [
    2677,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2668,
        0
      ],
      [
        2676,
        0
      ]
    ]
  ],
  [
    2682,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2677,
        0
      ],
      [
        2661,
        0
      ]
    ]
  ],
  [
    2685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2682,
        0
      ],
      [
        2684,
        0
      ]
    ]
  ],
  [
    2688,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2685,
        0
      ],
      [
        2687,
        0
      ]
    ]
  ],
  [
    5012,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2688,
        0
      ]
    ]
  ],
  [
    5013,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2688,
        0
      ],
      [
        5012,
        0
      ]
    ]
  ],
  [
    5014,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5013,
        0
      ]
    ]
  ],
  [
    5015,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5013,
        0
      ],
      [
        5014,
        0
      ]
    ]
  ],
  [
    2698,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5015,
        0
      ],
      [
        2693,
        0
      ]
    ]
  ],
  [
    2700,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2698,
        0
      ]
    ]
  ],
  [
    2701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2700,
        0
      ]
    ]
  ],
  [
    2702,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2701,
        0
      ],
      [
        1258,
        0
      ]
    ]
  ],
  [
    2703,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2632,
        0
      ],
      [
        2702,
        0
      ]
    ]
  ],
  [
    1256,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1033,
        0
      ]
    ]
  ],
  [
    1257,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1032,
        0
      ]
    ]
  ],
  [
    2720,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1031,
        0
      ]
    ]
  ],
  [
    4799,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2720,
        0
      ],
      [
        1257,
        0
      ]
    ]
  ],
  [
    2717,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1035,
        0
      ]
    ]
  ],
  [
    2711,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4549,
        0
      ]
    ]
  ],
  [
    2707,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2706,
        0
      ]
    ]
  ],
  [
    2704,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2703,
        0
      ],
      [
        2703,
        0
      ]
    ]
  ],
  [
    2705,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2704,
        0
      ]
    ]
  ],
  [
    2708,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2705,
        0
      ],
      [
        2707,
        0
      ]
    ]
  ],
  [
    2709,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2708,
        0
      ]
    ]
  ],
  [
    2712,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2709,
        0
      ],
      [
        2711,
        0
      ]
    ]
  ],
  [
    2713,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2712,
        0
      ]
    ]
  ],
  [
    2714,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2713,
        0
      ]
    ]
  ],
  [
    2715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2714,
        0
      ]
    ]
  ],
  [
    2716,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2703,
        0
      ],
      [
        2715,
        0
      ]
    ]
  ],
  [
    2718,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2717,
        0
      ],
      [
        2716,
        0
      ]
    ]
  ],
  [
    4800,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2718,
        0
      ],
      [
        4799,
        0
      ]
    ]
  ],
  [
    4802,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4800,
        0
      ]
    ]
  ],
  [
    4801,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4800,
        0
      ]
    ]
  ],
  [
    2722,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4801,
        0
      ]
    ]
  ],
  [
    2723,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4801,
        0
      ],
      [
        2722,
        0
      ]
    ]
  ],
  [
    2724,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2723,
        0
      ],
      [
        4802,
        0
      ]
    ]
  ],
  [
    2725,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2724,
        0
      ],
      [
        1256,
        0
      ]
    ]
  ],
  [
    2726,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2703,
        0
      ],
      [
        2725,
        0
      ]
    ]
  ],
  [
    1254,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1039,
        0
      ]
    ]
  ],
  [
    2784,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1038,
        0
      ]
    ]
  ],
  [
    2756,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1036,
        0
      ]
    ]
  ],
  [
    1255,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1037,
        0
      ]
    ]
  ],
  [
    4803,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1255,
        0
      ],
      [
        2756,
        0
      ],
      [
        2784,
        0
      ]
    ]
  ],
  [
    2740,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1043,
        0
      ]
    ]
  ],
  [
    2734,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4550,
        0
      ]
    ]
  ],
  [
    2730,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2729,
        0
      ]
    ]
  ],
  [
    2727,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2726,
        0
      ],
      [
        2726,
        0
      ]
    ]
  ],
  [
    2728,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2727,
        0
      ]
    ]
  ],
  [
    2731,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2728,
        0
      ],
      [
        2730,
        0
      ]
    ]
  ],
  [
    2732,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2731,
        0
      ]
    ]
  ],
  [
    2735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2732,
        0
      ],
      [
        2734,
        0
      ]
    ]
  ],
  [
    2736,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2735,
        0
      ]
    ]
  ],
  [
    2737,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2736,
        0
      ]
    ]
  ],
  [
    2738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2737,
        0
      ]
    ]
  ],
  [
    2739,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2726,
        0
      ],
      [
        2738,
        0
      ]
    ]
  ],
  [
    2741,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2740,
        0
      ],
      [
        2739,
        0
      ]
    ]
  ],
  [
    4804,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2741,
        0
      ],
      [
        4803,
        0
      ]
    ]
  ],
  [
    4807,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4804,
        0
      ]
    ]
  ],
  [
    2786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4807,
        0
      ]
    ]
  ],
  [
    2787,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2786,
        0
      ]
    ]
  ],
  [
    2781,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4555,
        0
      ]
    ]
  ],
  [
    2778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        222,
        0
      ]
    ]
  ],
  [
    2752,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4552,
        0
      ]
    ]
  ],
  [
    4805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4804,
        0
      ]
    ]
  ],
  [
    2743,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4805,
        0
      ]
    ]
  ],
  [
    2753,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2743,
        0
      ],
      [
        2752,
        0
      ]
    ]
  ],
  [
    2749,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4551,
        0
      ]
    ]
  ],
  [
    2746,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2743,
        0
      ]
    ]
  ],
  [
    2744,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2743,
        0
      ]
    ]
  ],
  [
    2745,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2744,
        0
      ]
    ]
  ],
  [
    2747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2745,
        0
      ],
      [
        2746,
        0
      ]
    ]
  ],
  [
    2750,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2747,
        0
      ],
      [
        2749,
        0
      ]
    ]
  ],
  [
    2754,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2753,
        0
      ],
      [
        2750,
        0
      ]
    ]
  ],
  [
    2755,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2754,
        0
      ]
    ]
  ],
  [
    2760,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4553,
        0
      ]
    ]
  ],
  [
    4806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4804,
        0
      ]
    ]
  ],
  [
    2758,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4806,
        0
      ]
    ]
  ],
  [
    2761,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2758,
        0
      ],
      [
        2760,
        0
      ]
    ]
  ],
  [
    2762,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2761,
        0
      ]
    ]
  ],
  [
    2769,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4496,
        0
      ]
    ]
  ],
  [
    2763,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2758,
        0
      ]
    ]
  ],
  [
    2766,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2763,
        0
      ]
    ]
  ],
  [
    2764,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2763,
        0
      ]
    ]
  ],
  [
    2765,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2764,
        0
      ]
    ]
  ],
  [
    2767,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2765,
        0
      ],
      [
        2766,
        0
      ]
    ]
  ],
  [
    2770,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2767,
        0
      ],
      [
        2769,
        0
      ]
    ]
  ],
  [
    2771,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2762,
        0
      ],
      [
        2770,
        0
      ]
    ]
  ],
  [
    2776,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2771,
        0
      ],
      [
        2755,
        0
      ]
    ]
  ],
  [
    2779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2776,
        0
      ],
      [
        2778,
        0
      ]
    ]
  ],
  [
    2782,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2779,
        0
      ],
      [
        2781,
        0
      ]
    ]
  ],
  [
    5016,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2782,
        0
      ]
    ]
  ],
  [
    5017,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2782,
        0
      ],
      [
        5016,
        0
      ]
    ]
  ],
  [
    5018,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5017,
        0
      ]
    ]
  ],
  [
    5019,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5017,
        0
      ],
      [
        5018,
        0
      ]
    ]
  ],
  [
    2792,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5019,
        0
      ],
      [
        2787,
        0
      ]
    ]
  ],
  [
    2794,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2792,
        0
      ]
    ]
  ],
  [
    2795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2794,
        0
      ]
    ]
  ],
  [
    2796,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2795,
        0
      ],
      [
        1254,
        0
      ]
    ]
  ],
  [
    2797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2726,
        0
      ],
      [
        2796,
        0
      ]
    ]
  ],
  [
    1252,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1042,
        0
      ]
    ]
  ],
  [
    1253,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1041,
        0
      ]
    ]
  ],
  [
    2814,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1040,
        0
      ]
    ]
  ],
  [
    4808,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2814,
        0
      ],
      [
        1253,
        0
      ]
    ]
  ],
  [
    2811,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1044,
        0
      ]
    ]
  ],
  [
    2805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4556,
        0
      ]
    ]
  ],
  [
    2801,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2800,
        0
      ]
    ]
  ],
  [
    2798,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2797,
        0
      ],
      [
        2797,
        0
      ]
    ]
  ],
  [
    2799,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2798,
        0
      ]
    ]
  ],
  [
    2802,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2799,
        0
      ],
      [
        2801,
        0
      ]
    ]
  ],
  [
    2803,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2802,
        0
      ]
    ]
  ],
  [
    2806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2803,
        0
      ],
      [
        2805,
        0
      ]
    ]
  ],
  [
    2807,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2806,
        0
      ]
    ]
  ],
  [
    2808,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2807,
        0
      ]
    ]
  ],
  [
    2809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2808,
        0
      ]
    ]
  ],
  [
    2810,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2797,
        0
      ],
      [
        2809,
        0
      ]
    ]
  ],
  [
    2812,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2811,
        0
      ],
      [
        2810,
        0
      ]
    ]
  ],
  [
    4809,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2812,
        0
      ],
      [
        4808,
        0
      ]
    ]
  ],
  [
    4811,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4809,
        0
      ]
    ]
  ],
  [
    4810,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4809,
        0
      ]
    ]
  ],
  [
    2816,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4810,
        0
      ]
    ]
  ],
  [
    2817,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4810,
        0
      ],
      [
        2816,
        0
      ]
    ]
  ],
  [
    2818,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2817,
        0
      ],
      [
        4811,
        0
      ]
    ]
  ],
  [
    2819,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2818,
        0
      ],
      [
        1252,
        0
      ]
    ]
  ],
  [
    2820,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2797,
        0
      ],
      [
        2819,
        0
      ]
    ]
  ],
  [
    1250,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1048,
        0
      ]
    ]
  ],
  [
    2878,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1047,
        0
      ]
    ]
  ],
  [
    2850,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1045,
        0
      ]
    ]
  ],
  [
    1251,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1046,
        0
      ]
    ]
  ],
  [
    4812,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1251,
        0
      ],
      [
        2850,
        0
      ],
      [
        2878,
        0
      ]
    ]
  ],
  [
    2834,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1052,
        0
      ]
    ]
  ],
  [
    2828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4557,
        0
      ]
    ]
  ],
  [
    2824,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2823,
        0
      ]
    ]
  ],
  [
    2821,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2820,
        0
      ],
      [
        2820,
        0
      ]
    ]
  ],
  [
    2822,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2821,
        0
      ]
    ]
  ],
  [
    2825,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2822,
        0
      ],
      [
        2824,
        0
      ]
    ]
  ],
  [
    2826,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2825,
        0
      ]
    ]
  ],
  [
    2829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2826,
        0
      ],
      [
        2828,
        0
      ]
    ]
  ],
  [
    2830,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2829,
        0
      ]
    ]
  ],
  [
    2831,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2830,
        0
      ]
    ]
  ],
  [
    2832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2831,
        0
      ]
    ]
  ],
  [
    2833,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2820,
        0
      ],
      [
        2832,
        0
      ]
    ]
  ],
  [
    2835,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2834,
        0
      ],
      [
        2833,
        0
      ]
    ]
  ],
  [
    4813,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2835,
        0
      ],
      [
        4812,
        0
      ]
    ]
  ],
  [
    4816,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4813,
        0
      ]
    ]
  ],
  [
    2880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4816,
        0
      ]
    ]
  ],
  [
    2881,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2880,
        0
      ]
    ]
  ],
  [
    2875,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4562,
        0
      ]
    ]
  ],
  [
    2872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        235,
        0
      ]
    ]
  ],
  [
    2846,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4559,
        0
      ]
    ]
  ],
  [
    4814,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4813,
        0
      ]
    ]
  ],
  [
    2837,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4814,
        0
      ]
    ]
  ],
  [
    2847,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2837,
        0
      ],
      [
        2846,
        0
      ]
    ]
  ],
  [
    2843,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4558,
        0
      ]
    ]
  ],
  [
    2840,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2837,
        0
      ]
    ]
  ],
  [
    2838,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2837,
        0
      ]
    ]
  ],
  [
    2839,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2838,
        0
      ]
    ]
  ],
  [
    2841,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2839,
        0
      ],
      [
        2840,
        0
      ]
    ]
  ],
  [
    2844,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2841,
        0
      ],
      [
        2843,
        0
      ]
    ]
  ],
  [
    2848,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2847,
        0
      ],
      [
        2844,
        0
      ]
    ]
  ],
  [
    2849,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2848,
        0
      ]
    ]
  ],
  [
    2854,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4560,
        0
      ]
    ]
  ],
  [
    4815,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4813,
        0
      ]
    ]
  ],
  [
    2852,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4815,
        0
      ]
    ]
  ],
  [
    2855,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2852,
        0
      ],
      [
        2854,
        0
      ]
    ]
  ],
  [
    2856,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2855,
        0
      ]
    ]
  ],
  [
    2863,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4561,
        0
      ]
    ]
  ],
  [
    2857,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2852,
        0
      ]
    ]
  ],
  [
    2860,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2857,
        0
      ]
    ]
  ],
  [
    2858,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2857,
        0
      ]
    ]
  ],
  [
    2859,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2858,
        0
      ]
    ]
  ],
  [
    2861,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2859,
        0
      ],
      [
        2860,
        0
      ]
    ]
  ],
  [
    2864,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2861,
        0
      ],
      [
        2863,
        0
      ]
    ]
  ],
  [
    2865,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2856,
        0
      ],
      [
        2864,
        0
      ]
    ]
  ],
  [
    2870,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2865,
        0
      ],
      [
        2849,
        0
      ]
    ]
  ],
  [
    2873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2870,
        0
      ],
      [
        2872,
        0
      ]
    ]
  ],
  [
    2876,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2873,
        0
      ],
      [
        2875,
        0
      ]
    ]
  ],
  [
    5020,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2876,
        0
      ]
    ]
  ],
  [
    5021,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2876,
        0
      ],
      [
        5020,
        0
      ]
    ]
  ],
  [
    5022,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5021,
        0
      ]
    ]
  ],
  [
    5023,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5021,
        0
      ],
      [
        5022,
        0
      ]
    ]
  ],
  [
    2886,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5023,
        0
      ],
      [
        2881,
        0
      ]
    ]
  ],
  [
    2888,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2886,
        0
      ]
    ]
  ],
  [
    2889,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2888,
        0
      ]
    ]
  ],
  [
    2890,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2889,
        0
      ],
      [
        1250,
        0
      ]
    ]
  ],
  [
    2891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2820,
        0
      ],
      [
        2890,
        0
      ]
    ]
  ],
  [
    1248,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1051,
        0
      ]
    ]
  ],
  [
    1249,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1050,
        0
      ]
    ]
  ],
  [
    2908,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1049,
        0
      ]
    ]
  ],
  [
    4817,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        2908,
        0
      ],
      [
        1249,
        0
      ]
    ]
  ],
  [
    2905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1053,
        0
      ]
    ]
  ],
  [
    2899,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4563,
        0
      ]
    ]
  ],
  [
    2895,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2894,
        0
      ]
    ]
  ],
  [
    2892,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2891,
        0
      ],
      [
        2891,
        0
      ]
    ]
  ],
  [
    2893,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2892,
        0
      ]
    ]
  ],
  [
    2896,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2893,
        0
      ],
      [
        2895,
        0
      ]
    ]
  ],
  [
    2897,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2896,
        0
      ]
    ]
  ],
  [
    2900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2897,
        0
      ],
      [
        2899,
        0
      ]
    ]
  ],
  [
    2901,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2900,
        0
      ]
    ]
  ],
  [
    2902,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2901,
        0
      ]
    ]
  ],
  [
    2903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2902,
        0
      ]
    ]
  ],
  [
    2904,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2891,
        0
      ],
      [
        2903,
        0
      ]
    ]
  ],
  [
    2906,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2905,
        0
      ],
      [
        2904,
        0
      ]
    ]
  ],
  [
    4818,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        2906,
        0
      ],
      [
        4817,
        0
      ]
    ]
  ],
  [
    4820,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4818,
        0
      ]
    ]
  ],
  [
    4819,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4818,
        0
      ]
    ]
  ],
  [
    2910,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4819,
        0
      ]
    ]
  ],
  [
    2911,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4819,
        0
      ],
      [
        2910,
        0
      ]
    ]
  ],
  [
    2912,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        2911,
        0
      ],
      [
        4820,
        0
      ]
    ]
  ],
  [
    2913,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        2912,
        0
      ],
      [
        1248,
        0
      ]
    ]
  ],
  [
    2914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2891,
        0
      ],
      [
        2913,
        0
      ]
    ]
  ],
  [
    1246,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1057,
        0
      ]
    ]
  ],
  [
    2972,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1056,
        0
      ]
    ]
  ],
  [
    2944,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1054,
        0
      ]
    ]
  ],
  [
    1247,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1055,
        0
      ]
    ]
  ],
  [
    4821,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1247,
        0
      ],
      [
        2944,
        0
      ],
      [
        2972,
        0
      ]
    ]
  ],
  [
    2928,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1061,
        0
      ]
    ]
  ],
  [
    2922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4564,
        0
      ]
    ]
  ],
  [
    2918,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2917,
        0
      ]
    ]
  ],
  [
    2915,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2914,
        0
      ],
      [
        2914,
        0
      ]
    ]
  ],
  [
    2916,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2915,
        0
      ]
    ]
  ],
  [
    2919,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2916,
        0
      ],
      [
        2918,
        0
      ]
    ]
  ],
  [
    2920,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2919,
        0
      ]
    ]
  ],
  [
    2923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2920,
        0
      ],
      [
        2922,
        0
      ]
    ]
  ],
  [
    2924,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2923,
        0
      ]
    ]
  ],
  [
    2925,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2924,
        0
      ]
    ]
  ],
  [
    2926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2925,
        0
      ]
    ]
  ],
  [
    2927,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2914,
        0
      ],
      [
        2926,
        0
      ]
    ]
  ],
  [
    2929,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2928,
        0
      ],
      [
        2927,
        0
      ]
    ]
  ],
  [
    4822,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        2929,
        0
      ],
      [
        4821,
        0
      ]
    ]
  ],
  [
    4825,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4822,
        0
      ]
    ]
  ],
  [
    2974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4825,
        0
      ]
    ]
  ],
  [
    2975,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2974,
        0
      ]
    ]
  ],
  [
    2969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4569,
        0
      ]
    ]
  ],
  [
    2966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        248,
        0
      ]
    ]
  ],
  [
    2940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4566,
        0
      ]
    ]
  ],
  [
    4823,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4822,
        0
      ]
    ]
  ],
  [
    2931,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4823,
        0
      ]
    ]
  ],
  [
    2941,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2931,
        0
      ],
      [
        2940,
        0
      ]
    ]
  ],
  [
    2937,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4565,
        0
      ]
    ]
  ],
  [
    2934,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2931,
        0
      ]
    ]
  ],
  [
    2932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        2931,
        0
      ]
    ]
  ],
  [
    2933,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        2932,
        0
      ]
    ]
  ],
  [
    2935,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        2933,
        0
      ],
      [
        2934,
        0
      ]
    ]
  ],
  [
    2938,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2935,
        0
      ],
      [
        2937,
        0
      ]
    ]
  ],
  [
    2942,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        2941,
        0
      ],
      [
        2938,
        0
      ]
    ]
  ],
  [
    2943,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2942,
        0
      ]
    ]
  ],
  [
    2948,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4567,
        0
      ]
    ]
  ],
  [
    4824,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4822,
        0
      ]
    ]
  ],
  [
    2946,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4824,
        0
      ]
    ]
  ],
  [
    2949,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        2946,
        0
      ],
      [
        2948,
        0
      ]
    ]
  ],
  [
    2950,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2949,
        0
      ]
    ]
  ],
  [
    2957,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4568,
        0
      ]
    ]
  ],
  [
    2951,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2946,
        0
      ]
    ]
  ],
  [
    2954,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2951,
        0
      ]
    ]
  ],
  [
    2952,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        2951,
        0
      ]
    ]
  ],
  [
    2953,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        2952,
        0
      ]
    ]
  ],
  [
    2955,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        2953,
        0
      ],
      [
        2954,
        0
      ]
    ]
  ],
  [
    2958,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        2955,
        0
      ],
      [
        2957,
        0
      ]
    ]
  ],
  [
    2959,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        2950,
        0
      ],
      [
        2958,
        0
      ]
    ]
  ],
  [
    2964,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        2959,
        0
      ],
      [
        2943,
        0
      ]
    ]
  ],
  [
    2967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        2964,
        0
      ],
      [
        2966,
        0
      ]
    ]
  ],
  [
    2970,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        2967,
        0
      ],
      [
        2969,
        0
      ]
    ]
  ],
  [
    5024,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2970,
        0
      ]
    ]
  ],
  [
    5025,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2970,
        0
      ],
      [
        5024,
        0
      ]
    ]
  ],
  [
    5026,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5025,
        0
      ]
    ]
  ],
  [
    5027,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5025,
        0
      ],
      [
        5026,
        0
      ]
    ]
  ],
  [
    2980,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5027,
        0
      ],
      [
        2975,
        0
      ]
    ]
  ],
  [
    2982,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        2980,
        0
      ]
    ]
  ],
  [
    2983,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2982,
        0
      ]
    ]
  ],
  [
    2984,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        2983,
        0
      ],
      [
        1246,
        0
      ]
    ]
  ],
  [
    2985,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2914,
        0
      ],
      [
        2984,
        0
      ]
    ]
  ],
  [
    1244,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1060,
        0
      ]
    ]
  ],
  [
    1245,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1059,
        0
      ]
    ]
  ],
  [
    3002,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1058,
        0
      ]
    ]
  ],
  [
    4826,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3002,
        0
      ],
      [
        1245,
        0
      ]
    ]
  ],
  [
    2999,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1062,
        0
      ]
    ]
  ],
  [
    2993,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4570,
        0
      ]
    ]
  ],
  [
    2989,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2988,
        0
      ]
    ]
  ],
  [
    2986,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2985,
        0
      ],
      [
        2985,
        0
      ]
    ]
  ],
  [
    2987,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        2986,
        0
      ]
    ]
  ],
  [
    2990,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2987,
        0
      ],
      [
        2989,
        0
      ]
    ]
  ],
  [
    2991,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2990,
        0
      ]
    ]
  ],
  [
    2994,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2991,
        0
      ],
      [
        2993,
        0
      ]
    ]
  ],
  [
    2995,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2994,
        0
      ]
    ]
  ],
  [
    2996,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2995,
        0
      ]
    ]
  ],
  [
    2997,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2996,
        0
      ]
    ]
  ],
  [
    2998,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        2985,
        0
      ],
      [
        2997,
        0
      ]
    ]
  ],
  [
    3000,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        2999,
        0
      ],
      [
        2998,
        0
      ]
    ]
  ],
  [
    4827,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3000,
        0
      ],
      [
        4826,
        0
      ]
    ]
  ],
  [
    4829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4827,
        0
      ]
    ]
  ],
  [
    4828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4827,
        0
      ]
    ]
  ],
  [
    3004,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4828,
        0
      ]
    ]
  ],
  [
    3005,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4828,
        0
      ],
      [
        3004,
        0
      ]
    ]
  ],
  [
    3006,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3005,
        0
      ],
      [
        4829,
        0
      ]
    ]
  ],
  [
    3007,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3006,
        0
      ],
      [
        1244,
        0
      ]
    ]
  ],
  [
    3008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2985,
        0
      ],
      [
        3007,
        0
      ]
    ]
  ],
  [
    1242,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1066,
        0
      ]
    ]
  ],
  [
    3066,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1065,
        0
      ]
    ]
  ],
  [
    3038,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1063,
        0
      ]
    ]
  ],
  [
    1243,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1064,
        0
      ]
    ]
  ],
  [
    4830,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1243,
        0
      ],
      [
        3038,
        0
      ],
      [
        3066,
        0
      ]
    ]
  ],
  [
    3022,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1070,
        0
      ]
    ]
  ],
  [
    3016,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4571,
        0
      ]
    ]
  ],
  [
    3012,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3011,
        0
      ]
    ]
  ],
  [
    3009,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3008,
        0
      ],
      [
        3008,
        0
      ]
    ]
  ],
  [
    3010,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3009,
        0
      ]
    ]
  ],
  [
    3013,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3010,
        0
      ],
      [
        3012,
        0
      ]
    ]
  ],
  [
    3014,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3013,
        0
      ]
    ]
  ],
  [
    3017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3014,
        0
      ],
      [
        3016,
        0
      ]
    ]
  ],
  [
    3018,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3017,
        0
      ]
    ]
  ],
  [
    3019,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3018,
        0
      ]
    ]
  ],
  [
    3020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3019,
        0
      ]
    ]
  ],
  [
    3021,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3008,
        0
      ],
      [
        3020,
        0
      ]
    ]
  ],
  [
    3023,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3022,
        0
      ],
      [
        3021,
        0
      ]
    ]
  ],
  [
    4831,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3023,
        0
      ],
      [
        4830,
        0
      ]
    ]
  ],
  [
    4834,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4831,
        0
      ]
    ]
  ],
  [
    3068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4834,
        0
      ]
    ]
  ],
  [
    3069,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3068,
        0
      ]
    ]
  ],
  [
    3063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4576,
        0
      ]
    ]
  ],
  [
    3060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        261,
        0
      ]
    ]
  ],
  [
    3034,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4573,
        0
      ]
    ]
  ],
  [
    4832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4831,
        0
      ]
    ]
  ],
  [
    3025,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4832,
        0
      ]
    ]
  ],
  [
    3035,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3025,
        0
      ],
      [
        3034,
        0
      ]
    ]
  ],
  [
    3031,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4572,
        0
      ]
    ]
  ],
  [
    3028,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3025,
        0
      ]
    ]
  ],
  [
    3026,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3025,
        0
      ]
    ]
  ],
  [
    3027,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3026,
        0
      ]
    ]
  ],
  [
    3029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3027,
        0
      ],
      [
        3028,
        0
      ]
    ]
  ],
  [
    3032,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3029,
        0
      ],
      [
        3031,
        0
      ]
    ]
  ],
  [
    3036,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3035,
        0
      ],
      [
        3032,
        0
      ]
    ]
  ],
  [
    3037,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3036,
        0
      ]
    ]
  ],
  [
    3042,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4574,
        0
      ]
    ]
  ],
  [
    4833,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4831,
        0
      ]
    ]
  ],
  [
    3040,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4833,
        0
      ]
    ]
  ],
  [
    3043,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3040,
        0
      ],
      [
        3042,
        0
      ]
    ]
  ],
  [
    3044,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3043,
        0
      ]
    ]
  ],
  [
    3051,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4575,
        0
      ]
    ]
  ],
  [
    3045,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3040,
        0
      ]
    ]
  ],
  [
    3048,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3045,
        0
      ]
    ]
  ],
  [
    3046,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3045,
        0
      ]
    ]
  ],
  [
    3047,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3046,
        0
      ]
    ]
  ],
  [
    3049,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3047,
        0
      ],
      [
        3048,
        0
      ]
    ]
  ],
  [
    3052,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3049,
        0
      ],
      [
        3051,
        0
      ]
    ]
  ],
  [
    3053,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3044,
        0
      ],
      [
        3052,
        0
      ]
    ]
  ],
  [
    3058,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3053,
        0
      ],
      [
        3037,
        0
      ]
    ]
  ],
  [
    3061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3058,
        0
      ],
      [
        3060,
        0
      ]
    ]
  ],
  [
    3064,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3061,
        0
      ],
      [
        3063,
        0
      ]
    ]
  ],
  [
    5028,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3064,
        0
      ]
    ]
  ],
  [
    5029,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3064,
        0
      ],
      [
        5028,
        0
      ]
    ]
  ],
  [
    5030,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5029,
        0
      ]
    ]
  ],
  [
    5031,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5029,
        0
      ],
      [
        5030,
        0
      ]
    ]
  ],
  [
    3074,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5031,
        0
      ],
      [
        3069,
        0
      ]
    ]
  ],
  [
    3076,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3074,
        0
      ]
    ]
  ],
  [
    3077,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3076,
        0
      ]
    ]
  ],
  [
    3078,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3077,
        0
      ],
      [
        1242,
        0
      ]
    ]
  ],
  [
    3079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3008,
        0
      ],
      [
        3078,
        0
      ]
    ]
  ],
  [
    1240,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1069,
        0
      ]
    ]
  ],
  [
    1241,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1068,
        0
      ]
    ]
  ],
  [
    3096,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1067,
        0
      ]
    ]
  ],
  [
    4835,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3096,
        0
      ],
      [
        1241,
        0
      ]
    ]
  ],
  [
    3093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1071,
        0
      ]
    ]
  ],
  [
    3087,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4577,
        0
      ]
    ]
  ],
  [
    3083,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3082,
        0
      ]
    ]
  ],
  [
    3080,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3079,
        0
      ],
      [
        3079,
        0
      ]
    ]
  ],
  [
    3081,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3080,
        0
      ]
    ]
  ],
  [
    3084,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3081,
        0
      ],
      [
        3083,
        0
      ]
    ]
  ],
  [
    3085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3084,
        0
      ]
    ]
  ],
  [
    3088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3085,
        0
      ],
      [
        3087,
        0
      ]
    ]
  ],
  [
    3089,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3088,
        0
      ]
    ]
  ],
  [
    3090,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3089,
        0
      ]
    ]
  ],
  [
    3091,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3090,
        0
      ]
    ]
  ],
  [
    3092,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3079,
        0
      ],
      [
        3091,
        0
      ]
    ]
  ],
  [
    3094,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3093,
        0
      ],
      [
        3092,
        0
      ]
    ]
  ],
  [
    4836,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3094,
        0
      ],
      [
        4835,
        0
      ]
    ]
  ],
  [
    4838,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4836,
        0
      ]
    ]
  ],
  [
    4837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4836,
        0
      ]
    ]
  ],
  [
    3098,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4837,
        0
      ]
    ]
  ],
  [
    3099,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4837,
        0
      ],
      [
        3098,
        0
      ]
    ]
  ],
  [
    3100,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3099,
        0
      ],
      [
        4838,
        0
      ]
    ]
  ],
  [
    3101,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3100,
        0
      ],
      [
        1240,
        0
      ]
    ]
  ],
  [
    3102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3079,
        0
      ],
      [
        3101,
        0
      ]
    ]
  ],
  [
    1238,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1075,
        0
      ]
    ]
  ],
  [
    3160,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1074,
        0
      ]
    ]
  ],
  [
    3132,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1072,
        0
      ]
    ]
  ],
  [
    1239,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1073,
        0
      ]
    ]
  ],
  [
    4839,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1239,
        0
      ],
      [
        3132,
        0
      ],
      [
        3160,
        0
      ]
    ]
  ],
  [
    3116,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1079,
        0
      ]
    ]
  ],
  [
    3110,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4578,
        0
      ]
    ]
  ],
  [
    3106,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3105,
        0
      ]
    ]
  ],
  [
    3103,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3102,
        0
      ],
      [
        3102,
        0
      ]
    ]
  ],
  [
    3104,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3103,
        0
      ]
    ]
  ],
  [
    3107,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3104,
        0
      ],
      [
        3106,
        0
      ]
    ]
  ],
  [
    3108,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3107,
        0
      ]
    ]
  ],
  [
    3111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3108,
        0
      ],
      [
        3110,
        0
      ]
    ]
  ],
  [
    3112,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3111,
        0
      ]
    ]
  ],
  [
    3113,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3112,
        0
      ]
    ]
  ],
  [
    3114,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3113,
        0
      ]
    ]
  ],
  [
    3115,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3102,
        0
      ],
      [
        3114,
        0
      ]
    ]
  ],
  [
    3117,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3116,
        0
      ],
      [
        3115,
        0
      ]
    ]
  ],
  [
    4840,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3117,
        0
      ],
      [
        4839,
        0
      ]
    ]
  ],
  [
    4843,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4840,
        0
      ]
    ]
  ],
  [
    3162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4843,
        0
      ]
    ]
  ],
  [
    3163,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3162,
        0
      ]
    ]
  ],
  [
    3157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4583,
        0
      ]
    ]
  ],
  [
    3154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        274,
        0
      ]
    ]
  ],
  [
    3128,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4580,
        0
      ]
    ]
  ],
  [
    4841,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4840,
        0
      ]
    ]
  ],
  [
    3119,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4841,
        0
      ]
    ]
  ],
  [
    3129,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3119,
        0
      ],
      [
        3128,
        0
      ]
    ]
  ],
  [
    3125,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4579,
        0
      ]
    ]
  ],
  [
    3122,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3119,
        0
      ]
    ]
  ],
  [
    3120,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3119,
        0
      ]
    ]
  ],
  [
    3121,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3120,
        0
      ]
    ]
  ],
  [
    3123,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3121,
        0
      ],
      [
        3122,
        0
      ]
    ]
  ],
  [
    3126,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3123,
        0
      ],
      [
        3125,
        0
      ]
    ]
  ],
  [
    3130,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3129,
        0
      ],
      [
        3126,
        0
      ]
    ]
  ],
  [
    3131,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3130,
        0
      ]
    ]
  ],
  [
    3136,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4581,
        0
      ]
    ]
  ],
  [
    4842,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4840,
        0
      ]
    ]
  ],
  [
    3134,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4842,
        0
      ]
    ]
  ],
  [
    3137,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3134,
        0
      ],
      [
        3136,
        0
      ]
    ]
  ],
  [
    3138,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3137,
        0
      ]
    ]
  ],
  [
    3145,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4582,
        0
      ]
    ]
  ],
  [
    3139,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3134,
        0
      ]
    ]
  ],
  [
    3142,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3139,
        0
      ]
    ]
  ],
  [
    3140,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3139,
        0
      ]
    ]
  ],
  [
    3141,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3140,
        0
      ]
    ]
  ],
  [
    3143,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3141,
        0
      ],
      [
        3142,
        0
      ]
    ]
  ],
  [
    3146,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3143,
        0
      ],
      [
        3145,
        0
      ]
    ]
  ],
  [
    3147,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3138,
        0
      ],
      [
        3146,
        0
      ]
    ]
  ],
  [
    3152,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3147,
        0
      ],
      [
        3131,
        0
      ]
    ]
  ],
  [
    3155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3152,
        0
      ],
      [
        3154,
        0
      ]
    ]
  ],
  [
    3158,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3155,
        0
      ],
      [
        3157,
        0
      ]
    ]
  ],
  [
    5032,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3158,
        0
      ]
    ]
  ],
  [
    5033,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3158,
        0
      ],
      [
        5032,
        0
      ]
    ]
  ],
  [
    5034,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5033,
        0
      ]
    ]
  ],
  [
    5035,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5033,
        0
      ],
      [
        5034,
        0
      ]
    ]
  ],
  [
    3168,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5035,
        0
      ],
      [
        3163,
        0
      ]
    ]
  ],
  [
    3170,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3168,
        0
      ]
    ]
  ],
  [
    3171,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3170,
        0
      ]
    ]
  ],
  [
    3172,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3171,
        0
      ],
      [
        1238,
        0
      ]
    ]
  ],
  [
    3173,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3102,
        0
      ],
      [
        3172,
        0
      ]
    ]
  ],
  [
    1236,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1078,
        0
      ]
    ]
  ],
  [
    1237,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1077,
        0
      ]
    ]
  ],
  [
    3190,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1076,
        0
      ]
    ]
  ],
  [
    4844,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3190,
        0
      ],
      [
        1237,
        0
      ]
    ]
  ],
  [
    3187,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1080,
        0
      ]
    ]
  ],
  [
    3181,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4584,
        0
      ]
    ]
  ],
  [
    3177,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3176,
        0
      ]
    ]
  ],
  [
    3174,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3173,
        0
      ],
      [
        3173,
        0
      ]
    ]
  ],
  [
    3175,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3174,
        0
      ]
    ]
  ],
  [
    3178,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3175,
        0
      ],
      [
        3177,
        0
      ]
    ]
  ],
  [
    3179,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3178,
        0
      ]
    ]
  ],
  [
    3182,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3179,
        0
      ],
      [
        3181,
        0
      ]
    ]
  ],
  [
    3183,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3182,
        0
      ]
    ]
  ],
  [
    3184,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3183,
        0
      ]
    ]
  ],
  [
    3185,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3184,
        0
      ]
    ]
  ],
  [
    3186,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3173,
        0
      ],
      [
        3185,
        0
      ]
    ]
  ],
  [
    3188,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3187,
        0
      ],
      [
        3186,
        0
      ]
    ]
  ],
  [
    4845,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3188,
        0
      ],
      [
        4844,
        0
      ]
    ]
  ],
  [
    4847,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4845,
        0
      ]
    ]
  ],
  [
    4846,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4845,
        0
      ]
    ]
  ],
  [
    3192,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4846,
        0
      ]
    ]
  ],
  [
    3193,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4846,
        0
      ],
      [
        3192,
        0
      ]
    ]
  ],
  [
    3194,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3193,
        0
      ],
      [
        4847,
        0
      ]
    ]
  ],
  [
    3195,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3194,
        0
      ],
      [
        1236,
        0
      ]
    ]
  ],
  [
    3196,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3173,
        0
      ],
      [
        3195,
        0
      ]
    ]
  ],
  [
    1234,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1084,
        0
      ]
    ]
  ],
  [
    3254,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1083,
        0
      ]
    ]
  ],
  [
    3226,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1081,
        0
      ]
    ]
  ],
  [
    1235,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1082,
        0
      ]
    ]
  ],
  [
    4848,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1235,
        0
      ],
      [
        3226,
        0
      ],
      [
        3254,
        0
      ]
    ]
  ],
  [
    3210,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1088,
        0
      ]
    ]
  ],
  [
    3204,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4585,
        0
      ]
    ]
  ],
  [
    3200,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3199,
        0
      ]
    ]
  ],
  [
    3197,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3196,
        0
      ],
      [
        3196,
        0
      ]
    ]
  ],
  [
    3198,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3197,
        0
      ]
    ]
  ],
  [
    3201,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3198,
        0
      ],
      [
        3200,
        0
      ]
    ]
  ],
  [
    3202,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3201,
        0
      ]
    ]
  ],
  [
    3205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3202,
        0
      ],
      [
        3204,
        0
      ]
    ]
  ],
  [
    3206,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3205,
        0
      ]
    ]
  ],
  [
    3207,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3206,
        0
      ]
    ]
  ],
  [
    3208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3207,
        0
      ]
    ]
  ],
  [
    3209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3196,
        0
      ],
      [
        3208,
        0
      ]
    ]
  ],
  [
    3211,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3210,
        0
      ],
      [
        3209,
        0
      ]
    ]
  ],
  [
    4849,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3211,
        0
      ],
      [
        4848,
        0
      ]
    ]
  ],
  [
    4852,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4849,
        0
      ]
    ]
  ],
  [
    3256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4852,
        0
      ]
    ]
  ],
  [
    3257,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3256,
        0
      ]
    ]
  ],
  [
    3251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4590,
        0
      ]
    ]
  ],
  [
    3248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        287,
        0
      ]
    ]
  ],
  [
    3222,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4587,
        0
      ]
    ]
  ],
  [
    4850,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4849,
        0
      ]
    ]
  ],
  [
    3213,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4850,
        0
      ]
    ]
  ],
  [
    3223,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3213,
        0
      ],
      [
        3222,
        0
      ]
    ]
  ],
  [
    3219,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4586,
        0
      ]
    ]
  ],
  [
    3216,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3213,
        0
      ]
    ]
  ],
  [
    3214,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3213,
        0
      ]
    ]
  ],
  [
    3215,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3214,
        0
      ]
    ]
  ],
  [
    3217,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3215,
        0
      ],
      [
        3216,
        0
      ]
    ]
  ],
  [
    3220,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3217,
        0
      ],
      [
        3219,
        0
      ]
    ]
  ],
  [
    3224,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3223,
        0
      ],
      [
        3220,
        0
      ]
    ]
  ],
  [
    3225,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3224,
        0
      ]
    ]
  ],
  [
    3230,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4588,
        0
      ]
    ]
  ],
  [
    4851,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4849,
        0
      ]
    ]
  ],
  [
    3228,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4851,
        0
      ]
    ]
  ],
  [
    3231,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3228,
        0
      ],
      [
        3230,
        0
      ]
    ]
  ],
  [
    3232,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3231,
        0
      ]
    ]
  ],
  [
    3239,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4589,
        0
      ]
    ]
  ],
  [
    3233,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3228,
        0
      ]
    ]
  ],
  [
    3236,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3233,
        0
      ]
    ]
  ],
  [
    3234,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3233,
        0
      ]
    ]
  ],
  [
    3235,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3234,
        0
      ]
    ]
  ],
  [
    3237,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3235,
        0
      ],
      [
        3236,
        0
      ]
    ]
  ],
  [
    3240,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3237,
        0
      ],
      [
        3239,
        0
      ]
    ]
  ],
  [
    3241,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3232,
        0
      ],
      [
        3240,
        0
      ]
    ]
  ],
  [
    3246,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3241,
        0
      ],
      [
        3225,
        0
      ]
    ]
  ],
  [
    3249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3246,
        0
      ],
      [
        3248,
        0
      ]
    ]
  ],
  [
    3252,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3249,
        0
      ],
      [
        3251,
        0
      ]
    ]
  ],
  [
    5036,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3252,
        0
      ]
    ]
  ],
  [
    5037,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3252,
        0
      ],
      [
        5036,
        0
      ]
    ]
  ],
  [
    5038,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5037,
        0
      ]
    ]
  ],
  [
    5039,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5037,
        0
      ],
      [
        5038,
        0
      ]
    ]
  ],
  [
    3262,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5039,
        0
      ],
      [
        3257,
        0
      ]
    ]
  ],
  [
    3264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3262,
        0
      ]
    ]
  ],
  [
    3265,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3264,
        0
      ]
    ]
  ],
  [
    3266,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3265,
        0
      ],
      [
        1234,
        0
      ]
    ]
  ],
  [
    3267,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3196,
        0
      ],
      [
        3266,
        0
      ]
    ]
  ],
  [
    1232,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1087,
        0
      ]
    ]
  ],
  [
    1233,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1086,
        0
      ]
    ]
  ],
  [
    3284,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1085,
        0
      ]
    ]
  ],
  [
    4853,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3284,
        0
      ],
      [
        1233,
        0
      ]
    ]
  ],
  [
    3281,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1089,
        0
      ]
    ]
  ],
  [
    3275,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4591,
        0
      ]
    ]
  ],
  [
    3271,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3270,
        0
      ]
    ]
  ],
  [
    3268,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3267,
        0
      ],
      [
        3267,
        0
      ]
    ]
  ],
  [
    3269,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3268,
        0
      ]
    ]
  ],
  [
    3272,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3269,
        0
      ],
      [
        3271,
        0
      ]
    ]
  ],
  [
    3273,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3272,
        0
      ]
    ]
  ],
  [
    3276,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3273,
        0
      ],
      [
        3275,
        0
      ]
    ]
  ],
  [
    3277,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3276,
        0
      ]
    ]
  ],
  [
    3278,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3277,
        0
      ]
    ]
  ],
  [
    3279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3278,
        0
      ]
    ]
  ],
  [
    3280,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3267,
        0
      ],
      [
        3279,
        0
      ]
    ]
  ],
  [
    3282,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3281,
        0
      ],
      [
        3280,
        0
      ]
    ]
  ],
  [
    4854,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3282,
        0
      ],
      [
        4853,
        0
      ]
    ]
  ],
  [
    4856,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4854,
        0
      ]
    ]
  ],
  [
    4855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4854,
        0
      ]
    ]
  ],
  [
    3286,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4855,
        0
      ]
    ]
  ],
  [
    3287,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4855,
        0
      ],
      [
        3286,
        0
      ]
    ]
  ],
  [
    3288,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3287,
        0
      ],
      [
        4856,
        0
      ]
    ]
  ],
  [
    3289,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3288,
        0
      ],
      [
        1232,
        0
      ]
    ]
  ],
  [
    3290,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3267,
        0
      ],
      [
        3289,
        0
      ]
    ]
  ],
  [
    1230,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1093,
        0
      ]
    ]
  ],
  [
    3348,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1092,
        0
      ]
    ]
  ],
  [
    3320,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1090,
        0
      ]
    ]
  ],
  [
    1231,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1091,
        0
      ]
    ]
  ],
  [
    4857,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1231,
        0
      ],
      [
        3320,
        0
      ],
      [
        3348,
        0
      ]
    ]
  ],
  [
    3304,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1097,
        0
      ]
    ]
  ],
  [
    3298,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4592,
        0
      ]
    ]
  ],
  [
    3294,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3293,
        0
      ]
    ]
  ],
  [
    3291,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3290,
        0
      ],
      [
        3290,
        0
      ]
    ]
  ],
  [
    3292,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3291,
        0
      ]
    ]
  ],
  [
    3295,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3292,
        0
      ],
      [
        3294,
        0
      ]
    ]
  ],
  [
    3296,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3295,
        0
      ]
    ]
  ],
  [
    3299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3296,
        0
      ],
      [
        3298,
        0
      ]
    ]
  ],
  [
    3300,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3299,
        0
      ]
    ]
  ],
  [
    3301,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3300,
        0
      ]
    ]
  ],
  [
    3302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3301,
        0
      ]
    ]
  ],
  [
    3303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3290,
        0
      ],
      [
        3302,
        0
      ]
    ]
  ],
  [
    3305,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3304,
        0
      ],
      [
        3303,
        0
      ]
    ]
  ],
  [
    4858,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3305,
        0
      ],
      [
        4857,
        0
      ]
    ]
  ],
  [
    4861,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4858,
        0
      ]
    ]
  ],
  [
    3350,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4861,
        0
      ]
    ]
  ],
  [
    3351,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3350,
        0
      ]
    ]
  ],
  [
    3345,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4597,
        0
      ]
    ]
  ],
  [
    3342,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        300,
        0
      ]
    ]
  ],
  [
    3316,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4594,
        0
      ]
    ]
  ],
  [
    4859,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4858,
        0
      ]
    ]
  ],
  [
    3307,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4859,
        0
      ]
    ]
  ],
  [
    3317,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3307,
        0
      ],
      [
        3316,
        0
      ]
    ]
  ],
  [
    3313,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4593,
        0
      ]
    ]
  ],
  [
    3310,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3307,
        0
      ]
    ]
  ],
  [
    3308,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3307,
        0
      ]
    ]
  ],
  [
    3309,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3308,
        0
      ]
    ]
  ],
  [
    3311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3309,
        0
      ],
      [
        3310,
        0
      ]
    ]
  ],
  [
    3314,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3311,
        0
      ],
      [
        3313,
        0
      ]
    ]
  ],
  [
    3318,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3317,
        0
      ],
      [
        3314,
        0
      ]
    ]
  ],
  [
    3319,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3318,
        0
      ]
    ]
  ],
  [
    3324,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4595,
        0
      ]
    ]
  ],
  [
    4860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4858,
        0
      ]
    ]
  ],
  [
    3322,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4860,
        0
      ]
    ]
  ],
  [
    3325,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3322,
        0
      ],
      [
        3324,
        0
      ]
    ]
  ],
  [
    3326,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3325,
        0
      ]
    ]
  ],
  [
    3333,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4596,
        0
      ]
    ]
  ],
  [
    3327,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3322,
        0
      ]
    ]
  ],
  [
    3330,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3327,
        0
      ]
    ]
  ],
  [
    3328,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3327,
        0
      ]
    ]
  ],
  [
    3329,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3328,
        0
      ]
    ]
  ],
  [
    3331,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3329,
        0
      ],
      [
        3330,
        0
      ]
    ]
  ],
  [
    3334,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3331,
        0
      ],
      [
        3333,
        0
      ]
    ]
  ],
  [
    3335,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3326,
        0
      ],
      [
        3334,
        0
      ]
    ]
  ],
  [
    3340,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3335,
        0
      ],
      [
        3319,
        0
      ]
    ]
  ],
  [
    3343,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3340,
        0
      ],
      [
        3342,
        0
      ]
    ]
  ],
  [
    3346,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3343,
        0
      ],
      [
        3345,
        0
      ]
    ]
  ],
  [
    5040,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3346,
        0
      ]
    ]
  ],
  [
    5041,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3346,
        0
      ],
      [
        5040,
        0
      ]
    ]
  ],
  [
    5042,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5041,
        0
      ]
    ]
  ],
  [
    5043,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5041,
        0
      ],
      [
        5042,
        0
      ]
    ]
  ],
  [
    3356,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5043,
        0
      ],
      [
        3351,
        0
      ]
    ]
  ],
  [
    3358,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3356,
        0
      ]
    ]
  ],
  [
    3359,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3358,
        0
      ]
    ]
  ],
  [
    3360,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3359,
        0
      ],
      [
        1230,
        0
      ]
    ]
  ],
  [
    3361,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3290,
        0
      ],
      [
        3360,
        0
      ]
    ]
  ],
  [
    1228,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1096,
        0
      ]
    ]
  ],
  [
    1229,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1095,
        0
      ]
    ]
  ],
  [
    3378,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1094,
        0
      ]
    ]
  ],
  [
    4862,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3378,
        0
      ],
      [
        1229,
        0
      ]
    ]
  ],
  [
    3375,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1098,
        0
      ]
    ]
  ],
  [
    3369,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4598,
        0
      ]
    ]
  ],
  [
    3365,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3364,
        0
      ]
    ]
  ],
  [
    3362,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3361,
        0
      ],
      [
        3361,
        0
      ]
    ]
  ],
  [
    3363,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3362,
        0
      ]
    ]
  ],
  [
    3366,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3363,
        0
      ],
      [
        3365,
        0
      ]
    ]
  ],
  [
    3367,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3366,
        0
      ]
    ]
  ],
  [
    3370,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3367,
        0
      ],
      [
        3369,
        0
      ]
    ]
  ],
  [
    3371,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3370,
        0
      ]
    ]
  ],
  [
    3372,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3371,
        0
      ]
    ]
  ],
  [
    3373,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3372,
        0
      ]
    ]
  ],
  [
    3374,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3361,
        0
      ],
      [
        3373,
        0
      ]
    ]
  ],
  [
    3376,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3375,
        0
      ],
      [
        3374,
        0
      ]
    ]
  ],
  [
    4863,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3376,
        0
      ],
      [
        4862,
        0
      ]
    ]
  ],
  [
    4865,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4863,
        0
      ]
    ]
  ],
  [
    4864,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4863,
        0
      ]
    ]
  ],
  [
    3380,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4864,
        0
      ]
    ]
  ],
  [
    3381,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4864,
        0
      ],
      [
        3380,
        0
      ]
    ]
  ],
  [
    3382,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3381,
        0
      ],
      [
        4865,
        0
      ]
    ]
  ],
  [
    3383,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3382,
        0
      ],
      [
        1228,
        0
      ]
    ]
  ],
  [
    3384,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3361,
        0
      ],
      [
        3383,
        0
      ]
    ]
  ],
  [
    1226,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1102,
        0
      ]
    ]
  ],
  [
    3442,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1101,
        0
      ]
    ]
  ],
  [
    3414,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1099,
        0
      ]
    ]
  ],
  [
    1227,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1100,
        0
      ]
    ]
  ],
  [
    4866,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1227,
        0
      ],
      [
        3414,
        0
      ],
      [
        3442,
        0
      ]
    ]
  ],
  [
    3398,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1106,
        0
      ]
    ]
  ],
  [
    3392,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4599,
        0
      ]
    ]
  ],
  [
    3388,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3387,
        0
      ]
    ]
  ],
  [
    3385,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3384,
        0
      ],
      [
        3384,
        0
      ]
    ]
  ],
  [
    3386,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3385,
        0
      ]
    ]
  ],
  [
    3389,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3386,
        0
      ],
      [
        3388,
        0
      ]
    ]
  ],
  [
    3390,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3389,
        0
      ]
    ]
  ],
  [
    3393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3390,
        0
      ],
      [
        3392,
        0
      ]
    ]
  ],
  [
    3394,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3393,
        0
      ]
    ]
  ],
  [
    3395,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3394,
        0
      ]
    ]
  ],
  [
    3396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3395,
        0
      ]
    ]
  ],
  [
    3397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3384,
        0
      ],
      [
        3396,
        0
      ]
    ]
  ],
  [
    3399,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3398,
        0
      ],
      [
        3397,
        0
      ]
    ]
  ],
  [
    4867,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3399,
        0
      ],
      [
        4866,
        0
      ]
    ]
  ],
  [
    4870,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4867,
        0
      ]
    ]
  ],
  [
    3444,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4870,
        0
      ]
    ]
  ],
  [
    3445,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3444,
        0
      ]
    ]
  ],
  [
    3439,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4604,
        0
      ]
    ]
  ],
  [
    3436,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        313,
        0
      ]
    ]
  ],
  [
    3410,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4601,
        0
      ]
    ]
  ],
  [
    4868,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4867,
        0
      ]
    ]
  ],
  [
    3401,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4868,
        0
      ]
    ]
  ],
  [
    3411,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3401,
        0
      ],
      [
        3410,
        0
      ]
    ]
  ],
  [
    3407,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4600,
        0
      ]
    ]
  ],
  [
    3404,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3401,
        0
      ]
    ]
  ],
  [
    3402,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3401,
        0
      ]
    ]
  ],
  [
    3403,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3402,
        0
      ]
    ]
  ],
  [
    3405,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3403,
        0
      ],
      [
        3404,
        0
      ]
    ]
  ],
  [
    3408,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3405,
        0
      ],
      [
        3407,
        0
      ]
    ]
  ],
  [
    3412,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3411,
        0
      ],
      [
        3408,
        0
      ]
    ]
  ],
  [
    3413,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3412,
        0
      ]
    ]
  ],
  [
    3418,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4602,
        0
      ]
    ]
  ],
  [
    4869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4867,
        0
      ]
    ]
  ],
  [
    3416,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4869,
        0
      ]
    ]
  ],
  [
    3419,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3416,
        0
      ],
      [
        3418,
        0
      ]
    ]
  ],
  [
    3420,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3419,
        0
      ]
    ]
  ],
  [
    3427,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4603,
        0
      ]
    ]
  ],
  [
    3421,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3416,
        0
      ]
    ]
  ],
  [
    3424,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3421,
        0
      ]
    ]
  ],
  [
    3422,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3421,
        0
      ]
    ]
  ],
  [
    3423,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3422,
        0
      ]
    ]
  ],
  [
    3425,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3423,
        0
      ],
      [
        3424,
        0
      ]
    ]
  ],
  [
    3428,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3425,
        0
      ],
      [
        3427,
        0
      ]
    ]
  ],
  [
    3429,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3420,
        0
      ],
      [
        3428,
        0
      ]
    ]
  ],
  [
    3434,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3429,
        0
      ],
      [
        3413,
        0
      ]
    ]
  ],
  [
    3437,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3434,
        0
      ],
      [
        3436,
        0
      ]
    ]
  ],
  [
    3440,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3437,
        0
      ],
      [
        3439,
        0
      ]
    ]
  ],
  [
    5044,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3440,
        0
      ]
    ]
  ],
  [
    5045,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3440,
        0
      ],
      [
        5044,
        0
      ]
    ]
  ],
  [
    5046,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5045,
        0
      ]
    ]
  ],
  [
    5047,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5045,
        0
      ],
      [
        5046,
        0
      ]
    ]
  ],
  [
    3450,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5047,
        0
      ],
      [
        3445,
        0
      ]
    ]
  ],
  [
    3452,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3450,
        0
      ]
    ]
  ],
  [
    3453,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3452,
        0
      ]
    ]
  ],
  [
    3454,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3453,
        0
      ],
      [
        1226,
        0
      ]
    ]
  ],
  [
    3455,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3384,
        0
      ],
      [
        3454,
        0
      ]
    ]
  ],
  [
    1224,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1105,
        0
      ]
    ]
  ],
  [
    1225,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1104,
        0
      ]
    ]
  ],
  [
    3472,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1103,
        0
      ]
    ]
  ],
  [
    4871,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3472,
        0
      ],
      [
        1225,
        0
      ]
    ]
  ],
  [
    3469,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1107,
        0
      ]
    ]
  ],
  [
    3463,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4605,
        0
      ]
    ]
  ],
  [
    3459,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3458,
        0
      ]
    ]
  ],
  [
    3456,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3455,
        0
      ],
      [
        3455,
        0
      ]
    ]
  ],
  [
    3457,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3456,
        0
      ]
    ]
  ],
  [
    3460,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3457,
        0
      ],
      [
        3459,
        0
      ]
    ]
  ],
  [
    3461,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3460,
        0
      ]
    ]
  ],
  [
    3464,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3461,
        0
      ],
      [
        3463,
        0
      ]
    ]
  ],
  [
    3465,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3464,
        0
      ]
    ]
  ],
  [
    3466,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3465,
        0
      ]
    ]
  ],
  [
    3467,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3466,
        0
      ]
    ]
  ],
  [
    3468,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3455,
        0
      ],
      [
        3467,
        0
      ]
    ]
  ],
  [
    3470,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3469,
        0
      ],
      [
        3468,
        0
      ]
    ]
  ],
  [
    4872,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3470,
        0
      ],
      [
        4871,
        0
      ]
    ]
  ],
  [
    4874,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4872,
        0
      ]
    ]
  ],
  [
    4873,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4872,
        0
      ]
    ]
  ],
  [
    3474,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4873,
        0
      ]
    ]
  ],
  [
    3475,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4873,
        0
      ],
      [
        3474,
        0
      ]
    ]
  ],
  [
    3476,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3475,
        0
      ],
      [
        4874,
        0
      ]
    ]
  ],
  [
    3477,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3476,
        0
      ],
      [
        1224,
        0
      ]
    ]
  ],
  [
    3478,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3455,
        0
      ],
      [
        3477,
        0
      ]
    ]
  ],
  [
    1222,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1111,
        0
      ]
    ]
  ],
  [
    3536,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1110,
        0
      ]
    ]
  ],
  [
    3508,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1108,
        0
      ]
    ]
  ],
  [
    1223,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1109,
        0
      ]
    ]
  ],
  [
    4875,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1223,
        0
      ],
      [
        3508,
        0
      ],
      [
        3536,
        0
      ]
    ]
  ],
  [
    3492,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1115,
        0
      ]
    ]
  ],
  [
    3486,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4606,
        0
      ]
    ]
  ],
  [
    3482,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3481,
        0
      ]
    ]
  ],
  [
    3479,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3478,
        0
      ],
      [
        3478,
        0
      ]
    ]
  ],
  [
    3480,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3479,
        0
      ]
    ]
  ],
  [
    3483,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3480,
        0
      ],
      [
        3482,
        0
      ]
    ]
  ],
  [
    3484,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3483,
        0
      ]
    ]
  ],
  [
    3487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3484,
        0
      ],
      [
        3486,
        0
      ]
    ]
  ],
  [
    3488,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3487,
        0
      ]
    ]
  ],
  [
    3489,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3488,
        0
      ]
    ]
  ],
  [
    3490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3489,
        0
      ]
    ]
  ],
  [
    3491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3478,
        0
      ],
      [
        3490,
        0
      ]
    ]
  ],
  [
    3493,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3492,
        0
      ],
      [
        3491,
        0
      ]
    ]
  ],
  [
    4876,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3493,
        0
      ],
      [
        4875,
        0
      ]
    ]
  ],
  [
    4879,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4876,
        0
      ]
    ]
  ],
  [
    3538,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4879,
        0
      ]
    ]
  ],
  [
    3539,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3538,
        0
      ]
    ]
  ],
  [
    3533,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4611,
        0
      ]
    ]
  ],
  [
    3530,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        326,
        0
      ]
    ]
  ],
  [
    3504,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4608,
        0
      ]
    ]
  ],
  [
    4877,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4876,
        0
      ]
    ]
  ],
  [
    3495,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4877,
        0
      ]
    ]
  ],
  [
    3505,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3495,
        0
      ],
      [
        3504,
        0
      ]
    ]
  ],
  [
    3501,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4607,
        0
      ]
    ]
  ],
  [
    3498,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3495,
        0
      ]
    ]
  ],
  [
    3496,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3495,
        0
      ]
    ]
  ],
  [
    3497,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3496,
        0
      ]
    ]
  ],
  [
    3499,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3497,
        0
      ],
      [
        3498,
        0
      ]
    ]
  ],
  [
    3502,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3499,
        0
      ],
      [
        3501,
        0
      ]
    ]
  ],
  [
    3506,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3505,
        0
      ],
      [
        3502,
        0
      ]
    ]
  ],
  [
    3507,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3506,
        0
      ]
    ]
  ],
  [
    3512,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4609,
        0
      ]
    ]
  ],
  [
    4878,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4876,
        0
      ]
    ]
  ],
  [
    3510,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4878,
        0
      ]
    ]
  ],
  [
    3513,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3510,
        0
      ],
      [
        3512,
        0
      ]
    ]
  ],
  [
    3514,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3513,
        0
      ]
    ]
  ],
  [
    3521,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4610,
        0
      ]
    ]
  ],
  [
    3515,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3510,
        0
      ]
    ]
  ],
  [
    3518,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3515,
        0
      ]
    ]
  ],
  [
    3516,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3515,
        0
      ]
    ]
  ],
  [
    3517,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3516,
        0
      ]
    ]
  ],
  [
    3519,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3517,
        0
      ],
      [
        3518,
        0
      ]
    ]
  ],
  [
    3522,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3519,
        0
      ],
      [
        3521,
        0
      ]
    ]
  ],
  [
    3523,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3514,
        0
      ],
      [
        3522,
        0
      ]
    ]
  ],
  [
    3528,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3523,
        0
      ],
      [
        3507,
        0
      ]
    ]
  ],
  [
    3531,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3528,
        0
      ],
      [
        3530,
        0
      ]
    ]
  ],
  [
    3534,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3531,
        0
      ],
      [
        3533,
        0
      ]
    ]
  ],
  [
    5048,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3534,
        0
      ]
    ]
  ],
  [
    5049,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3534,
        0
      ],
      [
        5048,
        0
      ]
    ]
  ],
  [
    5050,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5049,
        0
      ]
    ]
  ],
  [
    5051,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5049,
        0
      ],
      [
        5050,
        0
      ]
    ]
  ],
  [
    3544,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5051,
        0
      ],
      [
        3539,
        0
      ]
    ]
  ],
  [
    3546,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3544,
        0
      ]
    ]
  ],
  [
    3547,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3546,
        0
      ]
    ]
  ],
  [
    3548,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3547,
        0
      ],
      [
        1222,
        0
      ]
    ]
  ],
  [
    3549,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3478,
        0
      ],
      [
        3548,
        0
      ]
    ]
  ],
  [
    1220,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1114,
        0
      ]
    ]
  ],
  [
    1221,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1113,
        0
      ]
    ]
  ],
  [
    3566,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1112,
        0
      ]
    ]
  ],
  [
    4880,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3566,
        0
      ],
      [
        1221,
        0
      ]
    ]
  ],
  [
    3563,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1116,
        0
      ]
    ]
  ],
  [
    3557,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4612,
        0
      ]
    ]
  ],
  [
    3553,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3552,
        0
      ]
    ]
  ],
  [
    3550,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3549,
        0
      ],
      [
        3549,
        0
      ]
    ]
  ],
  [
    3551,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3550,
        0
      ]
    ]
  ],
  [
    3554,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3551,
        0
      ],
      [
        3553,
        0
      ]
    ]
  ],
  [
    3555,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3554,
        0
      ]
    ]
  ],
  [
    3558,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3555,
        0
      ],
      [
        3557,
        0
      ]
    ]
  ],
  [
    3559,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3558,
        0
      ]
    ]
  ],
  [
    3560,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3559,
        0
      ]
    ]
  ],
  [
    3561,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3560,
        0
      ]
    ]
  ],
  [
    3562,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3549,
        0
      ],
      [
        3561,
        0
      ]
    ]
  ],
  [
    3564,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3563,
        0
      ],
      [
        3562,
        0
      ]
    ]
  ],
  [
    4881,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3564,
        0
      ],
      [
        4880,
        0
      ]
    ]
  ],
  [
    4883,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4881,
        0
      ]
    ]
  ],
  [
    4882,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4881,
        0
      ]
    ]
  ],
  [
    3568,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4882,
        0
      ]
    ]
  ],
  [
    3569,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4882,
        0
      ],
      [
        3568,
        0
      ]
    ]
  ],
  [
    3570,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3569,
        0
      ],
      [
        4883,
        0
      ]
    ]
  ],
  [
    3571,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3570,
        0
      ],
      [
        1220,
        0
      ]
    ]
  ],
  [
    3572,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3549,
        0
      ],
      [
        3571,
        0
      ]
    ]
  ],
  [
    1218,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1120,
        0
      ]
    ]
  ],
  [
    3630,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1119,
        0
      ]
    ]
  ],
  [
    3602,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1117,
        0
      ]
    ]
  ],
  [
    1219,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1118,
        0
      ]
    ]
  ],
  [
    4884,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1219,
        0
      ],
      [
        3602,
        0
      ],
      [
        3630,
        0
      ]
    ]
  ],
  [
    3586,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1124,
        0
      ]
    ]
  ],
  [
    3580,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4613,
        0
      ]
    ]
  ],
  [
    3576,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3575,
        0
      ]
    ]
  ],
  [
    3573,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3572,
        0
      ],
      [
        3572,
        0
      ]
    ]
  ],
  [
    3574,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3573,
        0
      ]
    ]
  ],
  [
    3577,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3574,
        0
      ],
      [
        3576,
        0
      ]
    ]
  ],
  [
    3578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3577,
        0
      ]
    ]
  ],
  [
    3581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3578,
        0
      ],
      [
        3580,
        0
      ]
    ]
  ],
  [
    3582,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3581,
        0
      ]
    ]
  ],
  [
    3583,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3582,
        0
      ]
    ]
  ],
  [
    3584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3583,
        0
      ]
    ]
  ],
  [
    3585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3572,
        0
      ],
      [
        3584,
        0
      ]
    ]
  ],
  [
    3587,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3586,
        0
      ],
      [
        3585,
        0
      ]
    ]
  ],
  [
    4885,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3587,
        0
      ],
      [
        4884,
        0
      ]
    ]
  ],
  [
    4888,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4885,
        0
      ]
    ]
  ],
  [
    3632,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4888,
        0
      ]
    ]
  ],
  [
    3633,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3632,
        0
      ]
    ]
  ],
  [
    3627,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4618,
        0
      ]
    ]
  ],
  [
    3624,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        339,
        0
      ]
    ]
  ],
  [
    3598,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4615,
        0
      ]
    ]
  ],
  [
    4886,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4885,
        0
      ]
    ]
  ],
  [
    3589,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4886,
        0
      ]
    ]
  ],
  [
    3599,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3589,
        0
      ],
      [
        3598,
        0
      ]
    ]
  ],
  [
    3595,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4614,
        0
      ]
    ]
  ],
  [
    3592,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3589,
        0
      ]
    ]
  ],
  [
    3590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3589,
        0
      ]
    ]
  ],
  [
    3591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3590,
        0
      ]
    ]
  ],
  [
    3593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3591,
        0
      ],
      [
        3592,
        0
      ]
    ]
  ],
  [
    3596,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3593,
        0
      ],
      [
        3595,
        0
      ]
    ]
  ],
  [
    3600,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3599,
        0
      ],
      [
        3596,
        0
      ]
    ]
  ],
  [
    3601,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3600,
        0
      ]
    ]
  ],
  [
    3606,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4616,
        0
      ]
    ]
  ],
  [
    4887,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4885,
        0
      ]
    ]
  ],
  [
    3604,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4887,
        0
      ]
    ]
  ],
  [
    3607,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3604,
        0
      ],
      [
        3606,
        0
      ]
    ]
  ],
  [
    3608,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3607,
        0
      ]
    ]
  ],
  [
    3615,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4617,
        0
      ]
    ]
  ],
  [
    3609,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3604,
        0
      ]
    ]
  ],
  [
    3612,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3609,
        0
      ]
    ]
  ],
  [
    3610,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3609,
        0
      ]
    ]
  ],
  [
    3611,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3610,
        0
      ]
    ]
  ],
  [
    3613,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3611,
        0
      ],
      [
        3612,
        0
      ]
    ]
  ],
  [
    3616,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3613,
        0
      ],
      [
        3615,
        0
      ]
    ]
  ],
  [
    3617,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3608,
        0
      ],
      [
        3616,
        0
      ]
    ]
  ],
  [
    3622,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3617,
        0
      ],
      [
        3601,
        0
      ]
    ]
  ],
  [
    3625,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3622,
        0
      ],
      [
        3624,
        0
      ]
    ]
  ],
  [
    3628,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3625,
        0
      ],
      [
        3627,
        0
      ]
    ]
  ],
  [
    5052,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3628,
        0
      ]
    ]
  ],
  [
    5053,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3628,
        0
      ],
      [
        5052,
        0
      ]
    ]
  ],
  [
    5054,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5053,
        0
      ]
    ]
  ],
  [
    5055,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5053,
        0
      ],
      [
        5054,
        0
      ]
    ]
  ],
  [
    3638,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5055,
        0
      ],
      [
        3633,
        0
      ]
    ]
  ],
  [
    3640,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3638,
        0
      ]
    ]
  ],
  [
    3641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3640,
        0
      ]
    ]
  ],
  [
    3642,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3641,
        0
      ],
      [
        1218,
        0
      ]
    ]
  ],
  [
    3643,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3572,
        0
      ],
      [
        3642,
        0
      ]
    ]
  ],
  [
    1216,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1123,
        0
      ]
    ]
  ],
  [
    1217,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1122,
        0
      ]
    ]
  ],
  [
    3660,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1121,
        0
      ]
    ]
  ],
  [
    4889,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3660,
        0
      ],
      [
        1217,
        0
      ]
    ]
  ],
  [
    3657,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1125,
        0
      ]
    ]
  ],
  [
    3651,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4619,
        0
      ]
    ]
  ],
  [
    3647,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3646,
        0
      ]
    ]
  ],
  [
    3644,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3643,
        0
      ],
      [
        3643,
        0
      ]
    ]
  ],
  [
    3645,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3644,
        0
      ]
    ]
  ],
  [
    3648,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3645,
        0
      ],
      [
        3647,
        0
      ]
    ]
  ],
  [
    3649,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3648,
        0
      ]
    ]
  ],
  [
    3652,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3649,
        0
      ],
      [
        3651,
        0
      ]
    ]
  ],
  [
    3653,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3652,
        0
      ]
    ]
  ],
  [
    3654,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3653,
        0
      ]
    ]
  ],
  [
    3655,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3654,
        0
      ]
    ]
  ],
  [
    3656,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3643,
        0
      ],
      [
        3655,
        0
      ]
    ]
  ],
  [
    3658,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3657,
        0
      ],
      [
        3656,
        0
      ]
    ]
  ],
  [
    4890,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3658,
        0
      ],
      [
        4889,
        0
      ]
    ]
  ],
  [
    4892,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4890,
        0
      ]
    ]
  ],
  [
    4891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4890,
        0
      ]
    ]
  ],
  [
    3662,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4891,
        0
      ]
    ]
  ],
  [
    3663,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4891,
        0
      ],
      [
        3662,
        0
      ]
    ]
  ],
  [
    3664,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3663,
        0
      ],
      [
        4892,
        0
      ]
    ]
  ],
  [
    3665,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3664,
        0
      ],
      [
        1216,
        0
      ]
    ]
  ],
  [
    3666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3643,
        0
      ],
      [
        3665,
        0
      ]
    ]
  ],
  [
    1214,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1129,
        0
      ]
    ]
  ],
  [
    3724,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1128,
        0
      ]
    ]
  ],
  [
    3696,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1126,
        0
      ]
    ]
  ],
  [
    1215,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1127,
        0
      ]
    ]
  ],
  [
    4893,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1215,
        0
      ],
      [
        3696,
        0
      ],
      [
        3724,
        0
      ]
    ]
  ],
  [
    3680,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1133,
        0
      ]
    ]
  ],
  [
    3674,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4620,
        0
      ]
    ]
  ],
  [
    3670,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3669,
        0
      ]
    ]
  ],
  [
    3667,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3666,
        0
      ],
      [
        3666,
        0
      ]
    ]
  ],
  [
    3668,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3667,
        0
      ]
    ]
  ],
  [
    3671,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3668,
        0
      ],
      [
        3670,
        0
      ]
    ]
  ],
  [
    3672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3671,
        0
      ]
    ]
  ],
  [
    3675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3672,
        0
      ],
      [
        3674,
        0
      ]
    ]
  ],
  [
    3676,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3675,
        0
      ]
    ]
  ],
  [
    3677,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3676,
        0
      ]
    ]
  ],
  [
    3678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3677,
        0
      ]
    ]
  ],
  [
    3679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3666,
        0
      ],
      [
        3678,
        0
      ]
    ]
  ],
  [
    3681,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3680,
        0
      ],
      [
        3679,
        0
      ]
    ]
  ],
  [
    4894,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3681,
        0
      ],
      [
        4893,
        0
      ]
    ]
  ],
  [
    4897,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4894,
        0
      ]
    ]
  ],
  [
    3726,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4897,
        0
      ]
    ]
  ],
  [
    3727,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3726,
        0
      ]
    ]
  ],
  [
    3721,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4625,
        0
      ]
    ]
  ],
  [
    3718,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        352,
        0
      ]
    ]
  ],
  [
    3692,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4622,
        0
      ]
    ]
  ],
  [
    4895,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4894,
        0
      ]
    ]
  ],
  [
    3683,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4895,
        0
      ]
    ]
  ],
  [
    3693,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3683,
        0
      ],
      [
        3692,
        0
      ]
    ]
  ],
  [
    3689,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4621,
        0
      ]
    ]
  ],
  [
    3686,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3683,
        0
      ]
    ]
  ],
  [
    3684,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3683,
        0
      ]
    ]
  ],
  [
    3685,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3684,
        0
      ]
    ]
  ],
  [
    3687,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3685,
        0
      ],
      [
        3686,
        0
      ]
    ]
  ],
  [
    3690,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3687,
        0
      ],
      [
        3689,
        0
      ]
    ]
  ],
  [
    3694,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3693,
        0
      ],
      [
        3690,
        0
      ]
    ]
  ],
  [
    3695,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3694,
        0
      ]
    ]
  ],
  [
    3700,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4623,
        0
      ]
    ]
  ],
  [
    4896,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4894,
        0
      ]
    ]
  ],
  [
    3698,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4896,
        0
      ]
    ]
  ],
  [
    3701,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3698,
        0
      ],
      [
        3700,
        0
      ]
    ]
  ],
  [
    3702,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3701,
        0
      ]
    ]
  ],
  [
    3709,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4624,
        0
      ]
    ]
  ],
  [
    3703,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3698,
        0
      ]
    ]
  ],
  [
    3706,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3703,
        0
      ]
    ]
  ],
  [
    3704,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3703,
        0
      ]
    ]
  ],
  [
    3705,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3704,
        0
      ]
    ]
  ],
  [
    3707,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3705,
        0
      ],
      [
        3706,
        0
      ]
    ]
  ],
  [
    3710,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3707,
        0
      ],
      [
        3709,
        0
      ]
    ]
  ],
  [
    3711,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3702,
        0
      ],
      [
        3710,
        0
      ]
    ]
  ],
  [
    3716,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3711,
        0
      ],
      [
        3695,
        0
      ]
    ]
  ],
  [
    3719,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3716,
        0
      ],
      [
        3718,
        0
      ]
    ]
  ],
  [
    3722,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3719,
        0
      ],
      [
        3721,
        0
      ]
    ]
  ],
  [
    5056,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3722,
        0
      ]
    ]
  ],
  [
    5057,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3722,
        0
      ],
      [
        5056,
        0
      ]
    ]
  ],
  [
    5058,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5057,
        0
      ]
    ]
  ],
  [
    5059,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5057,
        0
      ],
      [
        5058,
        0
      ]
    ]
  ],
  [
    3732,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5059,
        0
      ],
      [
        3727,
        0
      ]
    ]
  ],
  [
    3734,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3732,
        0
      ]
    ]
  ],
  [
    3735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3734,
        0
      ]
    ]
  ],
  [
    3736,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3735,
        0
      ],
      [
        1214,
        0
      ]
    ]
  ],
  [
    3737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3666,
        0
      ],
      [
        3736,
        0
      ]
    ]
  ],
  [
    1212,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1132,
        0
      ]
    ]
  ],
  [
    1213,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1131,
        0
      ]
    ]
  ],
  [
    3754,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1130,
        0
      ]
    ]
  ],
  [
    4898,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3754,
        0
      ],
      [
        1213,
        0
      ]
    ]
  ],
  [
    3751,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1134,
        0
      ]
    ]
  ],
  [
    3745,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4626,
        0
      ]
    ]
  ],
  [
    3741,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3740,
        0
      ]
    ]
  ],
  [
    3738,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3737,
        0
      ],
      [
        3737,
        0
      ]
    ]
  ],
  [
    3739,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3738,
        0
      ]
    ]
  ],
  [
    3742,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3739,
        0
      ],
      [
        3741,
        0
      ]
    ]
  ],
  [
    3743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3742,
        0
      ]
    ]
  ],
  [
    3746,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3743,
        0
      ],
      [
        3745,
        0
      ]
    ]
  ],
  [
    3747,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3746,
        0
      ]
    ]
  ],
  [
    3748,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3747,
        0
      ]
    ]
  ],
  [
    3749,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3748,
        0
      ]
    ]
  ],
  [
    3750,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3737,
        0
      ],
      [
        3749,
        0
      ]
    ]
  ],
  [
    3752,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3751,
        0
      ],
      [
        3750,
        0
      ]
    ]
  ],
  [
    4899,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3752,
        0
      ],
      [
        4898,
        0
      ]
    ]
  ],
  [
    4901,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4899,
        0
      ]
    ]
  ],
  [
    4900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4899,
        0
      ]
    ]
  ],
  [
    3756,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4900,
        0
      ]
    ]
  ],
  [
    3757,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4900,
        0
      ],
      [
        3756,
        0
      ]
    ]
  ],
  [
    3758,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3757,
        0
      ],
      [
        4901,
        0
      ]
    ]
  ],
  [
    3759,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3758,
        0
      ],
      [
        1212,
        0
      ]
    ]
  ],
  [
    3760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3737,
        0
      ],
      [
        3759,
        0
      ]
    ]
  ],
  [
    1210,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1138,
        0
      ]
    ]
  ],
  [
    3818,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1137,
        0
      ]
    ]
  ],
  [
    3790,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1135,
        0
      ]
    ]
  ],
  [
    1211,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1136,
        0
      ]
    ]
  ],
  [
    4902,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1211,
        0
      ],
      [
        3790,
        0
      ],
      [
        3818,
        0
      ]
    ]
  ],
  [
    3774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1142,
        0
      ]
    ]
  ],
  [
    3768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4627,
        0
      ]
    ]
  ],
  [
    3764,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3763,
        0
      ]
    ]
  ],
  [
    3761,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3760,
        0
      ],
      [
        3760,
        0
      ]
    ]
  ],
  [
    3762,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3761,
        0
      ]
    ]
  ],
  [
    3765,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3762,
        0
      ],
      [
        3764,
        0
      ]
    ]
  ],
  [
    3766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3765,
        0
      ]
    ]
  ],
  [
    3769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3766,
        0
      ],
      [
        3768,
        0
      ]
    ]
  ],
  [
    3770,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3769,
        0
      ]
    ]
  ],
  [
    3771,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3770,
        0
      ]
    ]
  ],
  [
    3772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3771,
        0
      ]
    ]
  ],
  [
    3773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3760,
        0
      ],
      [
        3772,
        0
      ]
    ]
  ],
  [
    3775,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3774,
        0
      ],
      [
        3773,
        0
      ]
    ]
  ],
  [
    4903,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3775,
        0
      ],
      [
        4902,
        0
      ]
    ]
  ],
  [
    4906,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4903,
        0
      ]
    ]
  ],
  [
    3820,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4906,
        0
      ]
    ]
  ],
  [
    3821,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3820,
        0
      ]
    ]
  ],
  [
    3815,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4632,
        0
      ]
    ]
  ],
  [
    3812,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        365,
        0
      ]
    ]
  ],
  [
    3786,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4629,
        0
      ]
    ]
  ],
  [
    4904,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4903,
        0
      ]
    ]
  ],
  [
    3777,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4904,
        0
      ]
    ]
  ],
  [
    3787,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3777,
        0
      ],
      [
        3786,
        0
      ]
    ]
  ],
  [
    3783,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4628,
        0
      ]
    ]
  ],
  [
    3780,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3777,
        0
      ]
    ]
  ],
  [
    3778,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3777,
        0
      ]
    ]
  ],
  [
    3779,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3778,
        0
      ]
    ]
  ],
  [
    3781,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3779,
        0
      ],
      [
        3780,
        0
      ]
    ]
  ],
  [
    3784,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3781,
        0
      ],
      [
        3783,
        0
      ]
    ]
  ],
  [
    3788,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3787,
        0
      ],
      [
        3784,
        0
      ]
    ]
  ],
  [
    3789,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3788,
        0
      ]
    ]
  ],
  [
    3794,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4630,
        0
      ]
    ]
  ],
  [
    4905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4903,
        0
      ]
    ]
  ],
  [
    3792,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4905,
        0
      ]
    ]
  ],
  [
    3795,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3792,
        0
      ],
      [
        3794,
        0
      ]
    ]
  ],
  [
    3796,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3795,
        0
      ]
    ]
  ],
  [
    3803,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4631,
        0
      ]
    ]
  ],
  [
    3797,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3792,
        0
      ]
    ]
  ],
  [
    3800,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3797,
        0
      ]
    ]
  ],
  [
    3798,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3797,
        0
      ]
    ]
  ],
  [
    3799,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3798,
        0
      ]
    ]
  ],
  [
    3801,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3799,
        0
      ],
      [
        3800,
        0
      ]
    ]
  ],
  [
    3804,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3801,
        0
      ],
      [
        3803,
        0
      ]
    ]
  ],
  [
    3805,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3796,
        0
      ],
      [
        3804,
        0
      ]
    ]
  ],
  [
    3810,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3805,
        0
      ],
      [
        3789,
        0
      ]
    ]
  ],
  [
    3813,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3810,
        0
      ],
      [
        3812,
        0
      ]
    ]
  ],
  [
    3816,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3813,
        0
      ],
      [
        3815,
        0
      ]
    ]
  ],
  [
    5060,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3816,
        0
      ]
    ]
  ],
  [
    5061,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3816,
        0
      ],
      [
        5060,
        0
      ]
    ]
  ],
  [
    5062,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5061,
        0
      ]
    ]
  ],
  [
    5063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5061,
        0
      ],
      [
        5062,
        0
      ]
    ]
  ],
  [
    3826,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5063,
        0
      ],
      [
        3821,
        0
      ]
    ]
  ],
  [
    3828,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3826,
        0
      ]
    ]
  ],
  [
    3829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3828,
        0
      ]
    ]
  ],
  [
    3830,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3829,
        0
      ],
      [
        1210,
        0
      ]
    ]
  ],
  [
    3831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3760,
        0
      ],
      [
        3830,
        0
      ]
    ]
  ],
  [
    1208,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1141,
        0
      ]
    ]
  ],
  [
    1209,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1140,
        0
      ]
    ]
  ],
  [
    3848,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1139,
        0
      ]
    ]
  ],
  [
    4907,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3848,
        0
      ],
      [
        1209,
        0
      ]
    ]
  ],
  [
    3845,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1143,
        0
      ]
    ]
  ],
  [
    3839,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4633,
        0
      ]
    ]
  ],
  [
    3835,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3834,
        0
      ]
    ]
  ],
  [
    3832,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3831,
        0
      ],
      [
        3831,
        0
      ]
    ]
  ],
  [
    3833,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3832,
        0
      ]
    ]
  ],
  [
    3836,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3833,
        0
      ],
      [
        3835,
        0
      ]
    ]
  ],
  [
    3837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3836,
        0
      ]
    ]
  ],
  [
    3840,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3837,
        0
      ],
      [
        3839,
        0
      ]
    ]
  ],
  [
    3841,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3840,
        0
      ]
    ]
  ],
  [
    3842,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3841,
        0
      ]
    ]
  ],
  [
    3843,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3842,
        0
      ]
    ]
  ],
  [
    3844,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3831,
        0
      ],
      [
        3843,
        0
      ]
    ]
  ],
  [
    3846,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3845,
        0
      ],
      [
        3844,
        0
      ]
    ]
  ],
  [
    4908,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3846,
        0
      ],
      [
        4907,
        0
      ]
    ]
  ],
  [
    4910,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4908,
        0
      ]
    ]
  ],
  [
    4909,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4908,
        0
      ]
    ]
  ],
  [
    3850,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4909,
        0
      ]
    ]
  ],
  [
    3851,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4909,
        0
      ],
      [
        3850,
        0
      ]
    ]
  ],
  [
    3852,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3851,
        0
      ],
      [
        4910,
        0
      ]
    ]
  ],
  [
    3853,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3852,
        0
      ],
      [
        1208,
        0
      ]
    ]
  ],
  [
    3854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3831,
        0
      ],
      [
        3853,
        0
      ]
    ]
  ],
  [
    1206,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1147,
        0
      ]
    ]
  ],
  [
    3912,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1146,
        0
      ]
    ]
  ],
  [
    3884,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1144,
        0
      ]
    ]
  ],
  [
    1207,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1145,
        0
      ]
    ]
  ],
  [
    4911,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1207,
        0
      ],
      [
        3884,
        0
      ],
      [
        3912,
        0
      ]
    ]
  ],
  [
    3868,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1151,
        0
      ]
    ]
  ],
  [
    3862,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4634,
        0
      ]
    ]
  ],
  [
    3858,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3857,
        0
      ]
    ]
  ],
  [
    3855,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3854,
        0
      ],
      [
        3854,
        0
      ]
    ]
  ],
  [
    3856,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3855,
        0
      ]
    ]
  ],
  [
    3859,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3856,
        0
      ],
      [
        3858,
        0
      ]
    ]
  ],
  [
    3860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3859,
        0
      ]
    ]
  ],
  [
    3863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3860,
        0
      ],
      [
        3862,
        0
      ]
    ]
  ],
  [
    3864,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3863,
        0
      ]
    ]
  ],
  [
    3865,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3864,
        0
      ]
    ]
  ],
  [
    3866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3865,
        0
      ]
    ]
  ],
  [
    3867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3854,
        0
      ],
      [
        3866,
        0
      ]
    ]
  ],
  [
    3869,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3868,
        0
      ],
      [
        3867,
        0
      ]
    ]
  ],
  [
    4912,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3869,
        0
      ],
      [
        4911,
        0
      ]
    ]
  ],
  [
    4915,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4912,
        0
      ]
    ]
  ],
  [
    3914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4915,
        0
      ]
    ]
  ],
  [
    3915,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3914,
        0
      ]
    ]
  ],
  [
    3909,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4639,
        0
      ]
    ]
  ],
  [
    3906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        378,
        0
      ]
    ]
  ],
  [
    3880,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4636,
        0
      ]
    ]
  ],
  [
    4913,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4912,
        0
      ]
    ]
  ],
  [
    3871,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4913,
        0
      ]
    ]
  ],
  [
    3881,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3871,
        0
      ],
      [
        3880,
        0
      ]
    ]
  ],
  [
    3877,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4635,
        0
      ]
    ]
  ],
  [
    3874,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3871,
        0
      ]
    ]
  ],
  [
    3872,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3871,
        0
      ]
    ]
  ],
  [
    3873,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3872,
        0
      ]
    ]
  ],
  [
    3875,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3873,
        0
      ],
      [
        3874,
        0
      ]
    ]
  ],
  [
    3878,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3875,
        0
      ],
      [
        3877,
        0
      ]
    ]
  ],
  [
    3882,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3881,
        0
      ],
      [
        3878,
        0
      ]
    ]
  ],
  [
    3883,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3882,
        0
      ]
    ]
  ],
  [
    3888,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4637,
        0
      ]
    ]
  ],
  [
    4914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4912,
        0
      ]
    ]
  ],
  [
    3886,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4914,
        0
      ]
    ]
  ],
  [
    3889,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3886,
        0
      ],
      [
        3888,
        0
      ]
    ]
  ],
  [
    3890,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3889,
        0
      ]
    ]
  ],
  [
    3897,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4638,
        0
      ]
    ]
  ],
  [
    3891,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3886,
        0
      ]
    ]
  ],
  [
    3894,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3891,
        0
      ]
    ]
  ],
  [
    3892,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3891,
        0
      ]
    ]
  ],
  [
    3893,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3892,
        0
      ]
    ]
  ],
  [
    3895,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3893,
        0
      ],
      [
        3894,
        0
      ]
    ]
  ],
  [
    3898,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3895,
        0
      ],
      [
        3897,
        0
      ]
    ]
  ],
  [
    3899,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3890,
        0
      ],
      [
        3898,
        0
      ]
    ]
  ],
  [
    3904,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3899,
        0
      ],
      [
        3883,
        0
      ]
    ]
  ],
  [
    3907,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3904,
        0
      ],
      [
        3906,
        0
      ]
    ]
  ],
  [
    3910,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        3907,
        0
      ],
      [
        3909,
        0
      ]
    ]
  ],
  [
    5064,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3910,
        0
      ]
    ]
  ],
  [
    5065,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        3910,
        0
      ],
      [
        5064,
        0
      ]
    ]
  ],
  [
    5066,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5065,
        0
      ]
    ]
  ],
  [
    5067,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5065,
        0
      ],
      [
        5066,
        0
      ]
    ]
  ],
  [
    3920,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5067,
        0
      ],
      [
        3915,
        0
      ]
    ]
  ],
  [
    3922,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        3920,
        0
      ]
    ]
  ],
  [
    3923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3922,
        0
      ]
    ]
  ],
  [
    3924,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        3923,
        0
      ],
      [
        1206,
        0
      ]
    ]
  ],
  [
    3925,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3854,
        0
      ],
      [
        3924,
        0
      ]
    ]
  ],
  [
    1204,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1150,
        0
      ]
    ]
  ],
  [
    1205,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1149,
        0
      ]
    ]
  ],
  [
    3942,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1148,
        0
      ]
    ]
  ],
  [
    4916,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        3942,
        0
      ],
      [
        1205,
        0
      ]
    ]
  ],
  [
    3939,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1152,
        0
      ]
    ]
  ],
  [
    3933,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4640,
        0
      ]
    ]
  ],
  [
    3929,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3928,
        0
      ]
    ]
  ],
  [
    3926,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3925,
        0
      ],
      [
        3925,
        0
      ]
    ]
  ],
  [
    3927,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3926,
        0
      ]
    ]
  ],
  [
    3930,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3927,
        0
      ],
      [
        3929,
        0
      ]
    ]
  ],
  [
    3931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3930,
        0
      ]
    ]
  ],
  [
    3934,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3931,
        0
      ],
      [
        3933,
        0
      ]
    ]
  ],
  [
    3935,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3934,
        0
      ]
    ]
  ],
  [
    3936,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3935,
        0
      ]
    ]
  ],
  [
    3937,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3936,
        0
      ]
    ]
  ],
  [
    3938,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3925,
        0
      ],
      [
        3937,
        0
      ]
    ]
  ],
  [
    3940,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3939,
        0
      ],
      [
        3938,
        0
      ]
    ]
  ],
  [
    4917,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        3940,
        0
      ],
      [
        4916,
        0
      ]
    ]
  ],
  [
    4919,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4917,
        0
      ]
    ]
  ],
  [
    4918,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4917,
        0
      ]
    ]
  ],
  [
    3944,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4918,
        0
      ]
    ]
  ],
  [
    3945,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4918,
        0
      ],
      [
        3944,
        0
      ]
    ]
  ],
  [
    3946,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        3945,
        0
      ],
      [
        4919,
        0
      ]
    ]
  ],
  [
    3947,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        3946,
        0
      ],
      [
        1204,
        0
      ]
    ]
  ],
  [
    3948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3925,
        0
      ],
      [
        3947,
        0
      ]
    ]
  ],
  [
    1202,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1156,
        0
      ]
    ]
  ],
  [
    4006,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1155,
        0
      ]
    ]
  ],
  [
    3978,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1153,
        0
      ]
    ]
  ],
  [
    1203,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1154,
        0
      ]
    ]
  ],
  [
    4920,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1203,
        0
      ],
      [
        3978,
        0
      ],
      [
        4006,
        0
      ]
    ]
  ],
  [
    3962,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1160,
        0
      ]
    ]
  ],
  [
    3956,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4641,
        0
      ]
    ]
  ],
  [
    3952,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        3951,
        0
      ]
    ]
  ],
  [
    3949,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3948,
        0
      ],
      [
        3948,
        0
      ]
    ]
  ],
  [
    3950,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        3949,
        0
      ]
    ]
  ],
  [
    3953,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        3950,
        0
      ],
      [
        3952,
        0
      ]
    ]
  ],
  [
    3954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3953,
        0
      ]
    ]
  ],
  [
    3957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        3954,
        0
      ],
      [
        3956,
        0
      ]
    ]
  ],
  [
    3958,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        3957,
        0
      ]
    ]
  ],
  [
    3959,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        3958,
        0
      ]
    ]
  ],
  [
    3960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        3959,
        0
      ]
    ]
  ],
  [
    3961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        3948,
        0
      ],
      [
        3960,
        0
      ]
    ]
  ],
  [
    3963,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        3962,
        0
      ],
      [
        3961,
        0
      ]
    ]
  ],
  [
    4921,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        3963,
        0
      ],
      [
        4920,
        0
      ]
    ]
  ],
  [
    4924,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4921,
        0
      ]
    ]
  ],
  [
    4008,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4924,
        0
      ]
    ]
  ],
  [
    4009,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4008,
        0
      ]
    ]
  ],
  [
    4003,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4646,
        0
      ]
    ]
  ],
  [
    4000,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        391,
        0
      ]
    ]
  ],
  [
    3974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4643,
        0
      ]
    ]
  ],
  [
    4922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4921,
        0
      ]
    ]
  ],
  [
    3965,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4922,
        0
      ]
    ]
  ],
  [
    3975,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3965,
        0
      ],
      [
        3974,
        0
      ]
    ]
  ],
  [
    3971,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4642,
        0
      ]
    ]
  ],
  [
    3968,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3965,
        0
      ]
    ]
  ],
  [
    3966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        3965,
        0
      ]
    ]
  ],
  [
    3967,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        3966,
        0
      ]
    ]
  ],
  [
    3969,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        3967,
        0
      ],
      [
        3968,
        0
      ]
    ]
  ],
  [
    3972,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3969,
        0
      ],
      [
        3971,
        0
      ]
    ]
  ],
  [
    3976,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        3975,
        0
      ],
      [
        3972,
        0
      ]
    ]
  ],
  [
    3977,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3976,
        0
      ]
    ]
  ],
  [
    3982,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4644,
        0
      ]
    ]
  ],
  [
    4923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4921,
        0
      ]
    ]
  ],
  [
    3980,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4923,
        0
      ]
    ]
  ],
  [
    3983,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        3980,
        0
      ],
      [
        3982,
        0
      ]
    ]
  ],
  [
    3984,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3983,
        0
      ]
    ]
  ],
  [
    3991,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4645,
        0
      ]
    ]
  ],
  [
    3985,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3980,
        0
      ]
    ]
  ],
  [
    3988,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3985,
        0
      ]
    ]
  ],
  [
    3986,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        3985,
        0
      ]
    ]
  ],
  [
    3987,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        3986,
        0
      ]
    ]
  ],
  [
    3989,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        3987,
        0
      ],
      [
        3988,
        0
      ]
    ]
  ],
  [
    3992,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        3989,
        0
      ],
      [
        3991,
        0
      ]
    ]
  ],
  [
    3993,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        3984,
        0
      ],
      [
        3992,
        0
      ]
    ]
  ],
  [
    3998,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        3993,
        0
      ],
      [
        3977,
        0
      ]
    ]
  ],
  [
    4001,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        3998,
        0
      ],
      [
        4000,
        0
      ]
    ]
  ],
  [
    4004,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        4001,
        0
      ],
      [
        4003,
        0
      ]
    ]
  ],
  [
    5068,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4004,
        0
      ]
    ]
  ],
  [
    5069,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4004,
        0
      ],
      [
        5068,
        0
      ]
    ]
  ],
  [
    5070,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5069,
        0
      ]
    ]
  ],
  [
    5071,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5069,
        0
      ],
      [
        5070,
        0
      ]
    ]
  ],
  [
    4014,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5071,
        0
      ],
      [
        4009,
        0
      ]
    ]
  ],
  [
    4016,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        4014,
        0
      ]
    ]
  ],
  [
    4017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4016,
        0
      ]
    ]
  ],
  [
    4018,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        4017,
        0
      ],
      [
        1202,
        0
      ]
    ]
  ],
  [
    4019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        3948,
        0
      ],
      [
        4018,
        0
      ]
    ]
  ],
  [
    1200,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1159,
        0
      ]
    ]
  ],
  [
    1201,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1158,
        0
      ]
    ]
  ],
  [
    4036,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1157,
        0
      ]
    ]
  ],
  [
    4925,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        4036,
        0
      ],
      [
        1201,
        0
      ]
    ]
  ],
  [
    4033,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1161,
        0
      ]
    ]
  ],
  [
    4027,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4647,
        0
      ]
    ]
  ],
  [
    4023,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4022,
        0
      ]
    ]
  ],
  [
    4020,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4019,
        0
      ],
      [
        4019,
        0
      ]
    ]
  ],
  [
    4021,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4020,
        0
      ]
    ]
  ],
  [
    4024,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4021,
        0
      ],
      [
        4023,
        0
      ]
    ]
  ],
  [
    4025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4024,
        0
      ]
    ]
  ],
  [
    4028,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4025,
        0
      ],
      [
        4027,
        0
      ]
    ]
  ],
  [
    4029,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4028,
        0
      ]
    ]
  ],
  [
    4030,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4029,
        0
      ]
    ]
  ],
  [
    4031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4030,
        0
      ]
    ]
  ],
  [
    4032,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4019,
        0
      ],
      [
        4031,
        0
      ]
    ]
  ],
  [
    4034,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4033,
        0
      ],
      [
        4032,
        0
      ]
    ]
  ],
  [
    4926,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        4034,
        0
      ],
      [
        4925,
        0
      ]
    ]
  ],
  [
    4928,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4926,
        0
      ]
    ]
  ],
  [
    4927,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4926,
        0
      ]
    ]
  ],
  [
    4038,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4927,
        0
      ]
    ]
  ],
  [
    4039,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4927,
        0
      ],
      [
        4038,
        0
      ]
    ]
  ],
  [
    4040,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4039,
        0
      ],
      [
        4928,
        0
      ]
    ]
  ],
  [
    4041,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        4040,
        0
      ],
      [
        1200,
        0
      ]
    ]
  ],
  [
    4042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4019,
        0
      ],
      [
        4041,
        0
      ]
    ]
  ],
  [
    1198,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1165,
        0
      ]
    ]
  ],
  [
    4100,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1164,
        0
      ]
    ]
  ],
  [
    4072,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1162,
        0
      ]
    ]
  ],
  [
    1199,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1163,
        0
      ]
    ]
  ],
  [
    4929,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1199,
        0
      ],
      [
        4072,
        0
      ],
      [
        4100,
        0
      ]
    ]
  ],
  [
    4056,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1169,
        0
      ]
    ]
  ],
  [
    4050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4648,
        0
      ]
    ]
  ],
  [
    4046,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4045,
        0
      ]
    ]
  ],
  [
    4043,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4042,
        0
      ],
      [
        4042,
        0
      ]
    ]
  ],
  [
    4044,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4043,
        0
      ]
    ]
  ],
  [
    4047,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4044,
        0
      ],
      [
        4046,
        0
      ]
    ]
  ],
  [
    4048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4047,
        0
      ]
    ]
  ],
  [
    4051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4048,
        0
      ],
      [
        4050,
        0
      ]
    ]
  ],
  [
    4052,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4051,
        0
      ]
    ]
  ],
  [
    4053,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4052,
        0
      ]
    ]
  ],
  [
    4054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4053,
        0
      ]
    ]
  ],
  [
    4055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4042,
        0
      ],
      [
        4054,
        0
      ]
    ]
  ],
  [
    4057,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4056,
        0
      ],
      [
        4055,
        0
      ]
    ]
  ],
  [
    4930,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        4057,
        0
      ],
      [
        4929,
        0
      ]
    ]
  ],
  [
    4933,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4930,
        0
      ]
    ]
  ],
  [
    4102,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4933,
        0
      ]
    ]
  ],
  [
    4103,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4102,
        0
      ]
    ]
  ],
  [
    4097,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4653,
        0
      ]
    ]
  ],
  [
    4094,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        404,
        0
      ]
    ]
  ],
  [
    4068,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4650,
        0
      ]
    ]
  ],
  [
    4931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4930,
        0
      ]
    ]
  ],
  [
    4059,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4931,
        0
      ]
    ]
  ],
  [
    4069,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4059,
        0
      ],
      [
        4068,
        0
      ]
    ]
  ],
  [
    4065,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4649,
        0
      ]
    ]
  ],
  [
    4062,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        4059,
        0
      ]
    ]
  ],
  [
    4060,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        4059,
        0
      ]
    ]
  ],
  [
    4061,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        4060,
        0
      ]
    ]
  ],
  [
    4063,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        4061,
        0
      ],
      [
        4062,
        0
      ]
    ]
  ],
  [
    4066,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4063,
        0
      ],
      [
        4065,
        0
      ]
    ]
  ],
  [
    4070,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        4069,
        0
      ],
      [
        4066,
        0
      ]
    ]
  ],
  [
    4071,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4070,
        0
      ]
    ]
  ],
  [
    4076,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4651,
        0
      ]
    ]
  ],
  [
    4932,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4930,
        0
      ]
    ]
  ],
  [
    4074,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4932,
        0
      ]
    ]
  ],
  [
    4077,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4074,
        0
      ],
      [
        4076,
        0
      ]
    ]
  ],
  [
    4078,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4077,
        0
      ]
    ]
  ],
  [
    4085,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4652,
        0
      ]
    ]
  ],
  [
    4079,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4074,
        0
      ]
    ]
  ],
  [
    4082,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        4079,
        0
      ]
    ]
  ],
  [
    4080,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        4079,
        0
      ]
    ]
  ],
  [
    4081,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        4080,
        0
      ]
    ]
  ],
  [
    4083,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        4081,
        0
      ],
      [
        4082,
        0
      ]
    ]
  ],
  [
    4086,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        4083,
        0
      ],
      [
        4085,
        0
      ]
    ]
  ],
  [
    4087,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        4078,
        0
      ],
      [
        4086,
        0
      ]
    ]
  ],
  [
    4092,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4087,
        0
      ],
      [
        4071,
        0
      ]
    ]
  ],
  [
    4095,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        4092,
        0
      ],
      [
        4094,
        0
      ]
    ]
  ],
  [
    4098,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        4095,
        0
      ],
      [
        4097,
        0
      ]
    ]
  ],
  [
    5072,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4098,
        0
      ]
    ]
  ],
  [
    5073,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4098,
        0
      ],
      [
        5072,
        0
      ]
    ]
  ],
  [
    5074,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5073,
        0
      ]
    ]
  ],
  [
    5075,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5073,
        0
      ],
      [
        5074,
        0
      ]
    ]
  ],
  [
    4108,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5075,
        0
      ],
      [
        4103,
        0
      ]
    ]
  ],
  [
    4110,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        4108,
        0
      ]
    ]
  ],
  [
    4111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4110,
        0
      ]
    ]
  ],
  [
    4112,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        4111,
        0
      ],
      [
        1198,
        0
      ]
    ]
  ],
  [
    4113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4042,
        0
      ],
      [
        4112,
        0
      ]
    ]
  ],
  [
    1196,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1168,
        0
      ]
    ]
  ],
  [
    1197,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1167,
        0
      ]
    ]
  ],
  [
    4130,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1166,
        0
      ]
    ]
  ],
  [
    4934,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        4130,
        0
      ],
      [
        1197,
        0
      ]
    ]
  ],
  [
    4127,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1170,
        0
      ]
    ]
  ],
  [
    4121,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4500,
        0
      ]
    ]
  ],
  [
    4117,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4116,
        0
      ]
    ]
  ],
  [
    4114,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4113,
        0
      ],
      [
        4113,
        0
      ]
    ]
  ],
  [
    4115,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4114,
        0
      ]
    ]
  ],
  [
    4118,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4115,
        0
      ],
      [
        4117,
        0
      ]
    ]
  ],
  [
    4119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4118,
        0
      ]
    ]
  ],
  [
    4122,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4119,
        0
      ],
      [
        4121,
        0
      ]
    ]
  ],
  [
    4123,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4122,
        0
      ]
    ]
  ],
  [
    4124,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4123,
        0
      ]
    ]
  ],
  [
    4125,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4124,
        0
      ]
    ]
  ],
  [
    4126,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4113,
        0
      ],
      [
        4125,
        0
      ]
    ]
  ],
  [
    4128,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4127,
        0
      ],
      [
        4126,
        0
      ]
    ]
  ],
  [
    4935,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        4128,
        0
      ],
      [
        4934,
        0
      ]
    ]
  ],
  [
    4937,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4935,
        0
      ]
    ]
  ],
  [
    4936,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4935,
        0
      ]
    ]
  ],
  [
    4132,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4936,
        0
      ]
    ]
  ],
  [
    4133,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4936,
        0
      ],
      [
        4132,
        0
      ]
    ]
  ],
  [
    4134,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4133,
        0
      ],
      [
        4937,
        0
      ]
    ]
  ],
  [
    4135,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        4134,
        0
      ],
      [
        1196,
        0
      ]
    ]
  ],
  [
    4136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4113,
        0
      ],
      [
        4135,
        0
      ]
    ]
  ],
  [
    1194,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1174,
        0
      ]
    ]
  ],
  [
    4194,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1173,
        0
      ]
    ]
  ],
  [
    4166,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1171,
        0
      ]
    ]
  ],
  [
    1195,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1172,
        0
      ]
    ]
  ],
  [
    4938,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 4096,  input1[N0, N1 - 4096].when(N1 < 8192, input2[N0, N1 - 8192]) )  where N1 in 12288; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Concat",
    [
      [
        1195,
        0
      ],
      [
        4166,
        0
      ],
      [
        4194,
        0
      ]
    ]
  ],
  [
    4150,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1178,
        0
      ]
    ]
  ],
  [
    4144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4654,
        0
      ]
    ]
  ],
  [
    4140,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4139,
        0
      ]
    ]
  ],
  [
    4137,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4136,
        0
      ],
      [
        4136,
        0
      ]
    ]
  ],
  [
    4138,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4137,
        0
      ]
    ]
  ],
  [
    4141,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4138,
        0
      ],
      [
        4140,
        0
      ]
    ]
  ],
  [
    4142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4141,
        0
      ]
    ]
  ],
  [
    4145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4142,
        0
      ],
      [
        4144,
        0
      ]
    ]
  ],
  [
    4146,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4145,
        0
      ]
    ]
  ],
  [
    4147,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4146,
        0
      ]
    ]
  ],
  [
    4148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4147,
        0
      ]
    ]
  ],
  [
    4149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4136,
        0
      ],
      [
        4148,
        0
      ]
    ]
  ],
  [
    4151,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4150,
        0
      ],
      [
        4149,
        0
      ]
    ]
  ],
  [
    4939,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        4151,
        0
      ],
      [
        4938,
        0
      ]
    ]
  ],
  [
    4942,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4939,
        0
      ]
    ]
  ],
  [
    4196,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4942,
        0
      ]
    ]
  ],
  [
    4197,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4196,
        0
      ]
    ]
  ],
  [
    4191,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4659,
        0
      ]
    ]
  ],
  [
    4188,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        417,
        0
      ]
    ]
  ],
  [
    4162,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4656,
        0
      ]
    ]
  ],
  [
    4940,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4939,
        0
      ]
    ]
  ],
  [
    4153,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4940,
        0
      ]
    ]
  ],
  [
    4163,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4153,
        0
      ],
      [
        4162,
        0
      ]
    ]
  ],
  [
    4159,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4655,
        0
      ]
    ]
  ],
  [
    4156,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        4153,
        0
      ]
    ]
  ],
  [
    4154,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        4153,
        0
      ]
    ]
  ],
  [
    4155,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        4154,
        0
      ]
    ]
  ],
  [
    4157,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        4155,
        0
      ],
      [
        4156,
        0
      ]
    ]
  ],
  [
    4160,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4157,
        0
      ],
      [
        4159,
        0
      ]
    ]
  ],
  [
    4164,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        4163,
        0
      ],
      [
        4160,
        0
      ]
    ]
  ],
  [
    4165,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4164,
        0
      ]
    ]
  ],
  [
    4170,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4657,
        0
      ]
    ]
  ],
  [
    4941,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4939,
        0
      ]
    ]
  ],
  [
    4168,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4941,
        0
      ]
    ]
  ],
  [
    4171,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4168,
        0
      ],
      [
        4170,
        0
      ]
    ]
  ],
  [
    4172,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4171,
        0
      ]
    ]
  ],
  [
    4179,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4658,
        0
      ]
    ]
  ],
  [
    4173,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4168,
        0
      ]
    ]
  ],
  [
    4176,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        4173,
        0
      ]
    ]
  ],
  [
    4174,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        4173,
        0
      ]
    ]
  ],
  [
    4175,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        4174,
        0
      ]
    ]
  ],
  [
    4177,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        4175,
        0
      ],
      [
        4176,
        0
      ]
    ]
  ],
  [
    4180,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        4177,
        0
      ],
      [
        4179,
        0
      ]
    ]
  ],
  [
    4181,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        4172,
        0
      ],
      [
        4180,
        0
      ]
    ]
  ],
  [
    4186,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4181,
        0
      ],
      [
        4165,
        0
      ]
    ]
  ],
  [
    4189,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        4186,
        0
      ],
      [
        4188,
        0
      ]
    ]
  ],
  [
    4192,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        4189,
        0
      ],
      [
        4191,
        0
      ]
    ]
  ],
  [
    5076,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4192,
        0
      ]
    ]
  ],
  [
    5077,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4192,
        0
      ],
      [
        5076,
        0
      ]
    ]
  ],
  [
    5078,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5077,
        0
      ]
    ]
  ],
  [
    5079,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5077,
        0
      ],
      [
        5078,
        0
      ]
    ]
  ],
  [
    4202,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5079,
        0
      ],
      [
        4197,
        0
      ]
    ]
  ],
  [
    4204,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        4202,
        0
      ]
    ]
  ],
  [
    4205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4204,
        0
      ]
    ]
  ],
  [
    4206,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        4205,
        0
      ],
      [
        1194,
        0
      ]
    ]
  ],
  [
    4207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4136,
        0
      ],
      [
        4206,
        0
      ]
    ]
  ],
  [
    1192,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1177,
        0
      ]
    ]
  ],
  [
    1193,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1176,
        0
      ]
    ]
  ],
  [
    4224,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1175,
        0
      ]
    ]
  ],
  [
    4943,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        4224,
        0
      ],
      [
        1193,
        0
      ]
    ]
  ],
  [
    4221,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1179,
        0
      ]
    ]
  ],
  [
    4215,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4660,
        0
      ]
    ]
  ],
  [
    4211,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4210,
        0
      ]
    ]
  ],
  [
    4208,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4207,
        0
      ],
      [
        4207,
        0
      ]
    ]
  ],
  [
    4209,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4208,
        0
      ]
    ]
  ],
  [
    4212,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4209,
        0
      ],
      [
        4211,
        0
      ]
    ]
  ],
  [
    4213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4212,
        0
      ]
    ]
  ],
  [
    4216,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4213,
        0
      ],
      [
        4215,
        0
      ]
    ]
  ],
  [
    4217,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4216,
        0
      ]
    ]
  ],
  [
    4218,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4217,
        0
      ]
    ]
  ],
  [
    4219,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4218,
        0
      ]
    ]
  ],
  [
    4220,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4207,
        0
      ],
      [
        4219,
        0
      ]
    ]
  ],
  [
    4222,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4221,
        0
      ],
      [
        4220,
        0
      ]
    ]
  ],
  [
    4944,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        4222,
        0
      ],
      [
        4943,
        0
      ]
    ]
  ],
  [
    4946,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4944,
        0
      ]
    ]
  ],
  [
    4945,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4944,
        0
      ]
    ]
  ],
  [
    4226,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4945,
        0
      ]
    ]
  ],
  [
    4227,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4945,
        0
      ],
      [
        4226,
        0
      ]
    ]
  ],
  [
    4228,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4227,
        0
      ],
      [
        4946,
        0
      ]
    ]
  ],
  [
    4229,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        4228,
        0
      ],
      [
        1192,
        0
      ]
    ]
  ],
  [
    4230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4207,
        0
      ],
      [
        4229,
        0
      ]
    ]
  ],
  [
    4238,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4661,
        0
      ]
    ]
  ],
  [
    4234,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4233,
        0
      ]
    ]
  ],
  [
    4231,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4230,
        0
      ],
      [
        4230,
        0
      ]
    ]
  ],
  [
    4232,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4231,
        0
      ]
    ]
  ],
  [
    4235,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4232,
        0
      ],
      [
        4234,
        0
      ]
    ]
  ],
  [
    4236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4235,
        0
      ]
    ]
  ],
  [
    4239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4236,
        0
      ],
      [
        4238,
        0
      ]
    ]
  ],
  [
    4240,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4239,
        0
      ]
    ]
  ],
  [
    4241,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4240,
        0
      ]
    ]
  ],
  [
    4242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4241,
        0
      ]
    ]
  ],
  [
    4243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4230,
        0
      ],
      [
        4242,
        0
      ]
    ]
  ],
  [
    4245,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4244,
        0
      ],
      [
        4243,
        0
      ]
    ]
  ],
  [
    4948,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 12288]} })  ",
    "Dot",
    [
      [
        4245,
        0
      ],
      [
        4947,
        0
      ]
    ]
  ],
  [
    4951,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 8192] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4948,
        0
      ]
    ]
  ],
  [
    4326,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4951,
        0
      ]
    ]
  ],
  [
    4327,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4326,
        0
      ]
    ]
  ],
  [
    4442,
    "",
    "Result",
    [
      [
        4327,
        0
      ]
    ]
  ],
  [
    4256,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4663,
        0
      ]
    ]
  ],
  [
    4949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4948,
        0
      ]
    ]
  ],
  [
    4247,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4949,
        0
      ]
    ]
  ],
  [
    4257,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4247,
        0
      ],
      [
        4256,
        0
      ]
    ]
  ],
  [
    4253,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4662,
        0
      ]
    ]
  ],
  [
    4250,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        4247,
        0
      ]
    ]
  ],
  [
    4248,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 66 , N2 in 32 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Slice",
    [
      [
        4247,
        0
      ]
    ]
  ],
  [
    4249,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Negative",
    [
      [
        4248,
        0
      ]
    ]
  ],
  [
    4251,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 64]} })  ",
    "Concat",
    [
      [
        4249,
        0
      ],
      [
        4250,
        0
      ]
    ]
  ],
  [
    4254,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4251,
        0
      ],
      [
        4253,
        0
      ]
    ]
  ],
  [
    4258,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Add",
    [
      [
        4257,
        0
      ],
      [
        4254,
        0
      ]
    ]
  ],
  [
    4259,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4258,
        0
      ]
    ]
  ],
  [
    4441,
    "",
    "Result",
    [
      [
        4259,
        0
      ]
    ]
  ],
  [
    4440,
    "",
    "Result",
    [
      [
        4197,
        0
      ]
    ]
  ],
  [
    4260,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4164,
        0
      ]
    ]
  ],
  [
    4439,
    "",
    "Result",
    [
      [
        4260,
        0
      ]
    ]
  ],
  [
    4438,
    "",
    "Result",
    [
      [
        4103,
        0
      ]
    ]
  ],
  [
    4261,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4070,
        0
      ]
    ]
  ],
  [
    4437,
    "",
    "Result",
    [
      [
        4261,
        0
      ]
    ]
  ],
  [
    4436,
    "",
    "Result",
    [
      [
        4009,
        0
      ]
    ]
  ],
  [
    4262,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3976,
        0
      ]
    ]
  ],
  [
    4435,
    "",
    "Result",
    [
      [
        4262,
        0
      ]
    ]
  ],
  [
    4434,
    "",
    "Result",
    [
      [
        3915,
        0
      ]
    ]
  ],
  [
    4263,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3882,
        0
      ]
    ]
  ],
  [
    4433,
    "",
    "Result",
    [
      [
        4263,
        0
      ]
    ]
  ],
  [
    4432,
    "",
    "Result",
    [
      [
        3821,
        0
      ]
    ]
  ],
  [
    4264,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3788,
        0
      ]
    ]
  ],
  [
    4431,
    "",
    "Result",
    [
      [
        4264,
        0
      ]
    ]
  ],
  [
    4430,
    "",
    "Result",
    [
      [
        3727,
        0
      ]
    ]
  ],
  [
    4265,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3694,
        0
      ]
    ]
  ],
  [
    4429,
    "",
    "Result",
    [
      [
        4265,
        0
      ]
    ]
  ],
  [
    4428,
    "",
    "Result",
    [
      [
        3633,
        0
      ]
    ]
  ],
  [
    4266,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3600,
        0
      ]
    ]
  ],
  [
    4427,
    "",
    "Result",
    [
      [
        4266,
        0
      ]
    ]
  ],
  [
    4426,
    "",
    "Result",
    [
      [
        3539,
        0
      ]
    ]
  ],
  [
    4267,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3506,
        0
      ]
    ]
  ],
  [
    4425,
    "",
    "Result",
    [
      [
        4267,
        0
      ]
    ]
  ],
  [
    4424,
    "",
    "Result",
    [
      [
        3445,
        0
      ]
    ]
  ],
  [
    4268,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3412,
        0
      ]
    ]
  ],
  [
    4423,
    "",
    "Result",
    [
      [
        4268,
        0
      ]
    ]
  ],
  [
    4422,
    "",
    "Result",
    [
      [
        3351,
        0
      ]
    ]
  ],
  [
    4269,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3318,
        0
      ]
    ]
  ],
  [
    4421,
    "",
    "Result",
    [
      [
        4269,
        0
      ]
    ]
  ],
  [
    4420,
    "",
    "Result",
    [
      [
        3257,
        0
      ]
    ]
  ],
  [
    4270,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3224,
        0
      ]
    ]
  ],
  [
    4419,
    "",
    "Result",
    [
      [
        4270,
        0
      ]
    ]
  ],
  [
    4418,
    "",
    "Result",
    [
      [
        3163,
        0
      ]
    ]
  ],
  [
    4271,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3130,
        0
      ]
    ]
  ],
  [
    4417,
    "",
    "Result",
    [
      [
        4271,
        0
      ]
    ]
  ],
  [
    4416,
    "",
    "Result",
    [
      [
        3069,
        0
      ]
    ]
  ],
  [
    4272,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        3036,
        0
      ]
    ]
  ],
  [
    4415,
    "",
    "Result",
    [
      [
        4272,
        0
      ]
    ]
  ],
  [
    4414,
    "",
    "Result",
    [
      [
        2975,
        0
      ]
    ]
  ],
  [
    4273,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2942,
        0
      ]
    ]
  ],
  [
    4413,
    "",
    "Result",
    [
      [
        4273,
        0
      ]
    ]
  ],
  [
    4412,
    "",
    "Result",
    [
      [
        2881,
        0
      ]
    ]
  ],
  [
    4274,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2848,
        0
      ]
    ]
  ],
  [
    4411,
    "",
    "Result",
    [
      [
        4274,
        0
      ]
    ]
  ],
  [
    4410,
    "",
    "Result",
    [
      [
        2787,
        0
      ]
    ]
  ],
  [
    4275,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2754,
        0
      ]
    ]
  ],
  [
    4409,
    "",
    "Result",
    [
      [
        4275,
        0
      ]
    ]
  ],
  [
    4408,
    "",
    "Result",
    [
      [
        2693,
        0
      ]
    ]
  ],
  [
    4276,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2660,
        0
      ]
    ]
  ],
  [
    4407,
    "",
    "Result",
    [
      [
        4276,
        0
      ]
    ]
  ],
  [
    4406,
    "",
    "Result",
    [
      [
        2599,
        0
      ]
    ]
  ],
  [
    4277,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2566,
        0
      ]
    ]
  ],
  [
    4405,
    "",
    "Result",
    [
      [
        4277,
        0
      ]
    ]
  ],
  [
    4404,
    "",
    "Result",
    [
      [
        2505,
        0
      ]
    ]
  ],
  [
    4278,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2472,
        0
      ]
    ]
  ],
  [
    4403,
    "",
    "Result",
    [
      [
        4278,
        0
      ]
    ]
  ],
  [
    4402,
    "",
    "Result",
    [
      [
        2411,
        0
      ]
    ]
  ],
  [
    4279,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2378,
        0
      ]
    ]
  ],
  [
    4401,
    "",
    "Result",
    [
      [
        4279,
        0
      ]
    ]
  ],
  [
    4400,
    "",
    "Result",
    [
      [
        2317,
        0
      ]
    ]
  ],
  [
    4280,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2284,
        0
      ]
    ]
  ],
  [
    4399,
    "",
    "Result",
    [
      [
        4280,
        0
      ]
    ]
  ],
  [
    4398,
    "",
    "Result",
    [
      [
        2223,
        0
      ]
    ]
  ],
  [
    4281,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2190,
        0
      ]
    ]
  ],
  [
    4397,
    "",
    "Result",
    [
      [
        4281,
        0
      ]
    ]
  ],
  [
    4396,
    "",
    "Result",
    [
      [
        2129,
        0
      ]
    ]
  ],
  [
    4282,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2096,
        0
      ]
    ]
  ],
  [
    4395,
    "",
    "Result",
    [
      [
        4282,
        0
      ]
    ]
  ],
  [
    4394,
    "",
    "Result",
    [
      [
        2035,
        0
      ]
    ]
  ],
  [
    4283,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        2002,
        0
      ]
    ]
  ],
  [
    4393,
    "",
    "Result",
    [
      [
        4283,
        0
      ]
    ]
  ],
  [
    4392,
    "",
    "Result",
    [
      [
        1941,
        0
      ]
    ]
  ],
  [
    4284,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1908,
        0
      ]
    ]
  ],
  [
    4391,
    "",
    "Result",
    [
      [
        4284,
        0
      ]
    ]
  ],
  [
    4390,
    "",
    "Result",
    [
      [
        1847,
        0
      ]
    ]
  ],
  [
    4285,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1814,
        0
      ]
    ]
  ],
  [
    4389,
    "",
    "Result",
    [
      [
        4285,
        0
      ]
    ]
  ],
  [
    4388,
    "",
    "Result",
    [
      [
        1753,
        0
      ]
    ]
  ],
  [
    4286,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1720,
        0
      ]
    ]
  ],
  [
    4387,
    "",
    "Result",
    [
      [
        4286,
        0
      ]
    ]
  ],
  [
    4386,
    "",
    "Result",
    [
      [
        1659,
        0
      ]
    ]
  ],
  [
    4287,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1626,
        0
      ]
    ]
  ],
  [
    4385,
    "",
    "Result",
    [
      [
        4287,
        0
      ]
    ]
  ],
  [
    4384,
    "",
    "Result",
    [
      [
        1565,
        0
      ]
    ]
  ],
  [
    4288,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1532,
        0
      ]
    ]
  ],
  [
    4383,
    "",
    "Result",
    [
      [
        4288,
        0
      ]
    ]
  ],
  [
    4382,
    "",
    "Result",
    [
      [
        1471,
        0
      ]
    ]
  ],
  [
    4289,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1438,
        0
      ]
    ]
  ],
  [
    4381,
    "",
    "Result",
    [
      [
        4289,
        0
      ]
    ]
  ],
  [
    4380,
    "",
    "Result",
    [
      [
        1377,
        0
      ]
    ]
  ],
  [
    4290,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        1344,
        0
      ]
    ]
  ],
  [
    4379,
    "",
    "Result",
    [
      [
        4290,
        0
      ]
    ]
  ],
  [
    4291,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [32000, 4096]} })  ",
    "Reshape",
    [
      [
        1190,
        0
      ]
    ]
  ],
  [
    4374,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1189,
        0
      ]
    ]
  ],
  [
    4294,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Reshape",
    [
      [
        1183,
        0
      ]
    ]
  ],
  [
    4321,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N2, N3] where N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 66]} })  ",
    "Broadcast",
    [
      [
        4554,
        0
      ]
    ]
  ],
  [
    4318,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 32, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        430,
        0
      ]
    ]
  ],
  [
    4295,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4258,
        0
      ]
    ]
  ],
  [
    4300,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N3] where N0 in 99, N2 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4664,
        0
      ]
    ]
  ],
  [
    4950,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 4096] where N0 in 99 , N1 in 66 , N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 12288]} })  ",
    "Slice",
    [
      [
        4948,
        0
      ]
    ]
  ],
  [
    4298,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 128 + N3)] where N2 in 32, N3 in 128;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4950,
        0
      ]
    ]
  ],
  [
    4301,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Multiply",
    [
      [
        4298,
        0
      ],
      [
        4300,
        0
      ]
    ]
  ],
  [
    4302,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4301,
        0
      ]
    ]
  ],
  [
    4309,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N2, N3] where N0 in 99, N1 in 32; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [66, 128]} })  ",
    "Broadcast",
    [
      [
        4665,
        0
      ]
    ]
  ],
  [
    4303,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} })  ",
    "Reshape",
    [
      [
        4298,
        0
      ]
    ]
  ],
  [
    4306,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        4303,
        0
      ]
    ]
  ],
  [
    4304,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 64] where N0 in 99 , N1 in 32 , N2 in 66 , N3 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Slice",
    [
      [
        4303,
        0
      ]
    ]
  ],
  [
    4305,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = -input0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Negative",
    [
      [
        4304,
        0
      ]
    ]
  ],
  [
    4307,
    " - einstein_v2(\" output0[N0, N1, N2, N3] =  input0[N0, N1, N2, N3 - 0].when(N3 < 64, input1[N0, N1, N2, N3 - 64])  where N3 in 128; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 64]} })  ",
    "Concat",
    [
      [
        4305,
        0
      ],
      [
        4306,
        0
      ]
    ]
  ],
  [
    4310,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Multiply",
    [
      [
        4307,
        0
      ],
      [
        4309,
        0
      ]
    ]
  ],
  [
    4311,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Add",
    [
      [
        4302,
        0
      ],
      [
        4310,
        0
      ]
    ]
  ],
  [
    4316,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 128, 66]} })  ",
    "BatchMatMul",
    [
      [
        4311,
        0
      ],
      [
        4295,
        0
      ]
    ]
  ],
  [
    4319,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Divide",
    [
      [
        4316,
        0
      ],
      [
        4318,
        0
      ]
    ]
  ],
  [
    4322,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "Add",
    [
      [
        4319,
        0
      ],
      [
        4321,
        0
      ]
    ]
  ],
  [
    5080,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4322,
        0
      ]
    ]
  ],
  [
    5081,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        4322,
        0
      ],
      [
        5080,
        0
      ]
    ]
  ],
  [
    5082,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5081,
        0
      ]
    ]
  ],
  [
    5083,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        5081,
        0
      ],
      [
        5082,
        0
      ]
    ]
  ],
  [
    4332,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "BatchMatMul",
    [
      [
        5083,
        0
      ],
      [
        4327,
        0
      ]
    ]
  ],
  [
    4334,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 32, 66, 128]} })  ",
    "Reshape",
    [
      [
        4332,
        0
      ]
    ]
  ],
  [
    4335,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 128 % 32, N2 / 1 % 128] where N2 in 4096;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32, 128]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4334,
        0
      ]
    ]
  ],
  [
    4336,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 4096]} })  ",
    "Dot",
    [
      [
        4335,
        0
      ],
      [
        4294,
        0
      ]
    ]
  ],
  [
    4337,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4230,
        0
      ],
      [
        4336,
        0
      ]
    ]
  ],
  [
    4292,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Reshape",
    [
      [
        1186,
        0
      ]
    ]
  ],
  [
    4293,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1185,
        0
      ]
    ]
  ],
  [
    4354,
    " - einstein_v2(\" output0[N1, N0] = input0[N0, N1] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Reshape",
    [
      [
        1184,
        0
      ]
    ]
  ],
  [
    4952,
    " - einstein_v2(\" output0[N0, N1] =  input0[N0, N1 - 0].when(N1 < 11008, input1[N0, N1 - 11008])  where N1 in 22016; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 11008]} })  ",
    "Concat",
    [
      [
        4354,
        0
      ],
      [
        4293,
        0
      ]
    ]
  ],
  [
    4351,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        1188,
        0
      ]
    ]
  ],
  [
    4345,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4666,
        0
      ]
    ]
  ],
  [
    4341,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4340,
        0
      ]
    ]
  ],
  [
    4338,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4337,
        0
      ],
      [
        4337,
        0
      ]
    ]
  ],
  [
    4339,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4338,
        0
      ]
    ]
  ],
  [
    4342,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4339,
        0
      ],
      [
        4341,
        0
      ]
    ]
  ],
  [
    4343,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4342,
        0
      ]
    ]
  ],
  [
    4346,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4343,
        0
      ],
      [
        4345,
        0
      ]
    ]
  ],
  [
    4347,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4346,
        0
      ]
    ]
  ],
  [
    4348,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4347,
        0
      ]
    ]
  ],
  [
    4349,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4348,
        0
      ]
    ]
  ],
  [
    4350,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4337,
        0
      ],
      [
        4349,
        0
      ]
    ]
  ],
  [
    4352,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4351,
        0
      ],
      [
        4350,
        0
      ]
    ]
  ],
  [
    4953,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 22016]} })  ",
    "Dot",
    [
      [
        4352,
        0
      ],
      [
        4952,
        0
      ]
    ]
  ],
  [
    4955,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 11008] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4953,
        0
      ]
    ]
  ],
  [
    4954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 11008; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 22016]} })  ",
    "Slice",
    [
      [
        4953,
        0
      ]
    ]
  ],
  [
    4356,
    " - einstein_v2(\"output0[N0, N1, N2] = const(1).cast(input0[N0, N1, N2].dtype()) / (const(1).cast(input0[N0, N1, N2].dtype()) + (-input0[N0, N1, N2]).call(`exp`));\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Sigmoid",
    [
      [
        4954,
        0
      ]
    ]
  ],
  [
    4357,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4954,
        0
      ],
      [
        4356,
        0
      ]
    ]
  ],
  [
    4358,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} })  ",
    "Multiply",
    [
      [
        4357,
        0
      ],
      [
        4955,
        0
      ]
    ]
  ],
  [
    4359,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 11008]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [11008, 4096]} })  ",
    "Dot",
    [
      [
        4358,
        0
      ],
      [
        4292,
        0
      ]
    ]
  ],
  [
    4360,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        4337,
        0
      ],
      [
        4359,
        0
      ]
    ]
  ],
  [
    4368,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4667,
        0
      ]
    ]
  ],
  [
    4364,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        4363,
        0
      ]
    ]
  ],
  [
    4361,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4360,
        0
      ],
      [
        4360,
        0
      ]
    ]
  ],
  [
    4362,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Sum",
    [
      [
        4361,
        0
      ]
    ]
  ],
  [
    4365,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        4362,
        0
      ],
      [
        4364,
        0
      ]
    ]
  ],
  [
    4366,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4365,
        0
      ]
    ]
  ],
  [
    4369,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        4366,
        0
      ],
      [
        4368,
        0
      ]
    ]
  ],
  [
    4370,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        4369,
        0
      ]
    ]
  ],
  [
    4371,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        4370,
        0
      ]
    ]
  ],
  [
    4372,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 4096; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        4371,
        0
      ]
    ]
  ],
  [
    4373,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Divide",
    [
      [
        4360,
        0
      ],
      [
        4372,
        0
      ]
    ]
  ],
  [
    4375,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Multiply",
    [
      [
        4374,
        0
      ],
      [
        4373,
        0
      ]
    ]
  ],
  [
    4376,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 32000]} })  ",
    "Dot",
    [
      [
        4375,
        0
      ],
      [
        4291,
        0
      ]
    ]
  ],
  [
    4377,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].cast(`float32`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 32000]} })  ",
    "Convert",
    [
      [
        4376,
        0
      ]
    ]
  ],
  [
    4378,
    "",
    "Result",
    [
      [
        4377,
        0
      ]
    ]
  ]
]