[
  [
    2839,
    " - einstein_v2(\" output0[N0, N1] = input0[N1] where N0 in 99; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        198,
        0
      ]
    ]
  ],
  [
    2835,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2833,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2802,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2741,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2739,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2708,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2706,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2647,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2645,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2614,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2612,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2553,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2551,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2520,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2518,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2459,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2457,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2426,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2424,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2365,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2363,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2332,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2330,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2271,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2269,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2238,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2236,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2177,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2175,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2142,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2083,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2081,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    2050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    2048,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1989,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1987,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1956,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1954,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1895,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1893,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1862,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1860,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1801,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1799,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1766,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1707,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1705,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1674,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1672,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1613,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1611,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1580,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1519,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1517,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1486,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1484,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1425,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1423,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1392,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1390,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1331,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1329,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1298,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1296,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1237,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1235,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1204,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1202,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1143,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1141,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1110,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1108,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1049,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1047,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    1016,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    1014,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    955,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    953,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    922,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    920,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    861,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    859,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    826,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    767,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    765,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    734,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    732,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    673,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    671,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    640,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    638,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    570,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    568,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        3,
        0
      ]
    ]
  ],
  [
    545,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[G3, N2] g input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [2, 1024]} ,  \"input1\" : { \"dtype\" : \"int64\", \"shape\" : [99, 66]} })  ",
    "GatherV2",
    [
      [
        2,
        0
      ],
      [
        541,
        0
      ]
    ]
  ],
  [
    543,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[G3, N2] g input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [30522, 1024]} ,  \"input1\" : { \"dtype\" : \"int64\", \"shape\" : [99, 66]} })  ",
    "GatherV2",
    [
      [
        0,
        0
      ],
      [
        540,
        0
      ]
    ]
  ],
  [
    544,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        543,
        0
      ],
      [
        410,
        0
      ]
    ]
  ],
  [
    546,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        544,
        0
      ],
      [
        545,
        0
      ]
    ]
  ],
  [
    549,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        548,
        0
      ]
    ]
  ],
  [
    547,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        546,
        0
      ]
    ]
  ],
  [
    550,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        547,
        0
      ],
      [
        549,
        0
      ]
    ]
  ],
  [
    551,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        550,
        0
      ]
    ]
  ],
  [
    552,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        551,
        0
      ]
    ]
  ],
  [
    553,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        552,
        0
      ]
    ]
  ],
  [
    554,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        546,
        0
      ],
      [
        553,
        0
      ]
    ]
  ],
  [
    562,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2844,
        0
      ]
    ]
  ],
  [
    558,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        557,
        0
      ]
    ]
  ],
  [
    555,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        554,
        0
      ],
      [
        554,
        0
      ]
    ]
  ],
  [
    556,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        555,
        0
      ]
    ]
  ],
  [
    559,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        556,
        0
      ],
      [
        558,
        0
      ]
    ]
  ],
  [
    560,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        559,
        0
      ]
    ]
  ],
  [
    563,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        560,
        0
      ],
      [
        562,
        0
      ]
    ]
  ],
  [
    564,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        563,
        0
      ]
    ]
  ],
  [
    565,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        564,
        0
      ]
    ]
  ],
  [
    566,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        565,
        0
      ]
    ]
  ],
  [
    567,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        554,
        0
      ],
      [
        566,
        0
      ]
    ]
  ],
  [
    569,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        567,
        0
      ],
      [
        568,
        0
      ]
    ]
  ],
  [
    571,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        569,
        0
      ],
      [
        570,
        0
      ]
    ]
  ],
  [
    614,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        8,
        0
      ]
    ]
  ],
  [
    573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        6,
        0
      ]
    ]
  ],
  [
    572,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        571,
        0
      ],
      [
        264,
        0
      ]
    ]
  ],
  [
    574,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        573,
        0
      ],
      [
        572,
        0
      ]
    ]
  ],
  [
    602,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        574,
        0
      ]
    ]
  ],
  [
    603,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        602,
        0
      ]
    ]
  ],
  [
    604,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        603,
        0
      ]
    ]
  ],
  [
    596,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N2] where N0 in 99, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 1]} })  ",
    "Broadcast",
    [
      [
        2845,
        0
      ]
    ]
  ],
  [
    593,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1, N2] where N0 in 99, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 1]} })  ",
    "Broadcast",
    [
      [
        2846,
        0
      ]
    ]
  ],
  [
    589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N2] where N1 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"int64\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        542,
        0
      ]
    ]
  ],
  [
    590,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, 0, N3] where N1 in 1, N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"int64\", \"shape\" : [99, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        589,
        0
      ]
    ]
  ],
  [
    591,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3].cast(`float32`);\", input_dict={ \"input0\" : { \"dtype\" : \"int64\", \"shape\" : [99, 1, 1, 66]} })  ",
    "Convert",
    [
      [
        590,
        0
      ]
    ]
  ],
  [
    594,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] - input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} })  ",
    "Subtract",
    [
      [
        593,
        0
      ],
      [
        591,
        0
      ]
    ]
  ],
  [
    597,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} })  ",
    "Multiply",
    [
      [
        594,
        0
      ],
      [
        596,
        0
      ]
    ]
  ],
  [
    598,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    599,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        598,
        0
      ]
    ]
  ],
  [
    587,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        223,
        0
      ]
    ]
  ],
  [
    575,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        574,
        0
      ]
    ]
  ],
  [
    576,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        575,
        0
      ]
    ]
  ],
  [
    577,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        576,
        0
      ]
    ]
  ],
  [
    578,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        574,
        0
      ]
    ]
  ],
  [
    579,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        578,
        0
      ]
    ]
  ],
  [
    580,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        579,
        0
      ]
    ]
  ],
  [
    585,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        580,
        0
      ],
      [
        577,
        0
      ]
    ]
  ],
  [
    588,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        585,
        0
      ],
      [
        587,
        0
      ]
    ]
  ],
  [
    600,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        588,
        0
      ],
      [
        599,
        0
      ]
    ]
  ],
  [
    2895,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        600,
        0
      ]
    ]
  ],
  [
    2896,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        600,
        0
      ],
      [
        2895,
        0
      ]
    ]
  ],
  [
    2897,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2896,
        0
      ]
    ]
  ],
  [
    2898,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2896,
        0
      ],
      [
        2897,
        0
      ]
    ]
  ],
  [
    609,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2898,
        0
      ],
      [
        604,
        0
      ]
    ]
  ],
  [
    611,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        609,
        0
      ]
    ]
  ],
  [
    612,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        611,
        0
      ]
    ]
  ],
  [
    613,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        612,
        0
      ],
      [
        429,
        0
      ]
    ]
  ],
  [
    615,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        614,
        0
      ],
      [
        613,
        0
      ]
    ]
  ],
  [
    616,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        615,
        0
      ],
      [
        571,
        0
      ]
    ]
  ],
  [
    619,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        618,
        0
      ]
    ]
  ],
  [
    617,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        616,
        0
      ]
    ]
  ],
  [
    620,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        617,
        0
      ],
      [
        619,
        0
      ]
    ]
  ],
  [
    621,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        620,
        0
      ]
    ]
  ],
  [
    622,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        621,
        0
      ]
    ]
  ],
  [
    623,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        622,
        0
      ]
    ]
  ],
  [
    624,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        616,
        0
      ],
      [
        623,
        0
      ]
    ]
  ],
  [
    632,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2847,
        0
      ]
    ]
  ],
  [
    628,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        627,
        0
      ]
    ]
  ],
  [
    625,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        624,
        0
      ],
      [
        624,
        0
      ]
    ]
  ],
  [
    626,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        625,
        0
      ]
    ]
  ],
  [
    629,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        626,
        0
      ],
      [
        628,
        0
      ]
    ]
  ],
  [
    630,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        629,
        0
      ]
    ]
  ],
  [
    633,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        630,
        0
      ],
      [
        632,
        0
      ]
    ]
  ],
  [
    634,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        633,
        0
      ]
    ]
  ],
  [
    635,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        634,
        0
      ]
    ]
  ],
  [
    636,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        635,
        0
      ]
    ]
  ],
  [
    637,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        624,
        0
      ],
      [
        636,
        0
      ]
    ]
  ],
  [
    639,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        637,
        0
      ],
      [
        638,
        0
      ]
    ]
  ],
  [
    641,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        639,
        0
      ],
      [
        640,
        0
      ]
    ]
  ],
  [
    647,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        12,
        0
      ]
    ]
  ],
  [
    643,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        10,
        0
      ]
    ]
  ],
  [
    642,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        641,
        0
      ],
      [
        359,
        0
      ]
    ]
  ],
  [
    644,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        643,
        0
      ],
      [
        642,
        0
      ]
    ]
  ],
  [
    645,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        644,
        0
      ]
    ]
  ],
  [
    646,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        645,
        0
      ],
      [
        171,
        0
      ]
    ]
  ],
  [
    648,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        647,
        0
      ],
      [
        646,
        0
      ]
    ]
  ],
  [
    649,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        648,
        0
      ],
      [
        641,
        0
      ]
    ]
  ],
  [
    652,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        651,
        0
      ]
    ]
  ],
  [
    650,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        649,
        0
      ]
    ]
  ],
  [
    653,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        650,
        0
      ],
      [
        652,
        0
      ]
    ]
  ],
  [
    654,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        653,
        0
      ]
    ]
  ],
  [
    655,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        654,
        0
      ]
    ]
  ],
  [
    656,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        655,
        0
      ]
    ]
  ],
  [
    657,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        649,
        0
      ],
      [
        656,
        0
      ]
    ]
  ],
  [
    665,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2848,
        0
      ]
    ]
  ],
  [
    661,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        660,
        0
      ]
    ]
  ],
  [
    658,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        657,
        0
      ],
      [
        657,
        0
      ]
    ]
  ],
  [
    659,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        658,
        0
      ]
    ]
  ],
  [
    662,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        659,
        0
      ],
      [
        661,
        0
      ]
    ]
  ],
  [
    663,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        662,
        0
      ]
    ]
  ],
  [
    666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        663,
        0
      ],
      [
        665,
        0
      ]
    ]
  ],
  [
    667,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        666,
        0
      ]
    ]
  ],
  [
    668,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        667,
        0
      ]
    ]
  ],
  [
    669,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        668,
        0
      ]
    ]
  ],
  [
    670,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        657,
        0
      ],
      [
        669,
        0
      ]
    ]
  ],
  [
    672,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        670,
        0
      ],
      [
        671,
        0
      ]
    ]
  ],
  [
    674,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        672,
        0
      ],
      [
        673,
        0
      ]
    ]
  ],
  [
    708,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        16,
        0
      ]
    ]
  ],
  [
    676,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        14,
        0
      ]
    ]
  ],
  [
    675,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        674,
        0
      ],
      [
        513,
        0
      ]
    ]
  ],
  [
    677,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        676,
        0
      ],
      [
        675,
        0
      ]
    ]
  ],
  [
    696,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        677,
        0
      ]
    ]
  ],
  [
    697,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        696,
        0
      ]
    ]
  ],
  [
    698,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        697,
        0
      ]
    ]
  ],
  [
    692,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    693,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        692,
        0
      ]
    ]
  ],
  [
    690,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        250,
        0
      ]
    ]
  ],
  [
    678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        677,
        0
      ]
    ]
  ],
  [
    679,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        678,
        0
      ]
    ]
  ],
  [
    680,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        679,
        0
      ]
    ]
  ],
  [
    681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        677,
        0
      ]
    ]
  ],
  [
    682,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        681,
        0
      ]
    ]
  ],
  [
    683,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        682,
        0
      ]
    ]
  ],
  [
    688,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        683,
        0
      ],
      [
        680,
        0
      ]
    ]
  ],
  [
    691,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        688,
        0
      ],
      [
        690,
        0
      ]
    ]
  ],
  [
    694,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        691,
        0
      ],
      [
        693,
        0
      ]
    ]
  ],
  [
    2899,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        694,
        0
      ]
    ]
  ],
  [
    2900,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        694,
        0
      ],
      [
        2899,
        0
      ]
    ]
  ],
  [
    2901,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2900,
        0
      ]
    ]
  ],
  [
    2902,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2900,
        0
      ],
      [
        2901,
        0
      ]
    ]
  ],
  [
    703,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2902,
        0
      ],
      [
        698,
        0
      ]
    ]
  ],
  [
    705,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        703,
        0
      ]
    ]
  ],
  [
    706,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        705,
        0
      ]
    ]
  ],
  [
    707,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        706,
        0
      ],
      [
        97,
        0
      ]
    ]
  ],
  [
    709,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        708,
        0
      ],
      [
        707,
        0
      ]
    ]
  ],
  [
    710,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        709,
        0
      ],
      [
        674,
        0
      ]
    ]
  ],
  [
    713,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        712,
        0
      ]
    ]
  ],
  [
    711,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        710,
        0
      ]
    ]
  ],
  [
    714,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        711,
        0
      ],
      [
        713,
        0
      ]
    ]
  ],
  [
    715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        714,
        0
      ]
    ]
  ],
  [
    716,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        715,
        0
      ]
    ]
  ],
  [
    717,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        716,
        0
      ]
    ]
  ],
  [
    718,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        710,
        0
      ],
      [
        717,
        0
      ]
    ]
  ],
  [
    726,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2849,
        0
      ]
    ]
  ],
  [
    722,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        721,
        0
      ]
    ]
  ],
  [
    719,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        718,
        0
      ],
      [
        718,
        0
      ]
    ]
  ],
  [
    720,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        719,
        0
      ]
    ]
  ],
  [
    723,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        720,
        0
      ],
      [
        722,
        0
      ]
    ]
  ],
  [
    724,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        723,
        0
      ]
    ]
  ],
  [
    727,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        724,
        0
      ],
      [
        726,
        0
      ]
    ]
  ],
  [
    728,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        727,
        0
      ]
    ]
  ],
  [
    729,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        728,
        0
      ]
    ]
  ],
  [
    730,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        729,
        0
      ]
    ]
  ],
  [
    731,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        718,
        0
      ],
      [
        730,
        0
      ]
    ]
  ],
  [
    733,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        731,
        0
      ],
      [
        732,
        0
      ]
    ]
  ],
  [
    735,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        733,
        0
      ],
      [
        734,
        0
      ]
    ]
  ],
  [
    741,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        20,
        0
      ]
    ]
  ],
  [
    737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        18,
        0
      ]
    ]
  ],
  [
    736,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        735,
        0
      ],
      [
        289,
        0
      ]
    ]
  ],
  [
    738,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        737,
        0
      ],
      [
        736,
        0
      ]
    ]
  ],
  [
    739,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        738,
        0
      ]
    ]
  ],
  [
    740,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        739,
        0
      ],
      [
        127,
        0
      ]
    ]
  ],
  [
    742,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        741,
        0
      ],
      [
        740,
        0
      ]
    ]
  ],
  [
    743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        742,
        0
      ],
      [
        735,
        0
      ]
    ]
  ],
  [
    746,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        745,
        0
      ]
    ]
  ],
  [
    744,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        743,
        0
      ]
    ]
  ],
  [
    747,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        744,
        0
      ],
      [
        746,
        0
      ]
    ]
  ],
  [
    748,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        747,
        0
      ]
    ]
  ],
  [
    749,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        748,
        0
      ]
    ]
  ],
  [
    750,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        749,
        0
      ]
    ]
  ],
  [
    751,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        743,
        0
      ],
      [
        750,
        0
      ]
    ]
  ],
  [
    759,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2851,
        0
      ]
    ]
  ],
  [
    755,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        754,
        0
      ]
    ]
  ],
  [
    752,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        751,
        0
      ],
      [
        751,
        0
      ]
    ]
  ],
  [
    753,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        752,
        0
      ]
    ]
  ],
  [
    756,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        753,
        0
      ],
      [
        755,
        0
      ]
    ]
  ],
  [
    757,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        756,
        0
      ]
    ]
  ],
  [
    760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        757,
        0
      ],
      [
        759,
        0
      ]
    ]
  ],
  [
    761,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        760,
        0
      ]
    ]
  ],
  [
    762,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        761,
        0
      ]
    ]
  ],
  [
    763,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        762,
        0
      ]
    ]
  ],
  [
    764,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        751,
        0
      ],
      [
        763,
        0
      ]
    ]
  ],
  [
    766,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        764,
        0
      ],
      [
        765,
        0
      ]
    ]
  ],
  [
    768,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        766,
        0
      ],
      [
        767,
        0
      ]
    ]
  ],
  [
    802,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        24,
        0
      ]
    ]
  ],
  [
    770,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        22,
        0
      ]
    ]
  ],
  [
    769,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        768,
        0
      ],
      [
        115,
        0
      ]
    ]
  ],
  [
    771,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        770,
        0
      ],
      [
        769,
        0
      ]
    ]
  ],
  [
    790,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        771,
        0
      ]
    ]
  ],
  [
    791,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        790,
        0
      ]
    ]
  ],
  [
    792,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        791,
        0
      ]
    ]
  ],
  [
    786,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    787,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        786,
        0
      ]
    ]
  ],
  [
    784,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        277,
        0
      ]
    ]
  ],
  [
    772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        771,
        0
      ]
    ]
  ],
  [
    773,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        772,
        0
      ]
    ]
  ],
  [
    774,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        773,
        0
      ]
    ]
  ],
  [
    775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        771,
        0
      ]
    ]
  ],
  [
    776,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        775,
        0
      ]
    ]
  ],
  [
    777,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        776,
        0
      ]
    ]
  ],
  [
    782,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        777,
        0
      ],
      [
        774,
        0
      ]
    ]
  ],
  [
    785,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        782,
        0
      ],
      [
        784,
        0
      ]
    ]
  ],
  [
    788,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        785,
        0
      ],
      [
        787,
        0
      ]
    ]
  ],
  [
    2903,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        788,
        0
      ]
    ]
  ],
  [
    2904,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        788,
        0
      ],
      [
        2903,
        0
      ]
    ]
  ],
  [
    2905,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2904,
        0
      ]
    ]
  ],
  [
    2906,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2904,
        0
      ],
      [
        2905,
        0
      ]
    ]
  ],
  [
    797,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2906,
        0
      ],
      [
        792,
        0
      ]
    ]
  ],
  [
    799,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        797,
        0
      ]
    ]
  ],
  [
    800,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        799,
        0
      ]
    ]
  ],
  [
    801,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        800,
        0
      ],
      [
        91,
        0
      ]
    ]
  ],
  [
    803,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        802,
        0
      ],
      [
        801,
        0
      ]
    ]
  ],
  [
    804,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        803,
        0
      ],
      [
        768,
        0
      ]
    ]
  ],
  [
    807,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        806,
        0
      ]
    ]
  ],
  [
    805,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        804,
        0
      ]
    ]
  ],
  [
    808,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        805,
        0
      ],
      [
        807,
        0
      ]
    ]
  ],
  [
    809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        808,
        0
      ]
    ]
  ],
  [
    810,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        809,
        0
      ]
    ]
  ],
  [
    811,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        810,
        0
      ]
    ]
  ],
  [
    812,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        804,
        0
      ],
      [
        811,
        0
      ]
    ]
  ],
  [
    820,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2852,
        0
      ]
    ]
  ],
  [
    816,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        815,
        0
      ]
    ]
  ],
  [
    813,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        812,
        0
      ],
      [
        812,
        0
      ]
    ]
  ],
  [
    814,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        813,
        0
      ]
    ]
  ],
  [
    817,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        814,
        0
      ],
      [
        816,
        0
      ]
    ]
  ],
  [
    818,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        817,
        0
      ]
    ]
  ],
  [
    821,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        818,
        0
      ],
      [
        820,
        0
      ]
    ]
  ],
  [
    822,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        821,
        0
      ]
    ]
  ],
  [
    823,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        822,
        0
      ]
    ]
  ],
  [
    824,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        823,
        0
      ]
    ]
  ],
  [
    825,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        812,
        0
      ],
      [
        824,
        0
      ]
    ]
  ],
  [
    827,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        825,
        0
      ],
      [
        826,
        0
      ]
    ]
  ],
  [
    829,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        827,
        0
      ],
      [
        828,
        0
      ]
    ]
  ],
  [
    835,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        28,
        0
      ]
    ]
  ],
  [
    831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        26,
        0
      ]
    ]
  ],
  [
    830,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        829,
        0
      ],
      [
        247,
        0
      ]
    ]
  ],
  [
    832,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        831,
        0
      ],
      [
        830,
        0
      ]
    ]
  ],
  [
    833,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        832,
        0
      ]
    ]
  ],
  [
    834,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        833,
        0
      ],
      [
        492,
        0
      ]
    ]
  ],
  [
    836,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        835,
        0
      ],
      [
        834,
        0
      ]
    ]
  ],
  [
    837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        836,
        0
      ],
      [
        829,
        0
      ]
    ]
  ],
  [
    840,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        839,
        0
      ]
    ]
  ],
  [
    838,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        837,
        0
      ]
    ]
  ],
  [
    841,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        838,
        0
      ],
      [
        840,
        0
      ]
    ]
  ],
  [
    842,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        841,
        0
      ]
    ]
  ],
  [
    843,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        842,
        0
      ]
    ]
  ],
  [
    844,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        843,
        0
      ]
    ]
  ],
  [
    845,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        837,
        0
      ],
      [
        844,
        0
      ]
    ]
  ],
  [
    853,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2853,
        0
      ]
    ]
  ],
  [
    849,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        848,
        0
      ]
    ]
  ],
  [
    846,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        845,
        0
      ],
      [
        845,
        0
      ]
    ]
  ],
  [
    847,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        846,
        0
      ]
    ]
  ],
  [
    850,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        847,
        0
      ],
      [
        849,
        0
      ]
    ]
  ],
  [
    851,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        850,
        0
      ]
    ]
  ],
  [
    854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        851,
        0
      ],
      [
        853,
        0
      ]
    ]
  ],
  [
    855,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        854,
        0
      ]
    ]
  ],
  [
    856,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        855,
        0
      ]
    ]
  ],
  [
    857,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        856,
        0
      ]
    ]
  ],
  [
    858,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        845,
        0
      ],
      [
        857,
        0
      ]
    ]
  ],
  [
    860,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        858,
        0
      ],
      [
        859,
        0
      ]
    ]
  ],
  [
    862,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        860,
        0
      ],
      [
        861,
        0
      ]
    ]
  ],
  [
    896,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        32,
        0
      ]
    ]
  ],
  [
    864,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        30,
        0
      ]
    ]
  ],
  [
    863,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        862,
        0
      ],
      [
        183,
        0
      ]
    ]
  ],
  [
    865,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        864,
        0
      ],
      [
        863,
        0
      ]
    ]
  ],
  [
    884,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        865,
        0
      ]
    ]
  ],
  [
    885,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        884,
        0
      ]
    ]
  ],
  [
    886,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        885,
        0
      ]
    ]
  ],
  [
    880,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    881,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        880,
        0
      ]
    ]
  ],
  [
    878,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        304,
        0
      ]
    ]
  ],
  [
    866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        865,
        0
      ]
    ]
  ],
  [
    867,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        866,
        0
      ]
    ]
  ],
  [
    868,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        867,
        0
      ]
    ]
  ],
  [
    869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        865,
        0
      ]
    ]
  ],
  [
    870,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        869,
        0
      ]
    ]
  ],
  [
    871,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        870,
        0
      ]
    ]
  ],
  [
    876,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        871,
        0
      ],
      [
        868,
        0
      ]
    ]
  ],
  [
    879,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        876,
        0
      ],
      [
        878,
        0
      ]
    ]
  ],
  [
    882,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        879,
        0
      ],
      [
        881,
        0
      ]
    ]
  ],
  [
    2907,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        882,
        0
      ]
    ]
  ],
  [
    2908,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        882,
        0
      ],
      [
        2907,
        0
      ]
    ]
  ],
  [
    2909,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2908,
        0
      ]
    ]
  ],
  [
    2910,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2908,
        0
      ],
      [
        2909,
        0
      ]
    ]
  ],
  [
    891,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2910,
        0
      ],
      [
        886,
        0
      ]
    ]
  ],
  [
    893,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        891,
        0
      ]
    ]
  ],
  [
    894,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        893,
        0
      ]
    ]
  ],
  [
    895,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        894,
        0
      ],
      [
        109,
        0
      ]
    ]
  ],
  [
    897,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        896,
        0
      ],
      [
        895,
        0
      ]
    ]
  ],
  [
    898,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        897,
        0
      ],
      [
        862,
        0
      ]
    ]
  ],
  [
    901,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        900,
        0
      ]
    ]
  ],
  [
    899,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        898,
        0
      ]
    ]
  ],
  [
    902,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        899,
        0
      ],
      [
        901,
        0
      ]
    ]
  ],
  [
    903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        902,
        0
      ]
    ]
  ],
  [
    904,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        903,
        0
      ]
    ]
  ],
  [
    905,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        904,
        0
      ]
    ]
  ],
  [
    906,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        898,
        0
      ],
      [
        905,
        0
      ]
    ]
  ],
  [
    914,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2854,
        0
      ]
    ]
  ],
  [
    910,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        909,
        0
      ]
    ]
  ],
  [
    907,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        906,
        0
      ],
      [
        906,
        0
      ]
    ]
  ],
  [
    908,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        907,
        0
      ]
    ]
  ],
  [
    911,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        908,
        0
      ],
      [
        910,
        0
      ]
    ]
  ],
  [
    912,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        911,
        0
      ]
    ]
  ],
  [
    915,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        912,
        0
      ],
      [
        914,
        0
      ]
    ]
  ],
  [
    916,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        915,
        0
      ]
    ]
  ],
  [
    917,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        916,
        0
      ]
    ]
  ],
  [
    918,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        917,
        0
      ]
    ]
  ],
  [
    919,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        906,
        0
      ],
      [
        918,
        0
      ]
    ]
  ],
  [
    921,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        919,
        0
      ],
      [
        920,
        0
      ]
    ]
  ],
  [
    923,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        921,
        0
      ],
      [
        922,
        0
      ]
    ]
  ],
  [
    929,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        36,
        0
      ]
    ]
  ],
  [
    925,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        34,
        0
      ]
    ]
  ],
  [
    924,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        923,
        0
      ],
      [
        237,
        0
      ]
    ]
  ],
  [
    926,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        925,
        0
      ],
      [
        924,
        0
      ]
    ]
  ],
  [
    927,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        926,
        0
      ]
    ]
  ],
  [
    928,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        927,
        0
      ],
      [
        213,
        0
      ]
    ]
  ],
  [
    930,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        929,
        0
      ],
      [
        928,
        0
      ]
    ]
  ],
  [
    931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        930,
        0
      ],
      [
        923,
        0
      ]
    ]
  ],
  [
    934,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        933,
        0
      ]
    ]
  ],
  [
    932,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        931,
        0
      ]
    ]
  ],
  [
    935,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        932,
        0
      ],
      [
        934,
        0
      ]
    ]
  ],
  [
    936,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        935,
        0
      ]
    ]
  ],
  [
    937,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        936,
        0
      ]
    ]
  ],
  [
    938,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        937,
        0
      ]
    ]
  ],
  [
    939,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        931,
        0
      ],
      [
        938,
        0
      ]
    ]
  ],
  [
    947,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2850,
        0
      ]
    ]
  ],
  [
    943,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        942,
        0
      ]
    ]
  ],
  [
    940,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        939,
        0
      ],
      [
        939,
        0
      ]
    ]
  ],
  [
    941,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        940,
        0
      ]
    ]
  ],
  [
    944,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        941,
        0
      ],
      [
        943,
        0
      ]
    ]
  ],
  [
    945,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        944,
        0
      ]
    ]
  ],
  [
    948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        945,
        0
      ],
      [
        947,
        0
      ]
    ]
  ],
  [
    949,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        948,
        0
      ]
    ]
  ],
  [
    950,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        949,
        0
      ]
    ]
  ],
  [
    951,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        950,
        0
      ]
    ]
  ],
  [
    952,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        939,
        0
      ],
      [
        951,
        0
      ]
    ]
  ],
  [
    954,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        952,
        0
      ],
      [
        953,
        0
      ]
    ]
  ],
  [
    956,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        954,
        0
      ],
      [
        955,
        0
      ]
    ]
  ],
  [
    990,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        40,
        0
      ]
    ]
  ],
  [
    958,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        38,
        0
      ]
    ]
  ],
  [
    957,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        956,
        0
      ],
      [
        491,
        0
      ]
    ]
  ],
  [
    959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        958,
        0
      ],
      [
        957,
        0
      ]
    ]
  ],
  [
    978,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        959,
        0
      ]
    ]
  ],
  [
    979,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        978,
        0
      ]
    ]
  ],
  [
    980,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        979,
        0
      ]
    ]
  ],
  [
    974,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    975,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        974,
        0
      ]
    ]
  ],
  [
    972,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        331,
        0
      ]
    ]
  ],
  [
    960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        959,
        0
      ]
    ]
  ],
  [
    961,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        960,
        0
      ]
    ]
  ],
  [
    962,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        961,
        0
      ]
    ]
  ],
  [
    963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        959,
        0
      ]
    ]
  ],
  [
    964,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        963,
        0
      ]
    ]
  ],
  [
    965,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        964,
        0
      ]
    ]
  ],
  [
    970,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        965,
        0
      ],
      [
        962,
        0
      ]
    ]
  ],
  [
    973,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        970,
        0
      ],
      [
        972,
        0
      ]
    ]
  ],
  [
    976,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        973,
        0
      ],
      [
        975,
        0
      ]
    ]
  ],
  [
    2911,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        976,
        0
      ]
    ]
  ],
  [
    2912,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        976,
        0
      ],
      [
        2911,
        0
      ]
    ]
  ],
  [
    2913,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2912,
        0
      ]
    ]
  ],
  [
    2914,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2912,
        0
      ],
      [
        2913,
        0
      ]
    ]
  ],
  [
    985,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2914,
        0
      ],
      [
        980,
        0
      ]
    ]
  ],
  [
    987,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        985,
        0
      ]
    ]
  ],
  [
    988,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        987,
        0
      ]
    ]
  ],
  [
    989,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        988,
        0
      ],
      [
        316,
        0
      ]
    ]
  ],
  [
    991,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        990,
        0
      ],
      [
        989,
        0
      ]
    ]
  ],
  [
    992,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        991,
        0
      ],
      [
        956,
        0
      ]
    ]
  ],
  [
    995,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        994,
        0
      ]
    ]
  ],
  [
    993,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        992,
        0
      ]
    ]
  ],
  [
    996,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        993,
        0
      ],
      [
        995,
        0
      ]
    ]
  ],
  [
    997,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        996,
        0
      ]
    ]
  ],
  [
    998,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        997,
        0
      ]
    ]
  ],
  [
    999,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        998,
        0
      ]
    ]
  ],
  [
    1000,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        992,
        0
      ],
      [
        999,
        0
      ]
    ]
  ],
  [
    1008,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2855,
        0
      ]
    ]
  ],
  [
    1004,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1003,
        0
      ]
    ]
  ],
  [
    1001,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1000,
        0
      ],
      [
        1000,
        0
      ]
    ]
  ],
  [
    1002,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1001,
        0
      ]
    ]
  ],
  [
    1005,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1002,
        0
      ],
      [
        1004,
        0
      ]
    ]
  ],
  [
    1006,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1005,
        0
      ]
    ]
  ],
  [
    1009,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1006,
        0
      ],
      [
        1008,
        0
      ]
    ]
  ],
  [
    1010,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1009,
        0
      ]
    ]
  ],
  [
    1011,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1010,
        0
      ]
    ]
  ],
  [
    1012,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1011,
        0
      ]
    ]
  ],
  [
    1013,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1000,
        0
      ],
      [
        1012,
        0
      ]
    ]
  ],
  [
    1015,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1013,
        0
      ],
      [
        1014,
        0
      ]
    ]
  ],
  [
    1017,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1015,
        0
      ],
      [
        1016,
        0
      ]
    ]
  ],
  [
    1023,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        44,
        0
      ]
    ]
  ],
  [
    1019,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        42,
        0
      ]
    ]
  ],
  [
    1018,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1017,
        0
      ],
      [
        137,
        0
      ]
    ]
  ],
  [
    1020,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1019,
        0
      ],
      [
        1018,
        0
      ]
    ]
  ],
  [
    1021,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1020,
        0
      ]
    ]
  ],
  [
    1022,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1021,
        0
      ],
      [
        269,
        0
      ]
    ]
  ],
  [
    1024,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1023,
        0
      ],
      [
        1022,
        0
      ]
    ]
  ],
  [
    1025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1024,
        0
      ],
      [
        1017,
        0
      ]
    ]
  ],
  [
    1028,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1027,
        0
      ]
    ]
  ],
  [
    1026,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1025,
        0
      ]
    ]
  ],
  [
    1029,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1026,
        0
      ],
      [
        1028,
        0
      ]
    ]
  ],
  [
    1030,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1029,
        0
      ]
    ]
  ],
  [
    1031,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1030,
        0
      ]
    ]
  ],
  [
    1032,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1031,
        0
      ]
    ]
  ],
  [
    1033,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1025,
        0
      ],
      [
        1032,
        0
      ]
    ]
  ],
  [
    1041,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2856,
        0
      ]
    ]
  ],
  [
    1037,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1036,
        0
      ]
    ]
  ],
  [
    1034,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1033,
        0
      ],
      [
        1033,
        0
      ]
    ]
  ],
  [
    1035,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1034,
        0
      ]
    ]
  ],
  [
    1038,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1035,
        0
      ],
      [
        1037,
        0
      ]
    ]
  ],
  [
    1039,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1038,
        0
      ]
    ]
  ],
  [
    1042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1039,
        0
      ],
      [
        1041,
        0
      ]
    ]
  ],
  [
    1043,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1042,
        0
      ]
    ]
  ],
  [
    1044,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1043,
        0
      ]
    ]
  ],
  [
    1045,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1044,
        0
      ]
    ]
  ],
  [
    1046,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1033,
        0
      ],
      [
        1045,
        0
      ]
    ]
  ],
  [
    1048,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1046,
        0
      ],
      [
        1047,
        0
      ]
    ]
  ],
  [
    1050,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1048,
        0
      ],
      [
        1049,
        0
      ]
    ]
  ],
  [
    1084,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        48,
        0
      ]
    ]
  ],
  [
    1052,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        46,
        0
      ]
    ]
  ],
  [
    1051,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1050,
        0
      ],
      [
        516,
        0
      ]
    ]
  ],
  [
    1053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1052,
        0
      ],
      [
        1051,
        0
      ]
    ]
  ],
  [
    1072,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1053,
        0
      ]
    ]
  ],
  [
    1073,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1072,
        0
      ]
    ]
  ],
  [
    1074,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1073,
        0
      ]
    ]
  ],
  [
    1068,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1069,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1068,
        0
      ]
    ]
  ],
  [
    1066,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        358,
        0
      ]
    ]
  ],
  [
    1054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1053,
        0
      ]
    ]
  ],
  [
    1055,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1054,
        0
      ]
    ]
  ],
  [
    1056,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1055,
        0
      ]
    ]
  ],
  [
    1057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1053,
        0
      ]
    ]
  ],
  [
    1058,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1057,
        0
      ]
    ]
  ],
  [
    1059,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1058,
        0
      ]
    ]
  ],
  [
    1064,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1059,
        0
      ],
      [
        1056,
        0
      ]
    ]
  ],
  [
    1067,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1064,
        0
      ],
      [
        1066,
        0
      ]
    ]
  ],
  [
    1070,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1067,
        0
      ],
      [
        1069,
        0
      ]
    ]
  ],
  [
    2915,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1070,
        0
      ]
    ]
  ],
  [
    2916,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1070,
        0
      ],
      [
        2915,
        0
      ]
    ]
  ],
  [
    2917,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2916,
        0
      ]
    ]
  ],
  [
    2918,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2916,
        0
      ],
      [
        2917,
        0
      ]
    ]
  ],
  [
    1079,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2918,
        0
      ],
      [
        1074,
        0
      ]
    ]
  ],
  [
    1081,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1079,
        0
      ]
    ]
  ],
  [
    1082,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1081,
        0
      ]
    ]
  ],
  [
    1083,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1082,
        0
      ],
      [
        248,
        0
      ]
    ]
  ],
  [
    1085,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1084,
        0
      ],
      [
        1083,
        0
      ]
    ]
  ],
  [
    1086,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1085,
        0
      ],
      [
        1050,
        0
      ]
    ]
  ],
  [
    1089,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1088,
        0
      ]
    ]
  ],
  [
    1087,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1086,
        0
      ]
    ]
  ],
  [
    1090,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1087,
        0
      ],
      [
        1089,
        0
      ]
    ]
  ],
  [
    1091,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1090,
        0
      ]
    ]
  ],
  [
    1092,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1091,
        0
      ]
    ]
  ],
  [
    1093,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1092,
        0
      ]
    ]
  ],
  [
    1094,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1086,
        0
      ],
      [
        1093,
        0
      ]
    ]
  ],
  [
    1102,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2857,
        0
      ]
    ]
  ],
  [
    1098,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1097,
        0
      ]
    ]
  ],
  [
    1095,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1094,
        0
      ],
      [
        1094,
        0
      ]
    ]
  ],
  [
    1096,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1095,
        0
      ]
    ]
  ],
  [
    1099,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1096,
        0
      ],
      [
        1098,
        0
      ]
    ]
  ],
  [
    1100,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1099,
        0
      ]
    ]
  ],
  [
    1103,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1100,
        0
      ],
      [
        1102,
        0
      ]
    ]
  ],
  [
    1104,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1103,
        0
      ]
    ]
  ],
  [
    1105,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1104,
        0
      ]
    ]
  ],
  [
    1106,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1105,
        0
      ]
    ]
  ],
  [
    1107,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1094,
        0
      ],
      [
        1106,
        0
      ]
    ]
  ],
  [
    1109,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1107,
        0
      ],
      [
        1108,
        0
      ]
    ]
  ],
  [
    1111,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1109,
        0
      ],
      [
        1110,
        0
      ]
    ]
  ],
  [
    1117,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        52,
        0
      ]
    ]
  ],
  [
    1113,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        50,
        0
      ]
    ]
  ],
  [
    1112,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1111,
        0
      ],
      [
        7,
        0
      ]
    ]
  ],
  [
    1114,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1113,
        0
      ],
      [
        1112,
        0
      ]
    ]
  ],
  [
    1115,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1114,
        0
      ]
    ]
  ],
  [
    1116,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1115,
        0
      ],
      [
        346,
        0
      ]
    ]
  ],
  [
    1118,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1117,
        0
      ],
      [
        1116,
        0
      ]
    ]
  ],
  [
    1119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1118,
        0
      ],
      [
        1111,
        0
      ]
    ]
  ],
  [
    1122,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1121,
        0
      ]
    ]
  ],
  [
    1120,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1119,
        0
      ]
    ]
  ],
  [
    1123,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1120,
        0
      ],
      [
        1122,
        0
      ]
    ]
  ],
  [
    1124,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1123,
        0
      ]
    ]
  ],
  [
    1125,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1124,
        0
      ]
    ]
  ],
  [
    1126,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1125,
        0
      ]
    ]
  ],
  [
    1127,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1119,
        0
      ],
      [
        1126,
        0
      ]
    ]
  ],
  [
    1135,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2858,
        0
      ]
    ]
  ],
  [
    1131,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1130,
        0
      ]
    ]
  ],
  [
    1128,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1127,
        0
      ],
      [
        1127,
        0
      ]
    ]
  ],
  [
    1129,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1128,
        0
      ]
    ]
  ],
  [
    1132,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1129,
        0
      ],
      [
        1131,
        0
      ]
    ]
  ],
  [
    1133,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1132,
        0
      ]
    ]
  ],
  [
    1136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1133,
        0
      ],
      [
        1135,
        0
      ]
    ]
  ],
  [
    1137,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1136,
        0
      ]
    ]
  ],
  [
    1138,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1137,
        0
      ]
    ]
  ],
  [
    1139,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1138,
        0
      ]
    ]
  ],
  [
    1140,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1127,
        0
      ],
      [
        1139,
        0
      ]
    ]
  ],
  [
    1142,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1140,
        0
      ],
      [
        1141,
        0
      ]
    ]
  ],
  [
    1144,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1142,
        0
      ],
      [
        1143,
        0
      ]
    ]
  ],
  [
    1178,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        56,
        0
      ]
    ]
  ],
  [
    1146,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        54,
        0
      ]
    ]
  ],
  [
    1145,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1144,
        0
      ],
      [
        463,
        0
      ]
    ]
  ],
  [
    1147,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1146,
        0
      ],
      [
        1145,
        0
      ]
    ]
  ],
  [
    1166,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1147,
        0
      ]
    ]
  ],
  [
    1167,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1166,
        0
      ]
    ]
  ],
  [
    1168,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1167,
        0
      ]
    ]
  ],
  [
    1162,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1163,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1162,
        0
      ]
    ]
  ],
  [
    1160,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        385,
        0
      ]
    ]
  ],
  [
    1148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1147,
        0
      ]
    ]
  ],
  [
    1149,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1148,
        0
      ]
    ]
  ],
  [
    1150,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1149,
        0
      ]
    ]
  ],
  [
    1151,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1147,
        0
      ]
    ]
  ],
  [
    1152,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1151,
        0
      ]
    ]
  ],
  [
    1153,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1152,
        0
      ]
    ]
  ],
  [
    1158,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1153,
        0
      ],
      [
        1150,
        0
      ]
    ]
  ],
  [
    1161,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1158,
        0
      ],
      [
        1160,
        0
      ]
    ]
  ],
  [
    1164,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1161,
        0
      ],
      [
        1163,
        0
      ]
    ]
  ],
  [
    2919,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1164,
        0
      ]
    ]
  ],
  [
    2920,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1164,
        0
      ],
      [
        2919,
        0
      ]
    ]
  ],
  [
    2921,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2920,
        0
      ]
    ]
  ],
  [
    2922,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2920,
        0
      ],
      [
        2921,
        0
      ]
    ]
  ],
  [
    1173,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2922,
        0
      ],
      [
        1168,
        0
      ]
    ]
  ],
  [
    1175,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1173,
        0
      ]
    ]
  ],
  [
    1176,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1175,
        0
      ]
    ]
  ],
  [
    1177,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1176,
        0
      ],
      [
        353,
        0
      ]
    ]
  ],
  [
    1179,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1178,
        0
      ],
      [
        1177,
        0
      ]
    ]
  ],
  [
    1180,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1179,
        0
      ],
      [
        1144,
        0
      ]
    ]
  ],
  [
    1183,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1182,
        0
      ]
    ]
  ],
  [
    1181,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1180,
        0
      ]
    ]
  ],
  [
    1184,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1181,
        0
      ],
      [
        1183,
        0
      ]
    ]
  ],
  [
    1185,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1184,
        0
      ]
    ]
  ],
  [
    1186,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1185,
        0
      ]
    ]
  ],
  [
    1187,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1186,
        0
      ]
    ]
  ],
  [
    1188,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1180,
        0
      ],
      [
        1187,
        0
      ]
    ]
  ],
  [
    1196,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2859,
        0
      ]
    ]
  ],
  [
    1192,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1191,
        0
      ]
    ]
  ],
  [
    1189,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1188,
        0
      ],
      [
        1188,
        0
      ]
    ]
  ],
  [
    1190,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1189,
        0
      ]
    ]
  ],
  [
    1193,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1190,
        0
      ],
      [
        1192,
        0
      ]
    ]
  ],
  [
    1194,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1193,
        0
      ]
    ]
  ],
  [
    1197,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1194,
        0
      ],
      [
        1196,
        0
      ]
    ]
  ],
  [
    1198,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1197,
        0
      ]
    ]
  ],
  [
    1199,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1198,
        0
      ]
    ]
  ],
  [
    1200,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1199,
        0
      ]
    ]
  ],
  [
    1201,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1188,
        0
      ],
      [
        1200,
        0
      ]
    ]
  ],
  [
    1203,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1201,
        0
      ],
      [
        1202,
        0
      ]
    ]
  ],
  [
    1205,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1203,
        0
      ],
      [
        1204,
        0
      ]
    ]
  ],
  [
    1211,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        60,
        0
      ]
    ]
  ],
  [
    1207,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        58,
        0
      ]
    ]
  ],
  [
    1206,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1205,
        0
      ],
      [
        405,
        0
      ]
    ]
  ],
  [
    1208,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1207,
        0
      ],
      [
        1206,
        0
      ]
    ]
  ],
  [
    1209,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1208,
        0
      ]
    ]
  ],
  [
    1210,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1209,
        0
      ],
      [
        413,
        0
      ]
    ]
  ],
  [
    1212,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1211,
        0
      ],
      [
        1210,
        0
      ]
    ]
  ],
  [
    1213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1212,
        0
      ],
      [
        1205,
        0
      ]
    ]
  ],
  [
    1216,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1215,
        0
      ]
    ]
  ],
  [
    1214,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1213,
        0
      ]
    ]
  ],
  [
    1217,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1214,
        0
      ],
      [
        1216,
        0
      ]
    ]
  ],
  [
    1218,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1217,
        0
      ]
    ]
  ],
  [
    1219,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1218,
        0
      ]
    ]
  ],
  [
    1220,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1219,
        0
      ]
    ]
  ],
  [
    1221,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1213,
        0
      ],
      [
        1220,
        0
      ]
    ]
  ],
  [
    1229,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2860,
        0
      ]
    ]
  ],
  [
    1225,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1224,
        0
      ]
    ]
  ],
  [
    1222,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1221,
        0
      ],
      [
        1221,
        0
      ]
    ]
  ],
  [
    1223,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1222,
        0
      ]
    ]
  ],
  [
    1226,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1223,
        0
      ],
      [
        1225,
        0
      ]
    ]
  ],
  [
    1227,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1226,
        0
      ]
    ]
  ],
  [
    1230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1227,
        0
      ],
      [
        1229,
        0
      ]
    ]
  ],
  [
    1231,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1230,
        0
      ]
    ]
  ],
  [
    1232,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1231,
        0
      ]
    ]
  ],
  [
    1233,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1232,
        0
      ]
    ]
  ],
  [
    1234,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1221,
        0
      ],
      [
        1233,
        0
      ]
    ]
  ],
  [
    1236,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1234,
        0
      ],
      [
        1235,
        0
      ]
    ]
  ],
  [
    1238,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1236,
        0
      ],
      [
        1237,
        0
      ]
    ]
  ],
  [
    1272,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        64,
        0
      ]
    ]
  ],
  [
    1240,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        62,
        0
      ]
    ]
  ],
  [
    1239,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1238,
        0
      ],
      [
        433,
        0
      ]
    ]
  ],
  [
    1241,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1240,
        0
      ],
      [
        1239,
        0
      ]
    ]
  ],
  [
    1260,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1241,
        0
      ]
    ]
  ],
  [
    1261,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1260,
        0
      ]
    ]
  ],
  [
    1262,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1261,
        0
      ]
    ]
  ],
  [
    1256,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1257,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1256,
        0
      ]
    ]
  ],
  [
    1254,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        412,
        0
      ]
    ]
  ],
  [
    1242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1241,
        0
      ]
    ]
  ],
  [
    1243,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1242,
        0
      ]
    ]
  ],
  [
    1244,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1243,
        0
      ]
    ]
  ],
  [
    1245,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1241,
        0
      ]
    ]
  ],
  [
    1246,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1245,
        0
      ]
    ]
  ],
  [
    1247,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1246,
        0
      ]
    ]
  ],
  [
    1252,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1247,
        0
      ],
      [
        1244,
        0
      ]
    ]
  ],
  [
    1255,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1252,
        0
      ],
      [
        1254,
        0
      ]
    ]
  ],
  [
    1258,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1255,
        0
      ],
      [
        1257,
        0
      ]
    ]
  ],
  [
    2923,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1258,
        0
      ]
    ]
  ],
  [
    2924,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1258,
        0
      ],
      [
        2923,
        0
      ]
    ]
  ],
  [
    2925,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2924,
        0
      ]
    ]
  ],
  [
    2926,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2924,
        0
      ],
      [
        2925,
        0
      ]
    ]
  ],
  [
    1267,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2926,
        0
      ],
      [
        1262,
        0
      ]
    ]
  ],
  [
    1269,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1267,
        0
      ]
    ]
  ],
  [
    1270,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1269,
        0
      ]
    ]
  ],
  [
    1271,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1270,
        0
      ],
      [
        161,
        0
      ]
    ]
  ],
  [
    1273,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1272,
        0
      ],
      [
        1271,
        0
      ]
    ]
  ],
  [
    1274,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1273,
        0
      ],
      [
        1238,
        0
      ]
    ]
  ],
  [
    1277,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1276,
        0
      ]
    ]
  ],
  [
    1275,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1274,
        0
      ]
    ]
  ],
  [
    1278,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1275,
        0
      ],
      [
        1277,
        0
      ]
    ]
  ],
  [
    1279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1278,
        0
      ]
    ]
  ],
  [
    1280,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1279,
        0
      ]
    ]
  ],
  [
    1281,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1280,
        0
      ]
    ]
  ],
  [
    1282,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1274,
        0
      ],
      [
        1281,
        0
      ]
    ]
  ],
  [
    1290,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2861,
        0
      ]
    ]
  ],
  [
    1286,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1285,
        0
      ]
    ]
  ],
  [
    1283,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1282,
        0
      ],
      [
        1282,
        0
      ]
    ]
  ],
  [
    1284,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1283,
        0
      ]
    ]
  ],
  [
    1287,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1284,
        0
      ],
      [
        1286,
        0
      ]
    ]
  ],
  [
    1288,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1287,
        0
      ]
    ]
  ],
  [
    1291,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1288,
        0
      ],
      [
        1290,
        0
      ]
    ]
  ],
  [
    1292,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1291,
        0
      ]
    ]
  ],
  [
    1293,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1292,
        0
      ]
    ]
  ],
  [
    1294,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1293,
        0
      ]
    ]
  ],
  [
    1295,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1282,
        0
      ],
      [
        1294,
        0
      ]
    ]
  ],
  [
    1297,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1295,
        0
      ],
      [
        1296,
        0
      ]
    ]
  ],
  [
    1299,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1297,
        0
      ],
      [
        1298,
        0
      ]
    ]
  ],
  [
    1305,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        68,
        0
      ]
    ]
  ],
  [
    1301,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        66,
        0
      ]
    ]
  ],
  [
    1300,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1299,
        0
      ],
      [
        61,
        0
      ]
    ]
  ],
  [
    1302,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1301,
        0
      ],
      [
        1300,
        0
      ]
    ]
  ],
  [
    1303,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1302,
        0
      ]
    ]
  ],
  [
    1304,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1303,
        0
      ],
      [
        291,
        0
      ]
    ]
  ],
  [
    1306,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1305,
        0
      ],
      [
        1304,
        0
      ]
    ]
  ],
  [
    1307,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1306,
        0
      ],
      [
        1299,
        0
      ]
    ]
  ],
  [
    1310,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1309,
        0
      ]
    ]
  ],
  [
    1308,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1307,
        0
      ]
    ]
  ],
  [
    1311,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1308,
        0
      ],
      [
        1310,
        0
      ]
    ]
  ],
  [
    1312,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1311,
        0
      ]
    ]
  ],
  [
    1313,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1312,
        0
      ]
    ]
  ],
  [
    1314,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1313,
        0
      ]
    ]
  ],
  [
    1315,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1307,
        0
      ],
      [
        1314,
        0
      ]
    ]
  ],
  [
    1323,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2862,
        0
      ]
    ]
  ],
  [
    1319,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1318,
        0
      ]
    ]
  ],
  [
    1316,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1315,
        0
      ],
      [
        1315,
        0
      ]
    ]
  ],
  [
    1317,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1316,
        0
      ]
    ]
  ],
  [
    1320,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1317,
        0
      ],
      [
        1319,
        0
      ]
    ]
  ],
  [
    1321,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1320,
        0
      ]
    ]
  ],
  [
    1324,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1321,
        0
      ],
      [
        1323,
        0
      ]
    ]
  ],
  [
    1325,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1324,
        0
      ]
    ]
  ],
  [
    1326,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1325,
        0
      ]
    ]
  ],
  [
    1327,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1326,
        0
      ]
    ]
  ],
  [
    1328,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1315,
        0
      ],
      [
        1327,
        0
      ]
    ]
  ],
  [
    1330,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1328,
        0
      ],
      [
        1329,
        0
      ]
    ]
  ],
  [
    1332,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1330,
        0
      ],
      [
        1331,
        0
      ]
    ]
  ],
  [
    1366,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        72,
        0
      ]
    ]
  ],
  [
    1334,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        70,
        0
      ]
    ]
  ],
  [
    1333,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1332,
        0
      ],
      [
        484,
        0
      ]
    ]
  ],
  [
    1335,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1334,
        0
      ],
      [
        1333,
        0
      ]
    ]
  ],
  [
    1354,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1335,
        0
      ]
    ]
  ],
  [
    1355,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1354,
        0
      ]
    ]
  ],
  [
    1356,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1355,
        0
      ]
    ]
  ],
  [
    1350,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1351,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1350,
        0
      ]
    ]
  ],
  [
    1348,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        439,
        0
      ]
    ]
  ],
  [
    1336,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1335,
        0
      ]
    ]
  ],
  [
    1337,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1336,
        0
      ]
    ]
  ],
  [
    1338,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1337,
        0
      ]
    ]
  ],
  [
    1339,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1335,
        0
      ]
    ]
  ],
  [
    1340,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1339,
        0
      ]
    ]
  ],
  [
    1341,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1340,
        0
      ]
    ]
  ],
  [
    1346,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1341,
        0
      ],
      [
        1338,
        0
      ]
    ]
  ],
  [
    1349,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1346,
        0
      ],
      [
        1348,
        0
      ]
    ]
  ],
  [
    1352,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1349,
        0
      ],
      [
        1351,
        0
      ]
    ]
  ],
  [
    2927,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1352,
        0
      ]
    ]
  ],
  [
    2928,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1352,
        0
      ],
      [
        2927,
        0
      ]
    ]
  ],
  [
    2929,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2928,
        0
      ]
    ]
  ],
  [
    2930,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2928,
        0
      ],
      [
        2929,
        0
      ]
    ]
  ],
  [
    1361,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2930,
        0
      ],
      [
        1356,
        0
      ]
    ]
  ],
  [
    1363,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1361,
        0
      ]
    ]
  ],
  [
    1364,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1363,
        0
      ]
    ]
  ],
  [
    1365,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1364,
        0
      ],
      [
        59,
        0
      ]
    ]
  ],
  [
    1367,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1366,
        0
      ],
      [
        1365,
        0
      ]
    ]
  ],
  [
    1368,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1367,
        0
      ],
      [
        1332,
        0
      ]
    ]
  ],
  [
    1371,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1370,
        0
      ]
    ]
  ],
  [
    1369,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1368,
        0
      ]
    ]
  ],
  [
    1372,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1369,
        0
      ],
      [
        1371,
        0
      ]
    ]
  ],
  [
    1373,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1372,
        0
      ]
    ]
  ],
  [
    1374,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1373,
        0
      ]
    ]
  ],
  [
    1375,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1374,
        0
      ]
    ]
  ],
  [
    1376,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1368,
        0
      ],
      [
        1375,
        0
      ]
    ]
  ],
  [
    1384,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2863,
        0
      ]
    ]
  ],
  [
    1380,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1379,
        0
      ]
    ]
  ],
  [
    1377,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1376,
        0
      ],
      [
        1376,
        0
      ]
    ]
  ],
  [
    1378,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1377,
        0
      ]
    ]
  ],
  [
    1381,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1378,
        0
      ],
      [
        1380,
        0
      ]
    ]
  ],
  [
    1382,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1381,
        0
      ]
    ]
  ],
  [
    1385,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1382,
        0
      ],
      [
        1384,
        0
      ]
    ]
  ],
  [
    1386,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1385,
        0
      ]
    ]
  ],
  [
    1387,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1386,
        0
      ]
    ]
  ],
  [
    1388,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1387,
        0
      ]
    ]
  ],
  [
    1389,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1376,
        0
      ],
      [
        1388,
        0
      ]
    ]
  ],
  [
    1391,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1389,
        0
      ],
      [
        1390,
        0
      ]
    ]
  ],
  [
    1393,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1391,
        0
      ],
      [
        1392,
        0
      ]
    ]
  ],
  [
    1399,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        76,
        0
      ]
    ]
  ],
  [
    1395,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        74,
        0
      ]
    ]
  ],
  [
    1394,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1393,
        0
      ],
      [
        81,
        0
      ]
    ]
  ],
  [
    1396,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1395,
        0
      ],
      [
        1394,
        0
      ]
    ]
  ],
  [
    1397,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1396,
        0
      ]
    ]
  ],
  [
    1398,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1397,
        0
      ],
      [
        17,
        0
      ]
    ]
  ],
  [
    1400,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1399,
        0
      ],
      [
        1398,
        0
      ]
    ]
  ],
  [
    1401,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1400,
        0
      ],
      [
        1393,
        0
      ]
    ]
  ],
  [
    1404,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1403,
        0
      ]
    ]
  ],
  [
    1402,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1401,
        0
      ]
    ]
  ],
  [
    1405,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1402,
        0
      ],
      [
        1404,
        0
      ]
    ]
  ],
  [
    1406,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1405,
        0
      ]
    ]
  ],
  [
    1407,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1406,
        0
      ]
    ]
  ],
  [
    1408,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1407,
        0
      ]
    ]
  ],
  [
    1409,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1401,
        0
      ],
      [
        1408,
        0
      ]
    ]
  ],
  [
    1417,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2864,
        0
      ]
    ]
  ],
  [
    1413,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1412,
        0
      ]
    ]
  ],
  [
    1410,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1409,
        0
      ],
      [
        1409,
        0
      ]
    ]
  ],
  [
    1411,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1410,
        0
      ]
    ]
  ],
  [
    1414,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1411,
        0
      ],
      [
        1413,
        0
      ]
    ]
  ],
  [
    1415,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1414,
        0
      ]
    ]
  ],
  [
    1418,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1415,
        0
      ],
      [
        1417,
        0
      ]
    ]
  ],
  [
    1419,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1418,
        0
      ]
    ]
  ],
  [
    1420,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1419,
        0
      ]
    ]
  ],
  [
    1421,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1420,
        0
      ]
    ]
  ],
  [
    1422,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1409,
        0
      ],
      [
        1421,
        0
      ]
    ]
  ],
  [
    1424,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1422,
        0
      ],
      [
        1423,
        0
      ]
    ]
  ],
  [
    1426,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1424,
        0
      ],
      [
        1425,
        0
      ]
    ]
  ],
  [
    1460,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        80,
        0
      ]
    ]
  ],
  [
    1428,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        78,
        0
      ]
    ]
  ],
  [
    1427,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1426,
        0
      ],
      [
        216,
        0
      ]
    ]
  ],
  [
    1429,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1428,
        0
      ],
      [
        1427,
        0
      ]
    ]
  ],
  [
    1448,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1429,
        0
      ]
    ]
  ],
  [
    1449,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1448,
        0
      ]
    ]
  ],
  [
    1450,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1449,
        0
      ]
    ]
  ],
  [
    1444,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1445,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1444,
        0
      ]
    ]
  ],
  [
    1442,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        466,
        0
      ]
    ]
  ],
  [
    1430,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1429,
        0
      ]
    ]
  ],
  [
    1431,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1430,
        0
      ]
    ]
  ],
  [
    1432,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1431,
        0
      ]
    ]
  ],
  [
    1433,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1429,
        0
      ]
    ]
  ],
  [
    1434,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1433,
        0
      ]
    ]
  ],
  [
    1435,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1434,
        0
      ]
    ]
  ],
  [
    1440,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1435,
        0
      ],
      [
        1432,
        0
      ]
    ]
  ],
  [
    1443,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1440,
        0
      ],
      [
        1442,
        0
      ]
    ]
  ],
  [
    1446,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1443,
        0
      ],
      [
        1445,
        0
      ]
    ]
  ],
  [
    2931,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1446,
        0
      ]
    ]
  ],
  [
    2932,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1446,
        0
      ],
      [
        2931,
        0
      ]
    ]
  ],
  [
    2933,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2932,
        0
      ]
    ]
  ],
  [
    2934,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2932,
        0
      ],
      [
        2933,
        0
      ]
    ]
  ],
  [
    1455,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2934,
        0
      ],
      [
        1450,
        0
      ]
    ]
  ],
  [
    1457,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1455,
        0
      ]
    ]
  ],
  [
    1458,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1457,
        0
      ]
    ]
  ],
  [
    1459,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1458,
        0
      ],
      [
        530,
        0
      ]
    ]
  ],
  [
    1461,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1460,
        0
      ],
      [
        1459,
        0
      ]
    ]
  ],
  [
    1462,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1461,
        0
      ],
      [
        1426,
        0
      ]
    ]
  ],
  [
    1465,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1464,
        0
      ]
    ]
  ],
  [
    1463,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1462,
        0
      ]
    ]
  ],
  [
    1466,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1463,
        0
      ],
      [
        1465,
        0
      ]
    ]
  ],
  [
    1467,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1466,
        0
      ]
    ]
  ],
  [
    1468,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1467,
        0
      ]
    ]
  ],
  [
    1469,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1468,
        0
      ]
    ]
  ],
  [
    1470,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1462,
        0
      ],
      [
        1469,
        0
      ]
    ]
  ],
  [
    1478,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2865,
        0
      ]
    ]
  ],
  [
    1474,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1473,
        0
      ]
    ]
  ],
  [
    1471,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1470,
        0
      ],
      [
        1470,
        0
      ]
    ]
  ],
  [
    1472,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1471,
        0
      ]
    ]
  ],
  [
    1475,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1472,
        0
      ],
      [
        1474,
        0
      ]
    ]
  ],
  [
    1476,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1475,
        0
      ]
    ]
  ],
  [
    1479,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1476,
        0
      ],
      [
        1478,
        0
      ]
    ]
  ],
  [
    1480,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1479,
        0
      ]
    ]
  ],
  [
    1481,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1480,
        0
      ]
    ]
  ],
  [
    1482,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1481,
        0
      ]
    ]
  ],
  [
    1483,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1470,
        0
      ],
      [
        1482,
        0
      ]
    ]
  ],
  [
    1485,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1483,
        0
      ],
      [
        1484,
        0
      ]
    ]
  ],
  [
    1487,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1485,
        0
      ],
      [
        1486,
        0
      ]
    ]
  ],
  [
    1493,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        84,
        0
      ]
    ]
  ],
  [
    1489,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        82,
        0
      ]
    ]
  ],
  [
    1488,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1487,
        0
      ],
      [
        21,
        0
      ]
    ]
  ],
  [
    1490,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1489,
        0
      ],
      [
        1488,
        0
      ]
    ]
  ],
  [
    1491,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1490,
        0
      ]
    ]
  ],
  [
    1492,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1491,
        0
      ],
      [
        306,
        0
      ]
    ]
  ],
  [
    1494,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1493,
        0
      ],
      [
        1492,
        0
      ]
    ]
  ],
  [
    1495,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1494,
        0
      ],
      [
        1487,
        0
      ]
    ]
  ],
  [
    1498,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1497,
        0
      ]
    ]
  ],
  [
    1496,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1495,
        0
      ]
    ]
  ],
  [
    1499,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1496,
        0
      ],
      [
        1498,
        0
      ]
    ]
  ],
  [
    1500,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1499,
        0
      ]
    ]
  ],
  [
    1501,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1500,
        0
      ]
    ]
  ],
  [
    1502,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1501,
        0
      ]
    ]
  ],
  [
    1503,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1495,
        0
      ],
      [
        1502,
        0
      ]
    ]
  ],
  [
    1511,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2866,
        0
      ]
    ]
  ],
  [
    1507,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1506,
        0
      ]
    ]
  ],
  [
    1504,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1503,
        0
      ],
      [
        1503,
        0
      ]
    ]
  ],
  [
    1505,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1504,
        0
      ]
    ]
  ],
  [
    1508,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1505,
        0
      ],
      [
        1507,
        0
      ]
    ]
  ],
  [
    1509,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1508,
        0
      ]
    ]
  ],
  [
    1512,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1509,
        0
      ],
      [
        1511,
        0
      ]
    ]
  ],
  [
    1513,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1512,
        0
      ]
    ]
  ],
  [
    1514,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1513,
        0
      ]
    ]
  ],
  [
    1515,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1514,
        0
      ]
    ]
  ],
  [
    1516,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1503,
        0
      ],
      [
        1515,
        0
      ]
    ]
  ],
  [
    1518,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1516,
        0
      ],
      [
        1517,
        0
      ]
    ]
  ],
  [
    1520,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1518,
        0
      ],
      [
        1519,
        0
      ]
    ]
  ],
  [
    1554,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        88,
        0
      ]
    ]
  ],
  [
    1522,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        86,
        0
      ]
    ]
  ],
  [
    1521,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1520,
        0
      ],
      [
        512,
        0
      ]
    ]
  ],
  [
    1523,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1522,
        0
      ],
      [
        1521,
        0
      ]
    ]
  ],
  [
    1542,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1523,
        0
      ]
    ]
  ],
  [
    1543,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1542,
        0
      ]
    ]
  ],
  [
    1544,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1543,
        0
      ]
    ]
  ],
  [
    1538,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1539,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1538,
        0
      ]
    ]
  ],
  [
    1536,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        493,
        0
      ]
    ]
  ],
  [
    1524,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1523,
        0
      ]
    ]
  ],
  [
    1525,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1524,
        0
      ]
    ]
  ],
  [
    1526,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1525,
        0
      ]
    ]
  ],
  [
    1527,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1523,
        0
      ]
    ]
  ],
  [
    1528,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1527,
        0
      ]
    ]
  ],
  [
    1529,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1528,
        0
      ]
    ]
  ],
  [
    1534,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1529,
        0
      ],
      [
        1526,
        0
      ]
    ]
  ],
  [
    1537,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1534,
        0
      ],
      [
        1536,
        0
      ]
    ]
  ],
  [
    1540,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1537,
        0
      ],
      [
        1539,
        0
      ]
    ]
  ],
  [
    2935,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1540,
        0
      ]
    ]
  ],
  [
    2936,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1540,
        0
      ],
      [
        2935,
        0
      ]
    ]
  ],
  [
    2937,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2936,
        0
      ]
    ]
  ],
  [
    2938,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2936,
        0
      ],
      [
        2937,
        0
      ]
    ]
  ],
  [
    1549,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2938,
        0
      ],
      [
        1544,
        0
      ]
    ]
  ],
  [
    1551,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1549,
        0
      ]
    ]
  ],
  [
    1552,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1551,
        0
      ]
    ]
  ],
  [
    1553,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1552,
        0
      ],
      [
        121,
        0
      ]
    ]
  ],
  [
    1555,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1554,
        0
      ],
      [
        1553,
        0
      ]
    ]
  ],
  [
    1556,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1555,
        0
      ],
      [
        1520,
        0
      ]
    ]
  ],
  [
    1559,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1558,
        0
      ]
    ]
  ],
  [
    1557,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1556,
        0
      ]
    ]
  ],
  [
    1560,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1557,
        0
      ],
      [
        1559,
        0
      ]
    ]
  ],
  [
    1561,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1560,
        0
      ]
    ]
  ],
  [
    1562,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1561,
        0
      ]
    ]
  ],
  [
    1563,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1562,
        0
      ]
    ]
  ],
  [
    1564,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1556,
        0
      ],
      [
        1563,
        0
      ]
    ]
  ],
  [
    1572,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2867,
        0
      ]
    ]
  ],
  [
    1568,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1567,
        0
      ]
    ]
  ],
  [
    1565,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1564,
        0
      ],
      [
        1564,
        0
      ]
    ]
  ],
  [
    1566,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1565,
        0
      ]
    ]
  ],
  [
    1569,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1566,
        0
      ],
      [
        1568,
        0
      ]
    ]
  ],
  [
    1570,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1569,
        0
      ]
    ]
  ],
  [
    1573,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1570,
        0
      ],
      [
        1572,
        0
      ]
    ]
  ],
  [
    1574,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1573,
        0
      ]
    ]
  ],
  [
    1575,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1574,
        0
      ]
    ]
  ],
  [
    1576,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1575,
        0
      ]
    ]
  ],
  [
    1577,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1564,
        0
      ],
      [
        1576,
        0
      ]
    ]
  ],
  [
    1579,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1577,
        0
      ],
      [
        1578,
        0
      ]
    ]
  ],
  [
    1581,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1579,
        0
      ],
      [
        1580,
        0
      ]
    ]
  ],
  [
    1587,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        92,
        0
      ]
    ]
  ],
  [
    1583,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        90,
        0
      ]
    ]
  ],
  [
    1582,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1581,
        0
      ],
      [
        181,
        0
      ]
    ]
  ],
  [
    1584,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1583,
        0
      ],
      [
        1582,
        0
      ]
    ]
  ],
  [
    1585,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1584,
        0
      ]
    ]
  ],
  [
    1586,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1585,
        0
      ],
      [
        71,
        0
      ]
    ]
  ],
  [
    1588,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1587,
        0
      ],
      [
        1586,
        0
      ]
    ]
  ],
  [
    1589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1588,
        0
      ],
      [
        1581,
        0
      ]
    ]
  ],
  [
    1592,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1591,
        0
      ]
    ]
  ],
  [
    1590,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1589,
        0
      ]
    ]
  ],
  [
    1593,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1590,
        0
      ],
      [
        1592,
        0
      ]
    ]
  ],
  [
    1594,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1593,
        0
      ]
    ]
  ],
  [
    1595,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1594,
        0
      ]
    ]
  ],
  [
    1596,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1595,
        0
      ]
    ]
  ],
  [
    1597,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1589,
        0
      ],
      [
        1596,
        0
      ]
    ]
  ],
  [
    1605,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2868,
        0
      ]
    ]
  ],
  [
    1601,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1600,
        0
      ]
    ]
  ],
  [
    1598,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1597,
        0
      ],
      [
        1597,
        0
      ]
    ]
  ],
  [
    1599,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1598,
        0
      ]
    ]
  ],
  [
    1602,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1599,
        0
      ],
      [
        1601,
        0
      ]
    ]
  ],
  [
    1603,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1602,
        0
      ]
    ]
  ],
  [
    1606,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1603,
        0
      ],
      [
        1605,
        0
      ]
    ]
  ],
  [
    1607,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1606,
        0
      ]
    ]
  ],
  [
    1608,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1607,
        0
      ]
    ]
  ],
  [
    1609,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1608,
        0
      ]
    ]
  ],
  [
    1610,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1597,
        0
      ],
      [
        1609,
        0
      ]
    ]
  ],
  [
    1612,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1610,
        0
      ],
      [
        1611,
        0
      ]
    ]
  ],
  [
    1614,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1612,
        0
      ],
      [
        1613,
        0
      ]
    ]
  ],
  [
    1648,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        96,
        0
      ]
    ]
  ],
  [
    1616,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        94,
        0
      ]
    ]
  ],
  [
    1615,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1614,
        0
      ],
      [
        480,
        0
      ]
    ]
  ],
  [
    1617,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1616,
        0
      ],
      [
        1615,
        0
      ]
    ]
  ],
  [
    1636,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1617,
        0
      ]
    ]
  ],
  [
    1637,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1636,
        0
      ]
    ]
  ],
  [
    1638,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1637,
        0
      ]
    ]
  ],
  [
    1632,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1633,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1632,
        0
      ]
    ]
  ],
  [
    1630,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        520,
        0
      ]
    ]
  ],
  [
    1618,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1617,
        0
      ]
    ]
  ],
  [
    1619,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1618,
        0
      ]
    ]
  ],
  [
    1620,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1619,
        0
      ]
    ]
  ],
  [
    1621,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1617,
        0
      ]
    ]
  ],
  [
    1622,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1621,
        0
      ]
    ]
  ],
  [
    1623,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1622,
        0
      ]
    ]
  ],
  [
    1628,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1623,
        0
      ],
      [
        1620,
        0
      ]
    ]
  ],
  [
    1631,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1628,
        0
      ],
      [
        1630,
        0
      ]
    ]
  ],
  [
    1634,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1631,
        0
      ],
      [
        1633,
        0
      ]
    ]
  ],
  [
    2939,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1634,
        0
      ]
    ]
  ],
  [
    2940,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1634,
        0
      ],
      [
        2939,
        0
      ]
    ]
  ],
  [
    2941,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2940,
        0
      ]
    ]
  ],
  [
    2942,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2940,
        0
      ],
      [
        2941,
        0
      ]
    ]
  ],
  [
    1643,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2942,
        0
      ],
      [
        1638,
        0
      ]
    ]
  ],
  [
    1645,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1643,
        0
      ]
    ]
  ],
  [
    1646,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1645,
        0
      ]
    ]
  ],
  [
    1647,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1646,
        0
      ],
      [
        343,
        0
      ]
    ]
  ],
  [
    1649,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1648,
        0
      ],
      [
        1647,
        0
      ]
    ]
  ],
  [
    1650,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1649,
        0
      ],
      [
        1614,
        0
      ]
    ]
  ],
  [
    1653,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1652,
        0
      ]
    ]
  ],
  [
    1651,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1650,
        0
      ]
    ]
  ],
  [
    1654,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1651,
        0
      ],
      [
        1653,
        0
      ]
    ]
  ],
  [
    1655,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1654,
        0
      ]
    ]
  ],
  [
    1656,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1655,
        0
      ]
    ]
  ],
  [
    1657,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1656,
        0
      ]
    ]
  ],
  [
    1658,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1650,
        0
      ],
      [
        1657,
        0
      ]
    ]
  ],
  [
    1666,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2869,
        0
      ]
    ]
  ],
  [
    1662,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1661,
        0
      ]
    ]
  ],
  [
    1659,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1658,
        0
      ],
      [
        1658,
        0
      ]
    ]
  ],
  [
    1660,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1659,
        0
      ]
    ]
  ],
  [
    1663,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1660,
        0
      ],
      [
        1662,
        0
      ]
    ]
  ],
  [
    1664,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1663,
        0
      ]
    ]
  ],
  [
    1667,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1664,
        0
      ],
      [
        1666,
        0
      ]
    ]
  ],
  [
    1668,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1667,
        0
      ]
    ]
  ],
  [
    1669,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1668,
        0
      ]
    ]
  ],
  [
    1670,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1669,
        0
      ]
    ]
  ],
  [
    1671,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1658,
        0
      ],
      [
        1670,
        0
      ]
    ]
  ],
  [
    1673,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1671,
        0
      ],
      [
        1672,
        0
      ]
    ]
  ],
  [
    1675,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1673,
        0
      ],
      [
        1674,
        0
      ]
    ]
  ],
  [
    1681,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        100,
        0
      ]
    ]
  ],
  [
    1677,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        98,
        0
      ]
    ]
  ],
  [
    1676,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1675,
        0
      ],
      [
        157,
        0
      ]
    ]
  ],
  [
    1678,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1677,
        0
      ],
      [
        1676,
        0
      ]
    ]
  ],
  [
    1679,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1678,
        0
      ]
    ]
  ],
  [
    1680,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1679,
        0
      ],
      [
        27,
        0
      ]
    ]
  ],
  [
    1682,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1681,
        0
      ],
      [
        1680,
        0
      ]
    ]
  ],
  [
    1683,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1682,
        0
      ],
      [
        1675,
        0
      ]
    ]
  ],
  [
    1686,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1685,
        0
      ]
    ]
  ],
  [
    1684,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1683,
        0
      ]
    ]
  ],
  [
    1687,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1684,
        0
      ],
      [
        1686,
        0
      ]
    ]
  ],
  [
    1688,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1687,
        0
      ]
    ]
  ],
  [
    1689,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1688,
        0
      ]
    ]
  ],
  [
    1690,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1689,
        0
      ]
    ]
  ],
  [
    1691,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1683,
        0
      ],
      [
        1690,
        0
      ]
    ]
  ],
  [
    1699,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2870,
        0
      ]
    ]
  ],
  [
    1695,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1694,
        0
      ]
    ]
  ],
  [
    1692,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1691,
        0
      ],
      [
        1691,
        0
      ]
    ]
  ],
  [
    1693,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1692,
        0
      ]
    ]
  ],
  [
    1696,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1693,
        0
      ],
      [
        1695,
        0
      ]
    ]
  ],
  [
    1697,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1696,
        0
      ]
    ]
  ],
  [
    1700,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1697,
        0
      ],
      [
        1699,
        0
      ]
    ]
  ],
  [
    1701,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1700,
        0
      ]
    ]
  ],
  [
    1702,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1701,
        0
      ]
    ]
  ],
  [
    1703,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1702,
        0
      ]
    ]
  ],
  [
    1704,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1691,
        0
      ],
      [
        1703,
        0
      ]
    ]
  ],
  [
    1706,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1704,
        0
      ],
      [
        1705,
        0
      ]
    ]
  ],
  [
    1708,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1706,
        0
      ],
      [
        1707,
        0
      ]
    ]
  ],
  [
    1742,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        104,
        0
      ]
    ]
  ],
  [
    1710,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        102,
        0
      ]
    ]
  ],
  [
    1709,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1708,
        0
      ],
      [
        129,
        0
      ]
    ]
  ],
  [
    1711,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1710,
        0
      ],
      [
        1709,
        0
      ]
    ]
  ],
  [
    1730,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1711,
        0
      ]
    ]
  ],
  [
    1731,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1730,
        0
      ]
    ]
  ],
  [
    1732,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1731,
        0
      ]
    ]
  ],
  [
    1726,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1727,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1726,
        0
      ]
    ]
  ],
  [
    1724,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        296,
        0
      ]
    ]
  ],
  [
    1712,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1711,
        0
      ]
    ]
  ],
  [
    1713,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1712,
        0
      ]
    ]
  ],
  [
    1714,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1713,
        0
      ]
    ]
  ],
  [
    1715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1711,
        0
      ]
    ]
  ],
  [
    1716,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1715,
        0
      ]
    ]
  ],
  [
    1717,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1716,
        0
      ]
    ]
  ],
  [
    1722,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1717,
        0
      ],
      [
        1714,
        0
      ]
    ]
  ],
  [
    1725,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1722,
        0
      ],
      [
        1724,
        0
      ]
    ]
  ],
  [
    1728,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1725,
        0
      ],
      [
        1727,
        0
      ]
    ]
  ],
  [
    2943,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1728,
        0
      ]
    ]
  ],
  [
    2944,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1728,
        0
      ],
      [
        2943,
        0
      ]
    ]
  ],
  [
    2945,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2944,
        0
      ]
    ]
  ],
  [
    2946,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2944,
        0
      ],
      [
        2945,
        0
      ]
    ]
  ],
  [
    1737,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2946,
        0
      ],
      [
        1732,
        0
      ]
    ]
  ],
  [
    1739,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1737,
        0
      ]
    ]
  ],
  [
    1740,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1739,
        0
      ]
    ]
  ],
  [
    1741,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1740,
        0
      ],
      [
        268,
        0
      ]
    ]
  ],
  [
    1743,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1742,
        0
      ],
      [
        1741,
        0
      ]
    ]
  ],
  [
    1744,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1743,
        0
      ],
      [
        1708,
        0
      ]
    ]
  ],
  [
    1747,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1746,
        0
      ]
    ]
  ],
  [
    1745,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1744,
        0
      ]
    ]
  ],
  [
    1748,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1745,
        0
      ],
      [
        1747,
        0
      ]
    ]
  ],
  [
    1749,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1748,
        0
      ]
    ]
  ],
  [
    1750,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1749,
        0
      ]
    ]
  ],
  [
    1751,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1750,
        0
      ]
    ]
  ],
  [
    1752,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1744,
        0
      ],
      [
        1751,
        0
      ]
    ]
  ],
  [
    1760,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2871,
        0
      ]
    ]
  ],
  [
    1756,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1755,
        0
      ]
    ]
  ],
  [
    1753,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1752,
        0
      ],
      [
        1752,
        0
      ]
    ]
  ],
  [
    1754,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1753,
        0
      ]
    ]
  ],
  [
    1757,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1754,
        0
      ],
      [
        1756,
        0
      ]
    ]
  ],
  [
    1758,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1757,
        0
      ]
    ]
  ],
  [
    1761,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1758,
        0
      ],
      [
        1760,
        0
      ]
    ]
  ],
  [
    1762,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1761,
        0
      ]
    ]
  ],
  [
    1763,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1762,
        0
      ]
    ]
  ],
  [
    1764,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1763,
        0
      ]
    ]
  ],
  [
    1765,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1752,
        0
      ],
      [
        1764,
        0
      ]
    ]
  ],
  [
    1767,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1765,
        0
      ],
      [
        1766,
        0
      ]
    ]
  ],
  [
    1769,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1767,
        0
      ],
      [
        1768,
        0
      ]
    ]
  ],
  [
    1775,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        108,
        0
      ]
    ]
  ],
  [
    1771,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        106,
        0
      ]
    ]
  ],
  [
    1770,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1769,
        0
      ],
      [
        341,
        0
      ]
    ]
  ],
  [
    1772,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1771,
        0
      ],
      [
        1770,
        0
      ]
    ]
  ],
  [
    1773,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1772,
        0
      ]
    ]
  ],
  [
    1774,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1773,
        0
      ],
      [
        361,
        0
      ]
    ]
  ],
  [
    1776,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1775,
        0
      ],
      [
        1774,
        0
      ]
    ]
  ],
  [
    1777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1776,
        0
      ],
      [
        1769,
        0
      ]
    ]
  ],
  [
    1780,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1779,
        0
      ]
    ]
  ],
  [
    1778,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1777,
        0
      ]
    ]
  ],
  [
    1781,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1778,
        0
      ],
      [
        1780,
        0
      ]
    ]
  ],
  [
    1782,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1781,
        0
      ]
    ]
  ],
  [
    1783,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1782,
        0
      ]
    ]
  ],
  [
    1784,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1783,
        0
      ]
    ]
  ],
  [
    1785,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1777,
        0
      ],
      [
        1784,
        0
      ]
    ]
  ],
  [
    1793,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2872,
        0
      ]
    ]
  ],
  [
    1789,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1788,
        0
      ]
    ]
  ],
  [
    1786,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1785,
        0
      ],
      [
        1785,
        0
      ]
    ]
  ],
  [
    1787,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1786,
        0
      ]
    ]
  ],
  [
    1790,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1787,
        0
      ],
      [
        1789,
        0
      ]
    ]
  ],
  [
    1791,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1790,
        0
      ]
    ]
  ],
  [
    1794,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1791,
        0
      ],
      [
        1793,
        0
      ]
    ]
  ],
  [
    1795,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1794,
        0
      ]
    ]
  ],
  [
    1796,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1795,
        0
      ]
    ]
  ],
  [
    1797,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1796,
        0
      ]
    ]
  ],
  [
    1798,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1785,
        0
      ],
      [
        1797,
        0
      ]
    ]
  ],
  [
    1800,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1798,
        0
      ],
      [
        1799,
        0
      ]
    ]
  ],
  [
    1802,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1800,
        0
      ],
      [
        1801,
        0
      ]
    ]
  ],
  [
    1836,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        112,
        0
      ]
    ]
  ],
  [
    1804,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        110,
        0
      ]
    ]
  ],
  [
    1803,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1802,
        0
      ],
      [
        153,
        0
      ]
    ]
  ],
  [
    1805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1804,
        0
      ],
      [
        1803,
        0
      ]
    ]
  ],
  [
    1824,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1805,
        0
      ]
    ]
  ],
  [
    1825,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1824,
        0
      ]
    ]
  ],
  [
    1826,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1825,
        0
      ]
    ]
  ],
  [
    1820,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1821,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1820,
        0
      ]
    ]
  ],
  [
    1818,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        241,
        0
      ]
    ]
  ],
  [
    1806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1805,
        0
      ]
    ]
  ],
  [
    1807,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1806,
        0
      ]
    ]
  ],
  [
    1808,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1807,
        0
      ]
    ]
  ],
  [
    1809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1805,
        0
      ]
    ]
  ],
  [
    1810,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1809,
        0
      ]
    ]
  ],
  [
    1811,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1810,
        0
      ]
    ]
  ],
  [
    1816,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1811,
        0
      ],
      [
        1808,
        0
      ]
    ]
  ],
  [
    1819,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1816,
        0
      ],
      [
        1818,
        0
      ]
    ]
  ],
  [
    1822,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1819,
        0
      ],
      [
        1821,
        0
      ]
    ]
  ],
  [
    2947,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1822,
        0
      ]
    ]
  ],
  [
    2948,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1822,
        0
      ],
      [
        2947,
        0
      ]
    ]
  ],
  [
    2949,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2948,
        0
      ]
    ]
  ],
  [
    2950,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2948,
        0
      ],
      [
        2949,
        0
      ]
    ]
  ],
  [
    1831,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2950,
        0
      ],
      [
        1826,
        0
      ]
    ]
  ],
  [
    1833,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1831,
        0
      ]
    ]
  ],
  [
    1834,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1833,
        0
      ]
    ]
  ],
  [
    1835,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1834,
        0
      ],
      [
        141,
        0
      ]
    ]
  ],
  [
    1837,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1836,
        0
      ],
      [
        1835,
        0
      ]
    ]
  ],
  [
    1838,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1837,
        0
      ],
      [
        1802,
        0
      ]
    ]
  ],
  [
    1841,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1840,
        0
      ]
    ]
  ],
  [
    1839,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1838,
        0
      ]
    ]
  ],
  [
    1842,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1839,
        0
      ],
      [
        1841,
        0
      ]
    ]
  ],
  [
    1843,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1842,
        0
      ]
    ]
  ],
  [
    1844,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1843,
        0
      ]
    ]
  ],
  [
    1845,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1844,
        0
      ]
    ]
  ],
  [
    1846,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1838,
        0
      ],
      [
        1845,
        0
      ]
    ]
  ],
  [
    1854,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2873,
        0
      ]
    ]
  ],
  [
    1850,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1849,
        0
      ]
    ]
  ],
  [
    1847,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1846,
        0
      ],
      [
        1846,
        0
      ]
    ]
  ],
  [
    1848,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1847,
        0
      ]
    ]
  ],
  [
    1851,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1848,
        0
      ],
      [
        1850,
        0
      ]
    ]
  ],
  [
    1852,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1851,
        0
      ]
    ]
  ],
  [
    1855,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1852,
        0
      ],
      [
        1854,
        0
      ]
    ]
  ],
  [
    1856,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1855,
        0
      ]
    ]
  ],
  [
    1857,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1856,
        0
      ]
    ]
  ],
  [
    1858,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1857,
        0
      ]
    ]
  ],
  [
    1859,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1846,
        0
      ],
      [
        1858,
        0
      ]
    ]
  ],
  [
    1861,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1859,
        0
      ],
      [
        1860,
        0
      ]
    ]
  ],
  [
    1863,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1861,
        0
      ],
      [
        1862,
        0
      ]
    ]
  ],
  [
    1869,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        116,
        0
      ]
    ]
  ],
  [
    1865,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        114,
        0
      ]
    ]
  ],
  [
    1864,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1863,
        0
      ],
      [
        531,
        0
      ]
    ]
  ],
  [
    1866,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1865,
        0
      ],
      [
        1864,
        0
      ]
    ]
  ],
  [
    1867,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1866,
        0
      ]
    ]
  ],
  [
    1868,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1867,
        0
      ],
      [
        53,
        0
      ]
    ]
  ],
  [
    1870,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1869,
        0
      ],
      [
        1868,
        0
      ]
    ]
  ],
  [
    1871,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1870,
        0
      ],
      [
        1863,
        0
      ]
    ]
  ],
  [
    1874,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1873,
        0
      ]
    ]
  ],
  [
    1872,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1871,
        0
      ]
    ]
  ],
  [
    1875,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1872,
        0
      ],
      [
        1874,
        0
      ]
    ]
  ],
  [
    1876,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1875,
        0
      ]
    ]
  ],
  [
    1877,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1876,
        0
      ]
    ]
  ],
  [
    1878,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1877,
        0
      ]
    ]
  ],
  [
    1879,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1871,
        0
      ],
      [
        1878,
        0
      ]
    ]
  ],
  [
    1887,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2874,
        0
      ]
    ]
  ],
  [
    1883,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1882,
        0
      ]
    ]
  ],
  [
    1880,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1879,
        0
      ],
      [
        1879,
        0
      ]
    ]
  ],
  [
    1881,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1880,
        0
      ]
    ]
  ],
  [
    1884,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1881,
        0
      ],
      [
        1883,
        0
      ]
    ]
  ],
  [
    1885,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1884,
        0
      ]
    ]
  ],
  [
    1888,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1885,
        0
      ],
      [
        1887,
        0
      ]
    ]
  ],
  [
    1889,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1888,
        0
      ]
    ]
  ],
  [
    1890,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1889,
        0
      ]
    ]
  ],
  [
    1891,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1890,
        0
      ]
    ]
  ],
  [
    1892,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1879,
        0
      ],
      [
        1891,
        0
      ]
    ]
  ],
  [
    1894,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1892,
        0
      ],
      [
        1893,
        0
      ]
    ]
  ],
  [
    1896,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1894,
        0
      ],
      [
        1895,
        0
      ]
    ]
  ],
  [
    1930,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        120,
        0
      ]
    ]
  ],
  [
    1898,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        118,
        0
      ]
    ]
  ],
  [
    1897,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1896,
        0
      ],
      [
        224,
        0
      ]
    ]
  ],
  [
    1899,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1898,
        0
      ],
      [
        1897,
        0
      ]
    ]
  ],
  [
    1918,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1899,
        0
      ]
    ]
  ],
  [
    1919,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1918,
        0
      ]
    ]
  ],
  [
    1920,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1919,
        0
      ]
    ]
  ],
  [
    1914,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    1915,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1914,
        0
      ]
    ]
  ],
  [
    1912,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        185,
        0
      ]
    ]
  ],
  [
    1900,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1899,
        0
      ]
    ]
  ],
  [
    1901,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1900,
        0
      ]
    ]
  ],
  [
    1902,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1901,
        0
      ]
    ]
  ],
  [
    1903,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1899,
        0
      ]
    ]
  ],
  [
    1904,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1903,
        0
      ]
    ]
  ],
  [
    1905,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1904,
        0
      ]
    ]
  ],
  [
    1910,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1905,
        0
      ],
      [
        1902,
        0
      ]
    ]
  ],
  [
    1913,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        1910,
        0
      ],
      [
        1912,
        0
      ]
    ]
  ],
  [
    1916,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        1913,
        0
      ],
      [
        1915,
        0
      ]
    ]
  ],
  [
    2951,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1916,
        0
      ]
    ]
  ],
  [
    2952,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        1916,
        0
      ],
      [
        2951,
        0
      ]
    ]
  ],
  [
    2953,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2952,
        0
      ]
    ]
  ],
  [
    2954,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2952,
        0
      ],
      [
        2953,
        0
      ]
    ]
  ],
  [
    1925,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2954,
        0
      ],
      [
        1920,
        0
      ]
    ]
  ],
  [
    1927,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        1925,
        0
      ]
    ]
  ],
  [
    1928,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1927,
        0
      ]
    ]
  ],
  [
    1929,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        1928,
        0
      ],
      [
        167,
        0
      ]
    ]
  ],
  [
    1931,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1930,
        0
      ],
      [
        1929,
        0
      ]
    ]
  ],
  [
    1932,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1931,
        0
      ],
      [
        1896,
        0
      ]
    ]
  ],
  [
    1935,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1934,
        0
      ]
    ]
  ],
  [
    1933,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1932,
        0
      ]
    ]
  ],
  [
    1936,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1933,
        0
      ],
      [
        1935,
        0
      ]
    ]
  ],
  [
    1937,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1936,
        0
      ]
    ]
  ],
  [
    1938,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1937,
        0
      ]
    ]
  ],
  [
    1939,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1938,
        0
      ]
    ]
  ],
  [
    1940,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1932,
        0
      ],
      [
        1939,
        0
      ]
    ]
  ],
  [
    1948,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2875,
        0
      ]
    ]
  ],
  [
    1944,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1943,
        0
      ]
    ]
  ],
  [
    1941,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1940,
        0
      ],
      [
        1940,
        0
      ]
    ]
  ],
  [
    1942,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1941,
        0
      ]
    ]
  ],
  [
    1945,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1942,
        0
      ],
      [
        1944,
        0
      ]
    ]
  ],
  [
    1946,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1945,
        0
      ]
    ]
  ],
  [
    1949,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1946,
        0
      ],
      [
        1948,
        0
      ]
    ]
  ],
  [
    1950,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1949,
        0
      ]
    ]
  ],
  [
    1951,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1950,
        0
      ]
    ]
  ],
  [
    1952,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1951,
        0
      ]
    ]
  ],
  [
    1953,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1940,
        0
      ],
      [
        1952,
        0
      ]
    ]
  ],
  [
    1955,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1953,
        0
      ],
      [
        1954,
        0
      ]
    ]
  ],
  [
    1957,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1955,
        0
      ],
      [
        1956,
        0
      ]
    ]
  ],
  [
    1963,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        124,
        0
      ]
    ]
  ],
  [
    1959,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        122,
        0
      ]
    ]
  ],
  [
    1958,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        1957,
        0
      ],
      [
        300,
        0
      ]
    ]
  ],
  [
    1960,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        1959,
        0
      ],
      [
        1958,
        0
      ]
    ]
  ],
  [
    1961,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        1960,
        0
      ]
    ]
  ],
  [
    1962,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        1961,
        0
      ],
      [
        173,
        0
      ]
    ]
  ],
  [
    1964,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1963,
        0
      ],
      [
        1962,
        0
      ]
    ]
  ],
  [
    1965,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1964,
        0
      ],
      [
        1957,
        0
      ]
    ]
  ],
  [
    1968,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1967,
        0
      ]
    ]
  ],
  [
    1966,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1965,
        0
      ]
    ]
  ],
  [
    1969,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1966,
        0
      ],
      [
        1968,
        0
      ]
    ]
  ],
  [
    1970,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1969,
        0
      ]
    ]
  ],
  [
    1971,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1970,
        0
      ]
    ]
  ],
  [
    1972,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1971,
        0
      ]
    ]
  ],
  [
    1973,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        1965,
        0
      ],
      [
        1972,
        0
      ]
    ]
  ],
  [
    1981,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2876,
        0
      ]
    ]
  ],
  [
    1977,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        1976,
        0
      ]
    ]
  ],
  [
    1974,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1973,
        0
      ],
      [
        1973,
        0
      ]
    ]
  ],
  [
    1975,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        1974,
        0
      ]
    ]
  ],
  [
    1978,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        1975,
        0
      ],
      [
        1977,
        0
      ]
    ]
  ],
  [
    1979,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1978,
        0
      ]
    ]
  ],
  [
    1982,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        1979,
        0
      ],
      [
        1981,
        0
      ]
    ]
  ],
  [
    1983,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        1982,
        0
      ]
    ]
  ],
  [
    1984,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1983,
        0
      ]
    ]
  ],
  [
    1985,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        1984,
        0
      ]
    ]
  ],
  [
    1986,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        1973,
        0
      ],
      [
        1985,
        0
      ]
    ]
  ],
  [
    1988,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        1986,
        0
      ],
      [
        1987,
        0
      ]
    ]
  ],
  [
    1990,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        1988,
        0
      ],
      [
        1989,
        0
      ]
    ]
  ],
  [
    2024,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        128,
        0
      ]
    ]
  ],
  [
    1992,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        126,
        0
      ]
    ]
  ],
  [
    1991,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        1990,
        0
      ],
      [
        225,
        0
      ]
    ]
  ],
  [
    1993,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        1992,
        0
      ],
      [
        1991,
        0
      ]
    ]
  ],
  [
    2012,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1993,
        0
      ]
    ]
  ],
  [
    2013,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2012,
        0
      ]
    ]
  ],
  [
    2014,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2013,
        0
      ]
    ]
  ],
  [
    2008,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2009,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2008,
        0
      ]
    ]
  ],
  [
    2006,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        396,
        0
      ]
    ]
  ],
  [
    1994,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1993,
        0
      ]
    ]
  ],
  [
    1995,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1994,
        0
      ]
    ]
  ],
  [
    1996,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1995,
        0
      ]
    ]
  ],
  [
    1997,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        1993,
        0
      ]
    ]
  ],
  [
    1998,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        1997,
        0
      ]
    ]
  ],
  [
    1999,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        1998,
        0
      ]
    ]
  ],
  [
    2004,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        1999,
        0
      ],
      [
        1996,
        0
      ]
    ]
  ],
  [
    2007,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2004,
        0
      ],
      [
        2006,
        0
      ]
    ]
  ],
  [
    2010,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2007,
        0
      ],
      [
        2009,
        0
      ]
    ]
  ],
  [
    2955,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2010,
        0
      ]
    ]
  ],
  [
    2956,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2010,
        0
      ],
      [
        2955,
        0
      ]
    ]
  ],
  [
    2957,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2956,
        0
      ]
    ]
  ],
  [
    2958,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2956,
        0
      ],
      [
        2957,
        0
      ]
    ]
  ],
  [
    2019,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2958,
        0
      ],
      [
        2014,
        0
      ]
    ]
  ],
  [
    2021,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2019,
        0
      ]
    ]
  ],
  [
    2022,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2021,
        0
      ]
    ]
  ],
  [
    2023,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2022,
        0
      ],
      [
        13,
        0
      ]
    ]
  ],
  [
    2025,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2024,
        0
      ],
      [
        2023,
        0
      ]
    ]
  ],
  [
    2026,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2025,
        0
      ],
      [
        1990,
        0
      ]
    ]
  ],
  [
    2029,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2028,
        0
      ]
    ]
  ],
  [
    2027,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2026,
        0
      ]
    ]
  ],
  [
    2030,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2027,
        0
      ],
      [
        2029,
        0
      ]
    ]
  ],
  [
    2031,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2030,
        0
      ]
    ]
  ],
  [
    2032,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2031,
        0
      ]
    ]
  ],
  [
    2033,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2032,
        0
      ]
    ]
  ],
  [
    2034,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2026,
        0
      ],
      [
        2033,
        0
      ]
    ]
  ],
  [
    2042,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2877,
        0
      ]
    ]
  ],
  [
    2038,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2037,
        0
      ]
    ]
  ],
  [
    2035,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2034,
        0
      ],
      [
        2034,
        0
      ]
    ]
  ],
  [
    2036,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2035,
        0
      ]
    ]
  ],
  [
    2039,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2036,
        0
      ],
      [
        2038,
        0
      ]
    ]
  ],
  [
    2040,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2039,
        0
      ]
    ]
  ],
  [
    2043,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2040,
        0
      ],
      [
        2042,
        0
      ]
    ]
  ],
  [
    2044,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2043,
        0
      ]
    ]
  ],
  [
    2045,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2044,
        0
      ]
    ]
  ],
  [
    2046,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2045,
        0
      ]
    ]
  ],
  [
    2047,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2034,
        0
      ],
      [
        2046,
        0
      ]
    ]
  ],
  [
    2049,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2047,
        0
      ],
      [
        2048,
        0
      ]
    ]
  ],
  [
    2051,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2049,
        0
      ],
      [
        2050,
        0
      ]
    ]
  ],
  [
    2057,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        132,
        0
      ]
    ]
  ],
  [
    2053,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        130,
        0
      ]
    ]
  ],
  [
    2052,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2051,
        0
      ],
      [
        515,
        0
      ]
    ]
  ],
  [
    2054,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2053,
        0
      ],
      [
        2052,
        0
      ]
    ]
  ],
  [
    2055,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2054,
        0
      ]
    ]
  ],
  [
    2056,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2055,
        0
      ],
      [
        272,
        0
      ]
    ]
  ],
  [
    2058,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2057,
        0
      ],
      [
        2056,
        0
      ]
    ]
  ],
  [
    2059,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2058,
        0
      ],
      [
        2051,
        0
      ]
    ]
  ],
  [
    2062,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2061,
        0
      ]
    ]
  ],
  [
    2060,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2059,
        0
      ]
    ]
  ],
  [
    2063,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2060,
        0
      ],
      [
        2062,
        0
      ]
    ]
  ],
  [
    2064,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2063,
        0
      ]
    ]
  ],
  [
    2065,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2064,
        0
      ]
    ]
  ],
  [
    2066,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2065,
        0
      ]
    ]
  ],
  [
    2067,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2059,
        0
      ],
      [
        2066,
        0
      ]
    ]
  ],
  [
    2075,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2878,
        0
      ]
    ]
  ],
  [
    2071,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2070,
        0
      ]
    ]
  ],
  [
    2068,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2067,
        0
      ],
      [
        2067,
        0
      ]
    ]
  ],
  [
    2069,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2068,
        0
      ]
    ]
  ],
  [
    2072,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2069,
        0
      ],
      [
        2071,
        0
      ]
    ]
  ],
  [
    2073,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2072,
        0
      ]
    ]
  ],
  [
    2076,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2073,
        0
      ],
      [
        2075,
        0
      ]
    ]
  ],
  [
    2077,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2076,
        0
      ]
    ]
  ],
  [
    2078,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2077,
        0
      ]
    ]
  ],
  [
    2079,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2078,
        0
      ]
    ]
  ],
  [
    2080,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2067,
        0
      ],
      [
        2079,
        0
      ]
    ]
  ],
  [
    2082,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2080,
        0
      ],
      [
        2081,
        0
      ]
    ]
  ],
  [
    2084,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2082,
        0
      ],
      [
        2083,
        0
      ]
    ]
  ],
  [
    2118,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        136,
        0
      ]
    ]
  ],
  [
    2086,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        134,
        0
      ]
    ]
  ],
  [
    2085,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2084,
        0
      ],
      [
        93,
        0
      ]
    ]
  ],
  [
    2087,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2086,
        0
      ],
      [
        2085,
        0
      ]
    ]
  ],
  [
    2106,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2087,
        0
      ]
    ]
  ],
  [
    2107,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2106,
        0
      ]
    ]
  ],
  [
    2108,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2107,
        0
      ]
    ]
  ],
  [
    2102,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2103,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2102,
        0
      ]
    ]
  ],
  [
    2100,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        299,
        0
      ]
    ]
  ],
  [
    2088,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2087,
        0
      ]
    ]
  ],
  [
    2089,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2088,
        0
      ]
    ]
  ],
  [
    2090,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2089,
        0
      ]
    ]
  ],
  [
    2091,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2087,
        0
      ]
    ]
  ],
  [
    2092,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2091,
        0
      ]
    ]
  ],
  [
    2093,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2092,
        0
      ]
    ]
  ],
  [
    2098,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2093,
        0
      ],
      [
        2090,
        0
      ]
    ]
  ],
  [
    2101,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2098,
        0
      ],
      [
        2100,
        0
      ]
    ]
  ],
  [
    2104,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2101,
        0
      ],
      [
        2103,
        0
      ]
    ]
  ],
  [
    2959,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2104,
        0
      ]
    ]
  ],
  [
    2960,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2104,
        0
      ],
      [
        2959,
        0
      ]
    ]
  ],
  [
    2961,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2960,
        0
      ]
    ]
  ],
  [
    2962,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2960,
        0
      ],
      [
        2961,
        0
      ]
    ]
  ],
  [
    2113,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2962,
        0
      ],
      [
        2108,
        0
      ]
    ]
  ],
  [
    2115,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2113,
        0
      ]
    ]
  ],
  [
    2116,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2115,
        0
      ]
    ]
  ],
  [
    2117,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2116,
        0
      ],
      [
        245,
        0
      ]
    ]
  ],
  [
    2119,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2118,
        0
      ],
      [
        2117,
        0
      ]
    ]
  ],
  [
    2120,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2119,
        0
      ],
      [
        2084,
        0
      ]
    ]
  ],
  [
    2123,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2122,
        0
      ]
    ]
  ],
  [
    2121,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2120,
        0
      ]
    ]
  ],
  [
    2124,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2121,
        0
      ],
      [
        2123,
        0
      ]
    ]
  ],
  [
    2125,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2124,
        0
      ]
    ]
  ],
  [
    2126,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2125,
        0
      ]
    ]
  ],
  [
    2127,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2126,
        0
      ]
    ]
  ],
  [
    2128,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2120,
        0
      ],
      [
        2127,
        0
      ]
    ]
  ],
  [
    2136,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2879,
        0
      ]
    ]
  ],
  [
    2132,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2131,
        0
      ]
    ]
  ],
  [
    2129,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2128,
        0
      ],
      [
        2128,
        0
      ]
    ]
  ],
  [
    2130,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2129,
        0
      ]
    ]
  ],
  [
    2133,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2130,
        0
      ],
      [
        2132,
        0
      ]
    ]
  ],
  [
    2134,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2133,
        0
      ]
    ]
  ],
  [
    2137,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2134,
        0
      ],
      [
        2136,
        0
      ]
    ]
  ],
  [
    2138,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2137,
        0
      ]
    ]
  ],
  [
    2139,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2138,
        0
      ]
    ]
  ],
  [
    2140,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2139,
        0
      ]
    ]
  ],
  [
    2141,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2128,
        0
      ],
      [
        2140,
        0
      ]
    ]
  ],
  [
    2143,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2141,
        0
      ],
      [
        2142,
        0
      ]
    ]
  ],
  [
    2145,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2143,
        0
      ],
      [
        2144,
        0
      ]
    ]
  ],
  [
    2151,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        140,
        0
      ]
    ]
  ],
  [
    2147,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        138,
        0
      ]
    ]
  ],
  [
    2146,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2145,
        0
      ],
      [
        260,
        0
      ]
    ]
  ],
  [
    2148,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2147,
        0
      ],
      [
        2146,
        0
      ]
    ]
  ],
  [
    2149,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2148,
        0
      ]
    ]
  ],
  [
    2150,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2149,
        0
      ],
      [
        342,
        0
      ]
    ]
  ],
  [
    2152,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2151,
        0
      ],
      [
        2150,
        0
      ]
    ]
  ],
  [
    2153,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2152,
        0
      ],
      [
        2145,
        0
      ]
    ]
  ],
  [
    2156,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2155,
        0
      ]
    ]
  ],
  [
    2154,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2153,
        0
      ]
    ]
  ],
  [
    2157,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2154,
        0
      ],
      [
        2156,
        0
      ]
    ]
  ],
  [
    2158,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2157,
        0
      ]
    ]
  ],
  [
    2159,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2158,
        0
      ]
    ]
  ],
  [
    2160,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2159,
        0
      ]
    ]
  ],
  [
    2161,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2153,
        0
      ],
      [
        2160,
        0
      ]
    ]
  ],
  [
    2169,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2880,
        0
      ]
    ]
  ],
  [
    2165,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2164,
        0
      ]
    ]
  ],
  [
    2162,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2161,
        0
      ],
      [
        2161,
        0
      ]
    ]
  ],
  [
    2163,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2162,
        0
      ]
    ]
  ],
  [
    2166,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2163,
        0
      ],
      [
        2165,
        0
      ]
    ]
  ],
  [
    2167,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2166,
        0
      ]
    ]
  ],
  [
    2170,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2167,
        0
      ],
      [
        2169,
        0
      ]
    ]
  ],
  [
    2171,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2170,
        0
      ]
    ]
  ],
  [
    2172,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2171,
        0
      ]
    ]
  ],
  [
    2173,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2172,
        0
      ]
    ]
  ],
  [
    2174,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2161,
        0
      ],
      [
        2173,
        0
      ]
    ]
  ],
  [
    2176,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2174,
        0
      ],
      [
        2175,
        0
      ]
    ]
  ],
  [
    2178,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2176,
        0
      ],
      [
        2177,
        0
      ]
    ]
  ],
  [
    2212,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        144,
        0
      ]
    ]
  ],
  [
    2180,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        142,
        0
      ]
    ]
  ],
  [
    2179,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2178,
        0
      ],
      [
        505,
        0
      ]
    ]
  ],
  [
    2181,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2180,
        0
      ],
      [
        2179,
        0
      ]
    ]
  ],
  [
    2200,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2181,
        0
      ]
    ]
  ],
  [
    2201,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2200,
        0
      ]
    ]
  ],
  [
    2202,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2201,
        0
      ]
    ]
  ],
  [
    2196,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2197,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2196,
        0
      ]
    ]
  ],
  [
    2194,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        395,
        0
      ]
    ]
  ],
  [
    2182,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2181,
        0
      ]
    ]
  ],
  [
    2183,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2182,
        0
      ]
    ]
  ],
  [
    2184,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2183,
        0
      ]
    ]
  ],
  [
    2185,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2181,
        0
      ]
    ]
  ],
  [
    2186,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2185,
        0
      ]
    ]
  ],
  [
    2187,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2186,
        0
      ]
    ]
  ],
  [
    2192,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2187,
        0
      ],
      [
        2184,
        0
      ]
    ]
  ],
  [
    2195,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2192,
        0
      ],
      [
        2194,
        0
      ]
    ]
  ],
  [
    2198,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2195,
        0
      ],
      [
        2197,
        0
      ]
    ]
  ],
  [
    2963,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2198,
        0
      ]
    ]
  ],
  [
    2964,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2198,
        0
      ],
      [
        2963,
        0
      ]
    ]
  ],
  [
    2965,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2964,
        0
      ]
    ]
  ],
  [
    2966,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2964,
        0
      ],
      [
        2965,
        0
      ]
    ]
  ],
  [
    2207,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2966,
        0
      ],
      [
        2202,
        0
      ]
    ]
  ],
  [
    2209,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2207,
        0
      ]
    ]
  ],
  [
    2210,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2209,
        0
      ]
    ]
  ],
  [
    2211,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2210,
        0
      ],
      [
        123,
        0
      ]
    ]
  ],
  [
    2213,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2212,
        0
      ],
      [
        2211,
        0
      ]
    ]
  ],
  [
    2214,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2213,
        0
      ],
      [
        2178,
        0
      ]
    ]
  ],
  [
    2217,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2216,
        0
      ]
    ]
  ],
  [
    2215,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2214,
        0
      ]
    ]
  ],
  [
    2218,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2215,
        0
      ],
      [
        2217,
        0
      ]
    ]
  ],
  [
    2219,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2218,
        0
      ]
    ]
  ],
  [
    2220,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2219,
        0
      ]
    ]
  ],
  [
    2221,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2220,
        0
      ]
    ]
  ],
  [
    2222,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2214,
        0
      ],
      [
        2221,
        0
      ]
    ]
  ],
  [
    2230,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2881,
        0
      ]
    ]
  ],
  [
    2226,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2225,
        0
      ]
    ]
  ],
  [
    2223,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2222,
        0
      ],
      [
        2222,
        0
      ]
    ]
  ],
  [
    2224,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2223,
        0
      ]
    ]
  ],
  [
    2227,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2224,
        0
      ],
      [
        2226,
        0
      ]
    ]
  ],
  [
    2228,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2227,
        0
      ]
    ]
  ],
  [
    2231,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2228,
        0
      ],
      [
        2230,
        0
      ]
    ]
  ],
  [
    2232,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2231,
        0
      ]
    ]
  ],
  [
    2233,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2232,
        0
      ]
    ]
  ],
  [
    2234,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2233,
        0
      ]
    ]
  ],
  [
    2235,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2222,
        0
      ],
      [
        2234,
        0
      ]
    ]
  ],
  [
    2237,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2235,
        0
      ],
      [
        2236,
        0
      ]
    ]
  ],
  [
    2239,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2237,
        0
      ],
      [
        2238,
        0
      ]
    ]
  ],
  [
    2245,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        148,
        0
      ]
    ]
  ],
  [
    2241,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        146,
        0
      ]
    ]
  ],
  [
    2240,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2239,
        0
      ],
      [
        275,
        0
      ]
    ]
  ],
  [
    2242,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2241,
        0
      ],
      [
        2240,
        0
      ]
    ]
  ],
  [
    2243,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2242,
        0
      ]
    ]
  ],
  [
    2244,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2243,
        0
      ],
      [
        95,
        0
      ]
    ]
  ],
  [
    2246,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2245,
        0
      ],
      [
        2244,
        0
      ]
    ]
  ],
  [
    2247,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2246,
        0
      ],
      [
        2239,
        0
      ]
    ]
  ],
  [
    2250,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2249,
        0
      ]
    ]
  ],
  [
    2248,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2247,
        0
      ]
    ]
  ],
  [
    2251,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2248,
        0
      ],
      [
        2250,
        0
      ]
    ]
  ],
  [
    2252,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2251,
        0
      ]
    ]
  ],
  [
    2253,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2252,
        0
      ]
    ]
  ],
  [
    2254,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2253,
        0
      ]
    ]
  ],
  [
    2255,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2247,
        0
      ],
      [
        2254,
        0
      ]
    ]
  ],
  [
    2263,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2882,
        0
      ]
    ]
  ],
  [
    2259,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2258,
        0
      ]
    ]
  ],
  [
    2256,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2255,
        0
      ],
      [
        2255,
        0
      ]
    ]
  ],
  [
    2257,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2256,
        0
      ]
    ]
  ],
  [
    2260,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2257,
        0
      ],
      [
        2259,
        0
      ]
    ]
  ],
  [
    2261,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2260,
        0
      ]
    ]
  ],
  [
    2264,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2261,
        0
      ],
      [
        2263,
        0
      ]
    ]
  ],
  [
    2265,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2264,
        0
      ]
    ]
  ],
  [
    2266,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2265,
        0
      ]
    ]
  ],
  [
    2267,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2266,
        0
      ]
    ]
  ],
  [
    2268,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2255,
        0
      ],
      [
        2267,
        0
      ]
    ]
  ],
  [
    2270,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2268,
        0
      ],
      [
        2269,
        0
      ]
    ]
  ],
  [
    2272,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2270,
        0
      ],
      [
        2271,
        0
      ]
    ]
  ],
  [
    2306,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        152,
        0
      ]
    ]
  ],
  [
    2274,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        150,
        0
      ]
    ]
  ],
  [
    2273,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2272,
        0
      ],
      [
        139,
        0
      ]
    ]
  ],
  [
    2275,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2274,
        0
      ],
      [
        2273,
        0
      ]
    ]
  ],
  [
    2294,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2275,
        0
      ]
    ]
  ],
  [
    2295,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2294,
        0
      ]
    ]
  ],
  [
    2296,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2295,
        0
      ]
    ]
  ],
  [
    2290,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2291,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2290,
        0
      ]
    ]
  ],
  [
    2288,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        243,
        0
      ]
    ]
  ],
  [
    2276,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2275,
        0
      ]
    ]
  ],
  [
    2277,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2276,
        0
      ]
    ]
  ],
  [
    2278,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2277,
        0
      ]
    ]
  ],
  [
    2279,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2275,
        0
      ]
    ]
  ],
  [
    2280,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2279,
        0
      ]
    ]
  ],
  [
    2281,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2280,
        0
      ]
    ]
  ],
  [
    2286,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2281,
        0
      ],
      [
        2278,
        0
      ]
    ]
  ],
  [
    2289,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2286,
        0
      ],
      [
        2288,
        0
      ]
    ]
  ],
  [
    2292,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2289,
        0
      ],
      [
        2291,
        0
      ]
    ]
  ],
  [
    2967,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2292,
        0
      ]
    ]
  ],
  [
    2968,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2292,
        0
      ],
      [
        2967,
        0
      ]
    ]
  ],
  [
    2969,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2968,
        0
      ]
    ]
  ],
  [
    2970,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2968,
        0
      ],
      [
        2969,
        0
      ]
    ]
  ],
  [
    2301,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2970,
        0
      ],
      [
        2296,
        0
      ]
    ]
  ],
  [
    2303,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2301,
        0
      ]
    ]
  ],
  [
    2304,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2303,
        0
      ]
    ]
  ],
  [
    2305,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2304,
        0
      ],
      [
        504,
        0
      ]
    ]
  ],
  [
    2307,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2306,
        0
      ],
      [
        2305,
        0
      ]
    ]
  ],
  [
    2308,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2307,
        0
      ],
      [
        2272,
        0
      ]
    ]
  ],
  [
    2311,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2310,
        0
      ]
    ]
  ],
  [
    2309,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2308,
        0
      ]
    ]
  ],
  [
    2312,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2309,
        0
      ],
      [
        2311,
        0
      ]
    ]
  ],
  [
    2313,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2312,
        0
      ]
    ]
  ],
  [
    2314,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2313,
        0
      ]
    ]
  ],
  [
    2315,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2314,
        0
      ]
    ]
  ],
  [
    2316,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2308,
        0
      ],
      [
        2315,
        0
      ]
    ]
  ],
  [
    2324,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2883,
        0
      ]
    ]
  ],
  [
    2320,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2319,
        0
      ]
    ]
  ],
  [
    2317,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2316,
        0
      ],
      [
        2316,
        0
      ]
    ]
  ],
  [
    2318,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2317,
        0
      ]
    ]
  ],
  [
    2321,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2318,
        0
      ],
      [
        2320,
        0
      ]
    ]
  ],
  [
    2322,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2321,
        0
      ]
    ]
  ],
  [
    2325,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2322,
        0
      ],
      [
        2324,
        0
      ]
    ]
  ],
  [
    2326,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2325,
        0
      ]
    ]
  ],
  [
    2327,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2326,
        0
      ]
    ]
  ],
  [
    2328,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2327,
        0
      ]
    ]
  ],
  [
    2329,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2316,
        0
      ],
      [
        2328,
        0
      ]
    ]
  ],
  [
    2331,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2329,
        0
      ],
      [
        2330,
        0
      ]
    ]
  ],
  [
    2333,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2331,
        0
      ],
      [
        2332,
        0
      ]
    ]
  ],
  [
    2339,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        156,
        0
      ]
    ]
  ],
  [
    2335,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        154,
        0
      ]
    ]
  ],
  [
    2334,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2333,
        0
      ],
      [
        454,
        0
      ]
    ]
  ],
  [
    2336,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2335,
        0
      ],
      [
        2334,
        0
      ]
    ]
  ],
  [
    2337,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2336,
        0
      ]
    ]
  ],
  [
    2338,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2337,
        0
      ],
      [
        105,
        0
      ]
    ]
  ],
  [
    2340,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2339,
        0
      ],
      [
        2338,
        0
      ]
    ]
  ],
  [
    2341,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2340,
        0
      ],
      [
        2333,
        0
      ]
    ]
  ],
  [
    2344,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2343,
        0
      ]
    ]
  ],
  [
    2342,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2341,
        0
      ]
    ]
  ],
  [
    2345,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2342,
        0
      ],
      [
        2344,
        0
      ]
    ]
  ],
  [
    2346,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2345,
        0
      ]
    ]
  ],
  [
    2347,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2346,
        0
      ]
    ]
  ],
  [
    2348,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2347,
        0
      ]
    ]
  ],
  [
    2349,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2341,
        0
      ],
      [
        2348,
        0
      ]
    ]
  ],
  [
    2357,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2884,
        0
      ]
    ]
  ],
  [
    2353,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2352,
        0
      ]
    ]
  ],
  [
    2350,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2349,
        0
      ],
      [
        2349,
        0
      ]
    ]
  ],
  [
    2351,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2350,
        0
      ]
    ]
  ],
  [
    2354,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2351,
        0
      ],
      [
        2353,
        0
      ]
    ]
  ],
  [
    2355,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2354,
        0
      ]
    ]
  ],
  [
    2358,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2355,
        0
      ],
      [
        2357,
        0
      ]
    ]
  ],
  [
    2359,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2358,
        0
      ]
    ]
  ],
  [
    2360,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2359,
        0
      ]
    ]
  ],
  [
    2361,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2360,
        0
      ]
    ]
  ],
  [
    2362,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2349,
        0
      ],
      [
        2361,
        0
      ]
    ]
  ],
  [
    2364,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2362,
        0
      ],
      [
        2363,
        0
      ]
    ]
  ],
  [
    2366,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2364,
        0
      ],
      [
        2365,
        0
      ]
    ]
  ],
  [
    2400,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        160,
        0
      ]
    ]
  ],
  [
    2368,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        158,
        0
      ]
    ]
  ],
  [
    2367,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2366,
        0
      ],
      [
        461,
        0
      ]
    ]
  ],
  [
    2369,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2368,
        0
      ],
      [
        2367,
        0
      ]
    ]
  ],
  [
    2388,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2369,
        0
      ]
    ]
  ],
  [
    2389,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2388,
        0
      ]
    ]
  ],
  [
    2390,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2389,
        0
      ]
    ]
  ],
  [
    2384,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2385,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2384,
        0
      ]
    ]
  ],
  [
    2382,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        253,
        0
      ]
    ]
  ],
  [
    2370,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2369,
        0
      ]
    ]
  ],
  [
    2371,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2370,
        0
      ]
    ]
  ],
  [
    2372,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2371,
        0
      ]
    ]
  ],
  [
    2373,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2369,
        0
      ]
    ]
  ],
  [
    2374,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2373,
        0
      ]
    ]
  ],
  [
    2375,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2374,
        0
      ]
    ]
  ],
  [
    2380,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2375,
        0
      ],
      [
        2372,
        0
      ]
    ]
  ],
  [
    2383,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2380,
        0
      ],
      [
        2382,
        0
      ]
    ]
  ],
  [
    2386,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2383,
        0
      ],
      [
        2385,
        0
      ]
    ]
  ],
  [
    2971,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2386,
        0
      ]
    ]
  ],
  [
    2972,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2386,
        0
      ],
      [
        2971,
        0
      ]
    ]
  ],
  [
    2973,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2972,
        0
      ]
    ]
  ],
  [
    2974,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2972,
        0
      ],
      [
        2973,
        0
      ]
    ]
  ],
  [
    2395,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2974,
        0
      ],
      [
        2390,
        0
      ]
    ]
  ],
  [
    2397,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2395,
        0
      ]
    ]
  ],
  [
    2398,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2397,
        0
      ]
    ]
  ],
  [
    2399,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2398,
        0
      ],
      [
        263,
        0
      ]
    ]
  ],
  [
    2401,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2400,
        0
      ],
      [
        2399,
        0
      ]
    ]
  ],
  [
    2402,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2401,
        0
      ],
      [
        2366,
        0
      ]
    ]
  ],
  [
    2405,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2404,
        0
      ]
    ]
  ],
  [
    2403,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2402,
        0
      ]
    ]
  ],
  [
    2406,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2403,
        0
      ],
      [
        2405,
        0
      ]
    ]
  ],
  [
    2407,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2406,
        0
      ]
    ]
  ],
  [
    2408,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2407,
        0
      ]
    ]
  ],
  [
    2409,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2408,
        0
      ]
    ]
  ],
  [
    2410,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2402,
        0
      ],
      [
        2409,
        0
      ]
    ]
  ],
  [
    2418,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2885,
        0
      ]
    ]
  ],
  [
    2414,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2413,
        0
      ]
    ]
  ],
  [
    2411,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2410,
        0
      ],
      [
        2410,
        0
      ]
    ]
  ],
  [
    2412,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2411,
        0
      ]
    ]
  ],
  [
    2415,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2412,
        0
      ],
      [
        2414,
        0
      ]
    ]
  ],
  [
    2416,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2415,
        0
      ]
    ]
  ],
  [
    2419,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2416,
        0
      ],
      [
        2418,
        0
      ]
    ]
  ],
  [
    2420,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2419,
        0
      ]
    ]
  ],
  [
    2421,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2420,
        0
      ]
    ]
  ],
  [
    2422,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2421,
        0
      ]
    ]
  ],
  [
    2423,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2410,
        0
      ],
      [
        2422,
        0
      ]
    ]
  ],
  [
    2425,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2423,
        0
      ],
      [
        2424,
        0
      ]
    ]
  ],
  [
    2427,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2425,
        0
      ],
      [
        2426,
        0
      ]
    ]
  ],
  [
    2433,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        164,
        0
      ]
    ]
  ],
  [
    2429,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        162,
        0
      ]
    ]
  ],
  [
    2428,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2427,
        0
      ],
      [
        103,
        0
      ]
    ]
  ],
  [
    2430,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2429,
        0
      ],
      [
        2428,
        0
      ]
    ]
  ],
  [
    2431,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2430,
        0
      ]
    ]
  ],
  [
    2432,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2431,
        0
      ],
      [
        261,
        0
      ]
    ]
  ],
  [
    2434,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2433,
        0
      ],
      [
        2432,
        0
      ]
    ]
  ],
  [
    2435,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2434,
        0
      ],
      [
        2427,
        0
      ]
    ]
  ],
  [
    2438,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2437,
        0
      ]
    ]
  ],
  [
    2436,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2435,
        0
      ]
    ]
  ],
  [
    2439,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2436,
        0
      ],
      [
        2438,
        0
      ]
    ]
  ],
  [
    2440,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2439,
        0
      ]
    ]
  ],
  [
    2441,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2440,
        0
      ]
    ]
  ],
  [
    2442,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2441,
        0
      ]
    ]
  ],
  [
    2443,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2435,
        0
      ],
      [
        2442,
        0
      ]
    ]
  ],
  [
    2451,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2886,
        0
      ]
    ]
  ],
  [
    2447,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2446,
        0
      ]
    ]
  ],
  [
    2444,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2443,
        0
      ],
      [
        2443,
        0
      ]
    ]
  ],
  [
    2445,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2444,
        0
      ]
    ]
  ],
  [
    2448,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2445,
        0
      ],
      [
        2447,
        0
      ]
    ]
  ],
  [
    2449,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2448,
        0
      ]
    ]
  ],
  [
    2452,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2449,
        0
      ],
      [
        2451,
        0
      ]
    ]
  ],
  [
    2453,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2452,
        0
      ]
    ]
  ],
  [
    2454,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2453,
        0
      ]
    ]
  ],
  [
    2455,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2454,
        0
      ]
    ]
  ],
  [
    2456,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2443,
        0
      ],
      [
        2455,
        0
      ]
    ]
  ],
  [
    2458,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2456,
        0
      ],
      [
        2457,
        0
      ]
    ]
  ],
  [
    2460,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2458,
        0
      ],
      [
        2459,
        0
      ]
    ]
  ],
  [
    2494,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        168,
        0
      ]
    ]
  ],
  [
    2462,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        166,
        0
      ]
    ]
  ],
  [
    2461,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2460,
        0
      ],
      [
        351,
        0
      ]
    ]
  ],
  [
    2463,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2462,
        0
      ],
      [
        2461,
        0
      ]
    ]
  ],
  [
    2482,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2463,
        0
      ]
    ]
  ],
  [
    2483,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2482,
        0
      ]
    ]
  ],
  [
    2484,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2483,
        0
      ]
    ]
  ],
  [
    2478,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2479,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2478,
        0
      ]
    ]
  ],
  [
    2476,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        187,
        0
      ]
    ]
  ],
  [
    2464,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2463,
        0
      ]
    ]
  ],
  [
    2465,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2464,
        0
      ]
    ]
  ],
  [
    2466,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2465,
        0
      ]
    ]
  ],
  [
    2467,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2463,
        0
      ]
    ]
  ],
  [
    2468,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2467,
        0
      ]
    ]
  ],
  [
    2469,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2468,
        0
      ]
    ]
  ],
  [
    2474,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2469,
        0
      ],
      [
        2466,
        0
      ]
    ]
  ],
  [
    2477,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2474,
        0
      ],
      [
        2476,
        0
      ]
    ]
  ],
  [
    2480,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2477,
        0
      ],
      [
        2479,
        0
      ]
    ]
  ],
  [
    2975,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2480,
        0
      ]
    ]
  ],
  [
    2976,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2480,
        0
      ],
      [
        2975,
        0
      ]
    ]
  ],
  [
    2977,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2976,
        0
      ]
    ]
  ],
  [
    2978,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2976,
        0
      ],
      [
        2977,
        0
      ]
    ]
  ],
  [
    2489,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2978,
        0
      ],
      [
        2484,
        0
      ]
    ]
  ],
  [
    2491,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2489,
        0
      ]
    ]
  ],
  [
    2492,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2491,
        0
      ]
    ]
  ],
  [
    2493,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2492,
        0
      ],
      [
        5,
        0
      ]
    ]
  ],
  [
    2495,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2494,
        0
      ],
      [
        2493,
        0
      ]
    ]
  ],
  [
    2496,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2495,
        0
      ],
      [
        2460,
        0
      ]
    ]
  ],
  [
    2499,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2498,
        0
      ]
    ]
  ],
  [
    2497,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2496,
        0
      ]
    ]
  ],
  [
    2500,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2497,
        0
      ],
      [
        2499,
        0
      ]
    ]
  ],
  [
    2501,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2500,
        0
      ]
    ]
  ],
  [
    2502,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2501,
        0
      ]
    ]
  ],
  [
    2503,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2502,
        0
      ]
    ]
  ],
  [
    2504,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2496,
        0
      ],
      [
        2503,
        0
      ]
    ]
  ],
  [
    2512,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2887,
        0
      ]
    ]
  ],
  [
    2508,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2507,
        0
      ]
    ]
  ],
  [
    2505,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2504,
        0
      ],
      [
        2504,
        0
      ]
    ]
  ],
  [
    2506,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2505,
        0
      ]
    ]
  ],
  [
    2509,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2506,
        0
      ],
      [
        2508,
        0
      ]
    ]
  ],
  [
    2510,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2509,
        0
      ]
    ]
  ],
  [
    2513,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2510,
        0
      ],
      [
        2512,
        0
      ]
    ]
  ],
  [
    2514,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2513,
        0
      ]
    ]
  ],
  [
    2515,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2514,
        0
      ]
    ]
  ],
  [
    2516,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2515,
        0
      ]
    ]
  ],
  [
    2517,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2504,
        0
      ],
      [
        2516,
        0
      ]
    ]
  ],
  [
    2519,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2517,
        0
      ],
      [
        2518,
        0
      ]
    ]
  ],
  [
    2521,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2519,
        0
      ],
      [
        2520,
        0
      ]
    ]
  ],
  [
    2527,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        172,
        0
      ]
    ]
  ],
  [
    2523,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        170,
        0
      ]
    ]
  ],
  [
    2522,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2521,
        0
      ],
      [
        23,
        0
      ]
    ]
  ],
  [
    2524,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2523,
        0
      ],
      [
        2522,
        0
      ]
    ]
  ],
  [
    2525,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2524,
        0
      ]
    ]
  ],
  [
    2526,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2525,
        0
      ],
      [
        155,
        0
      ]
    ]
  ],
  [
    2528,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2527,
        0
      ],
      [
        2526,
        0
      ]
    ]
  ],
  [
    2529,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2528,
        0
      ],
      [
        2521,
        0
      ]
    ]
  ],
  [
    2532,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2531,
        0
      ]
    ]
  ],
  [
    2530,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2529,
        0
      ]
    ]
  ],
  [
    2533,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2530,
        0
      ],
      [
        2532,
        0
      ]
    ]
  ],
  [
    2534,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2533,
        0
      ]
    ]
  ],
  [
    2535,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2534,
        0
      ]
    ]
  ],
  [
    2536,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2535,
        0
      ]
    ]
  ],
  [
    2537,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2529,
        0
      ],
      [
        2536,
        0
      ]
    ]
  ],
  [
    2545,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2888,
        0
      ]
    ]
  ],
  [
    2541,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2540,
        0
      ]
    ]
  ],
  [
    2538,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2537,
        0
      ],
      [
        2537,
        0
      ]
    ]
  ],
  [
    2539,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2538,
        0
      ]
    ]
  ],
  [
    2542,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2539,
        0
      ],
      [
        2541,
        0
      ]
    ]
  ],
  [
    2543,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2542,
        0
      ]
    ]
  ],
  [
    2546,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2543,
        0
      ],
      [
        2545,
        0
      ]
    ]
  ],
  [
    2547,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2546,
        0
      ]
    ]
  ],
  [
    2548,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2547,
        0
      ]
    ]
  ],
  [
    2549,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2548,
        0
      ]
    ]
  ],
  [
    2550,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2537,
        0
      ],
      [
        2549,
        0
      ]
    ]
  ],
  [
    2552,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2550,
        0
      ],
      [
        2551,
        0
      ]
    ]
  ],
  [
    2554,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2552,
        0
      ],
      [
        2553,
        0
      ]
    ]
  ],
  [
    2588,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        176,
        0
      ]
    ]
  ],
  [
    2556,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        174,
        0
      ]
    ]
  ],
  [
    2555,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2554,
        0
      ],
      [
        63,
        0
      ]
    ]
  ],
  [
    2557,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2556,
        0
      ],
      [
        2555,
        0
      ]
    ]
  ],
  [
    2576,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2557,
        0
      ]
    ]
  ],
  [
    2577,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2576,
        0
      ]
    ]
  ],
  [
    2578,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2577,
        0
      ]
    ]
  ],
  [
    2572,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2573,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2572,
        0
      ]
    ]
  ],
  [
    2570,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        398,
        0
      ]
    ]
  ],
  [
    2558,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2557,
        0
      ]
    ]
  ],
  [
    2559,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2558,
        0
      ]
    ]
  ],
  [
    2560,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2559,
        0
      ]
    ]
  ],
  [
    2561,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2557,
        0
      ]
    ]
  ],
  [
    2562,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2561,
        0
      ]
    ]
  ],
  [
    2563,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2562,
        0
      ]
    ]
  ],
  [
    2568,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2563,
        0
      ],
      [
        2560,
        0
      ]
    ]
  ],
  [
    2571,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2568,
        0
      ],
      [
        2570,
        0
      ]
    ]
  ],
  [
    2574,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2571,
        0
      ],
      [
        2573,
        0
      ]
    ]
  ],
  [
    2979,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2574,
        0
      ]
    ]
  ],
  [
    2980,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2574,
        0
      ],
      [
        2979,
        0
      ]
    ]
  ],
  [
    2981,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2980,
        0
      ]
    ]
  ],
  [
    2982,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2980,
        0
      ],
      [
        2981,
        0
      ]
    ]
  ],
  [
    2583,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2982,
        0
      ],
      [
        2578,
        0
      ]
    ]
  ],
  [
    2585,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2583,
        0
      ]
    ]
  ],
  [
    2586,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2585,
        0
      ]
    ]
  ],
  [
    2587,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2586,
        0
      ],
      [
        496,
        0
      ]
    ]
  ],
  [
    2589,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2588,
        0
      ],
      [
        2587,
        0
      ]
    ]
  ],
  [
    2590,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2589,
        0
      ],
      [
        2554,
        0
      ]
    ]
  ],
  [
    2593,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2592,
        0
      ]
    ]
  ],
  [
    2591,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2590,
        0
      ]
    ]
  ],
  [
    2594,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2591,
        0
      ],
      [
        2593,
        0
      ]
    ]
  ],
  [
    2595,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2594,
        0
      ]
    ]
  ],
  [
    2596,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2595,
        0
      ]
    ]
  ],
  [
    2597,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2596,
        0
      ]
    ]
  ],
  [
    2598,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2590,
        0
      ],
      [
        2597,
        0
      ]
    ]
  ],
  [
    2606,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2889,
        0
      ]
    ]
  ],
  [
    2602,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2601,
        0
      ]
    ]
  ],
  [
    2599,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2598,
        0
      ],
      [
        2598,
        0
      ]
    ]
  ],
  [
    2600,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2599,
        0
      ]
    ]
  ],
  [
    2603,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2600,
        0
      ],
      [
        2602,
        0
      ]
    ]
  ],
  [
    2604,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2603,
        0
      ]
    ]
  ],
  [
    2607,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2604,
        0
      ],
      [
        2606,
        0
      ]
    ]
  ],
  [
    2608,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2607,
        0
      ]
    ]
  ],
  [
    2609,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2608,
        0
      ]
    ]
  ],
  [
    2610,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2609,
        0
      ]
    ]
  ],
  [
    2611,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2598,
        0
      ],
      [
        2610,
        0
      ]
    ]
  ],
  [
    2613,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2611,
        0
      ],
      [
        2612,
        0
      ]
    ]
  ],
  [
    2615,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2613,
        0
      ],
      [
        2614,
        0
      ]
    ]
  ],
  [
    2621,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        180,
        0
      ]
    ]
  ],
  [
    2617,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        178,
        0
      ]
    ]
  ],
  [
    2616,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2615,
        0
      ],
      [
        477,
        0
      ]
    ]
  ],
  [
    2618,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2617,
        0
      ],
      [
        2616,
        0
      ]
    ]
  ],
  [
    2619,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2618,
        0
      ]
    ]
  ],
  [
    2620,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2619,
        0
      ],
      [
        523,
        0
      ]
    ]
  ],
  [
    2622,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2621,
        0
      ],
      [
        2620,
        0
      ]
    ]
  ],
  [
    2623,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2622,
        0
      ],
      [
        2615,
        0
      ]
    ]
  ],
  [
    2626,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2625,
        0
      ]
    ]
  ],
  [
    2624,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2623,
        0
      ]
    ]
  ],
  [
    2627,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2624,
        0
      ],
      [
        2626,
        0
      ]
    ]
  ],
  [
    2628,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2627,
        0
      ]
    ]
  ],
  [
    2629,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2628,
        0
      ]
    ]
  ],
  [
    2630,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2629,
        0
      ]
    ]
  ],
  [
    2631,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2623,
        0
      ],
      [
        2630,
        0
      ]
    ]
  ],
  [
    2639,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2890,
        0
      ]
    ]
  ],
  [
    2635,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2634,
        0
      ]
    ]
  ],
  [
    2632,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2631,
        0
      ],
      [
        2631,
        0
      ]
    ]
  ],
  [
    2633,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2632,
        0
      ]
    ]
  ],
  [
    2636,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2633,
        0
      ],
      [
        2635,
        0
      ]
    ]
  ],
  [
    2637,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2636,
        0
      ]
    ]
  ],
  [
    2640,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2637,
        0
      ],
      [
        2639,
        0
      ]
    ]
  ],
  [
    2641,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2640,
        0
      ]
    ]
  ],
  [
    2642,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2641,
        0
      ]
    ]
  ],
  [
    2643,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2642,
        0
      ]
    ]
  ],
  [
    2644,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2631,
        0
      ],
      [
        2643,
        0
      ]
    ]
  ],
  [
    2646,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2644,
        0
      ],
      [
        2645,
        0
      ]
    ]
  ],
  [
    2648,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2646,
        0
      ],
      [
        2647,
        0
      ]
    ]
  ],
  [
    2682,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        184,
        0
      ]
    ]
  ],
  [
    2650,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        182,
        0
      ]
    ]
  ],
  [
    2649,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2648,
        0
      ],
      [
        55,
        0
      ]
    ]
  ],
  [
    2651,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2650,
        0
      ],
      [
        2649,
        0
      ]
    ]
  ],
  [
    2670,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2651,
        0
      ]
    ]
  ],
  [
    2671,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2670,
        0
      ]
    ]
  ],
  [
    2672,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2671,
        0
      ]
    ]
  ],
  [
    2666,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2667,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2666,
        0
      ]
    ]
  ],
  [
    2664,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        101,
        0
      ]
    ]
  ],
  [
    2652,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2651,
        0
      ]
    ]
  ],
  [
    2653,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2652,
        0
      ]
    ]
  ],
  [
    2654,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2653,
        0
      ]
    ]
  ],
  [
    2655,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2651,
        0
      ]
    ]
  ],
  [
    2656,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2655,
        0
      ]
    ]
  ],
  [
    2657,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2656,
        0
      ]
    ]
  ],
  [
    2662,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2657,
        0
      ],
      [
        2654,
        0
      ]
    ]
  ],
  [
    2665,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2662,
        0
      ],
      [
        2664,
        0
      ]
    ]
  ],
  [
    2668,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2665,
        0
      ],
      [
        2667,
        0
      ]
    ]
  ],
  [
    2983,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2668,
        0
      ]
    ]
  ],
  [
    2984,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2668,
        0
      ],
      [
        2983,
        0
      ]
    ]
  ],
  [
    2985,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2984,
        0
      ]
    ]
  ],
  [
    2986,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2984,
        0
      ],
      [
        2985,
        0
      ]
    ]
  ],
  [
    2677,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2986,
        0
      ],
      [
        2672,
        0
      ]
    ]
  ],
  [
    2679,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2677,
        0
      ]
    ]
  ],
  [
    2680,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2679,
        0
      ]
    ]
  ],
  [
    2681,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2680,
        0
      ],
      [
        450,
        0
      ]
    ]
  ],
  [
    2683,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2682,
        0
      ],
      [
        2681,
        0
      ]
    ]
  ],
  [
    2684,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2683,
        0
      ],
      [
        2648,
        0
      ]
    ]
  ],
  [
    2687,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2686,
        0
      ]
    ]
  ],
  [
    2685,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2684,
        0
      ]
    ]
  ],
  [
    2688,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2685,
        0
      ],
      [
        2687,
        0
      ]
    ]
  ],
  [
    2689,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2688,
        0
      ]
    ]
  ],
  [
    2690,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2689,
        0
      ]
    ]
  ],
  [
    2691,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2690,
        0
      ]
    ]
  ],
  [
    2692,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2684,
        0
      ],
      [
        2691,
        0
      ]
    ]
  ],
  [
    2700,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2891,
        0
      ]
    ]
  ],
  [
    2696,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2695,
        0
      ]
    ]
  ],
  [
    2693,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2692,
        0
      ],
      [
        2692,
        0
      ]
    ]
  ],
  [
    2694,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2693,
        0
      ]
    ]
  ],
  [
    2697,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2694,
        0
      ],
      [
        2696,
        0
      ]
    ]
  ],
  [
    2698,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2697,
        0
      ]
    ]
  ],
  [
    2701,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2698,
        0
      ],
      [
        2700,
        0
      ]
    ]
  ],
  [
    2702,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2701,
        0
      ]
    ]
  ],
  [
    2703,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2702,
        0
      ]
    ]
  ],
  [
    2704,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2703,
        0
      ]
    ]
  ],
  [
    2705,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2692,
        0
      ],
      [
        2704,
        0
      ]
    ]
  ],
  [
    2707,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2705,
        0
      ],
      [
        2706,
        0
      ]
    ]
  ],
  [
    2709,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2707,
        0
      ],
      [
        2708,
        0
      ]
    ]
  ],
  [
    2715,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        188,
        0
      ]
    ]
  ],
  [
    2711,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        186,
        0
      ]
    ]
  ],
  [
    2710,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2709,
        0
      ],
      [
        1,
        0
      ]
    ]
  ],
  [
    2712,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2711,
        0
      ],
      [
        2710,
        0
      ]
    ]
  ],
  [
    2713,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2712,
        0
      ]
    ]
  ],
  [
    2714,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2713,
        0
      ],
      [
        165,
        0
      ]
    ]
  ],
  [
    2716,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2715,
        0
      ],
      [
        2714,
        0
      ]
    ]
  ],
  [
    2717,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2716,
        0
      ],
      [
        2709,
        0
      ]
    ]
  ],
  [
    2720,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2719,
        0
      ]
    ]
  ],
  [
    2718,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2717,
        0
      ]
    ]
  ],
  [
    2721,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2718,
        0
      ],
      [
        2720,
        0
      ]
    ]
  ],
  [
    2722,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2721,
        0
      ]
    ]
  ],
  [
    2723,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2722,
        0
      ]
    ]
  ],
  [
    2724,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2723,
        0
      ]
    ]
  ],
  [
    2725,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2717,
        0
      ],
      [
        2724,
        0
      ]
    ]
  ],
  [
    2733,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2892,
        0
      ]
    ]
  ],
  [
    2729,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2728,
        0
      ]
    ]
  ],
  [
    2726,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2725,
        0
      ],
      [
        2725,
        0
      ]
    ]
  ],
  [
    2727,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2726,
        0
      ]
    ]
  ],
  [
    2730,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2727,
        0
      ],
      [
        2729,
        0
      ]
    ]
  ],
  [
    2731,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2730,
        0
      ]
    ]
  ],
  [
    2734,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2731,
        0
      ],
      [
        2733,
        0
      ]
    ]
  ],
  [
    2735,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2734,
        0
      ]
    ]
  ],
  [
    2736,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2735,
        0
      ]
    ]
  ],
  [
    2737,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2736,
        0
      ]
    ]
  ],
  [
    2738,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2725,
        0
      ],
      [
        2737,
        0
      ]
    ]
  ],
  [
    2740,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2738,
        0
      ],
      [
        2739,
        0
      ]
    ]
  ],
  [
    2742,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2740,
        0
      ],
      [
        2741,
        0
      ]
    ]
  ],
  [
    2776,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        192,
        0
      ]
    ]
  ],
  [
    2744,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [3072]} })  ",
    "Broadcast",
    [
      [
        190,
        0
      ]
    ]
  ],
  [
    2743,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 3072]} })  ",
    "Dot",
    [
      [
        2742,
        0
      ],
      [
        41,
        0
      ]
    ]
  ],
  [
    2745,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Add",
    [
      [
        2744,
        0
      ],
      [
        2743,
        0
      ]
    ]
  ],
  [
    2764,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 2048] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2745,
        0
      ]
    ]
  ],
  [
    2765,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2764,
        0
      ]
    ]
  ],
  [
    2766,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2765,
        0
      ]
    ]
  ],
  [
    2760,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, 0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1, 1, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        597,
        0
      ]
    ]
  ],
  [
    2761,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N3] where N1 in 16, N2 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2760,
        0
      ]
    ]
  ],
  [
    2758,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 99, N1 in 16, N2 in 66, N3 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        73,
        0
      ]
    ]
  ],
  [
    2746,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 1024] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2745,
        0
      ]
    ]
  ],
  [
    2747,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2746,
        0
      ]
    ]
  ],
  [
    2748,
    " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2747,
        0
      ]
    ]
  ],
  [
    2749,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0 + 0, N1 + 0, N2 + 0] where N0 in 99 , N1 in 66 , N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 3072]} })  ",
    "Slice",
    [
      [
        2745,
        0
      ]
    ]
  ],
  [
    2750,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, ((N2) * 64 + N3)] where N2 in 16, N3 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2749,
        0
      ]
    ]
  ],
  [
    2751,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} })  ",
    "Reshape",
    [
      [
        2750,
        0
      ]
    ]
  ],
  [
    2756,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 64, 66]} })  ",
    "BatchMatMul",
    [
      [
        2751,
        0
      ],
      [
        2748,
        0
      ]
    ]
  ],
  [
    2759,
    " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Divide",
    [
      [
        2756,
        0
      ],
      [
        2758,
        0
      ]
    ]
  ],
  [
    2762,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "Add",
    [
      [
        2759,
        0
      ],
      [
        2761,
        0
      ]
    ]
  ],
  [
    2987,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2762,
        0
      ]
    ]
  ],
  [
    2988,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2762,
        0
      ],
      [
        2987,
        0
      ]
    ]
  ],
  [
    2989,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2988,
        0
      ]
    ]
  ],
  [
    2990,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66]} })  ",
    "SoftmaxBasic",
    [
      [
        2988,
        0
      ],
      [
        2989,
        0
      ]
    ]
  ],
  [
    2771,
    " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "BatchMatMul",
    [
      [
        2990,
        0
      ],
      [
        2766,
        0
      ]
    ]
  ],
  [
    2773,
    " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 16, 66, 64]} })  ",
    "Reshape",
    [
      [
        2771,
        0
      ]
    ]
  ],
  [
    2774,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 16, N2 / 1 % 64] where N2 in 1024;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 16, 64]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2773,
        0
      ]
    ]
  ],
  [
    2775,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2774,
        0
      ],
      [
        506,
        0
      ]
    ]
  ],
  [
    2777,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2776,
        0
      ],
      [
        2775,
        0
      ]
    ]
  ],
  [
    2778,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2777,
        0
      ],
      [
        2742,
        0
      ]
    ]
  ],
  [
    2781,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2780,
        0
      ]
    ]
  ],
  [
    2779,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2778,
        0
      ]
    ]
  ],
  [
    2782,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2779,
        0
      ],
      [
        2781,
        0
      ]
    ]
  ],
  [
    2783,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2782,
        0
      ]
    ]
  ],
  [
    2784,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2783,
        0
      ]
    ]
  ],
  [
    2785,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2784,
        0
      ]
    ]
  ],
  [
    2786,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2778,
        0
      ],
      [
        2785,
        0
      ]
    ]
  ],
  [
    2794,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2893,
        0
      ]
    ]
  ],
  [
    2790,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2789,
        0
      ]
    ]
  ],
  [
    2787,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2786,
        0
      ],
      [
        2786,
        0
      ]
    ]
  ],
  [
    2788,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2787,
        0
      ]
    ]
  ],
  [
    2791,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2788,
        0
      ],
      [
        2790,
        0
      ]
    ]
  ],
  [
    2792,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2791,
        0
      ]
    ]
  ],
  [
    2795,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2792,
        0
      ],
      [
        2794,
        0
      ]
    ]
  ],
  [
    2796,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2795,
        0
      ]
    ]
  ],
  [
    2797,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2796,
        0
      ]
    ]
  ],
  [
    2798,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2797,
        0
      ]
    ]
  ],
  [
    2799,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2786,
        0
      ],
      [
        2798,
        0
      ]
    ]
  ],
  [
    2801,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2799,
        0
      ],
      [
        2800,
        0
      ]
    ]
  ],
  [
    2803,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2801,
        0
      ],
      [
        2802,
        0
      ]
    ]
  ],
  [
    2809,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1024]} })  ",
    "Broadcast",
    [
      [
        196,
        0
      ]
    ]
  ],
  [
    2805,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [4096]} })  ",
    "Broadcast",
    [
      [
        194,
        0
      ]
    ]
  ],
  [
    2804,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 4096]} })  ",
    "Dot",
    [
      [
        2803,
        0
      ],
      [
        193,
        0
      ]
    ]
  ],
  [
    2806,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Add",
    [
      [
        2805,
        0
      ],
      [
        2804,
        0
      ]
    ]
  ],
  [
    2807,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`max`, [const(0).cast(input0[N0, N1, N2].dtype())]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} })  ",
    "Relu",
    [
      [
        2806,
        0
      ]
    ]
  ],
  [
    2808,
    " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 4096]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [4096, 1024]} })  ",
    "Dot",
    [
      [
        2807,
        0
      ],
      [
        51,
        0
      ]
    ]
  ],
  [
    2810,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2809,
        0
      ],
      [
        2808,
        0
      ]
    ]
  ],
  [
    2811,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2810,
        0
      ],
      [
        2803,
        0
      ]
    ]
  ],
  [
    2814,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2813,
        0
      ]
    ]
  ],
  [
    2812,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2811,
        0
      ]
    ]
  ],
  [
    2815,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2812,
        0
      ],
      [
        2814,
        0
      ]
    ]
  ],
  [
    2816,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2815,
        0
      ]
    ]
  ],
  [
    2817,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2816,
        0
      ]
    ]
  ],
  [
    2818,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2817,
        0
      ]
    ]
  ],
  [
    2819,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Subtract",
    [
      [
        2811,
        0
      ],
      [
        2818,
        0
      ]
    ]
  ],
  [
    2827,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2894,
        0
      ]
    ]
  ],
  [
    2823,
    " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 99, N1 in 66; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
    "Broadcast",
    [
      [
        2822,
        0
      ]
    ]
  ],
  [
    2820,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2819,
        0
      ],
      [
        2819,
        0
      ]
    ]
  ],
  [
    2821,
    " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, R2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Sum",
    [
      [
        2820,
        0
      ]
    ]
  ],
  [
    2824,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Divide",
    [
      [
        2821,
        0
      ],
      [
        2823,
        0
      ]
    ]
  ],
  [
    2825,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2824,
        0
      ]
    ]
  ],
  [
    2828,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Add",
    [
      [
        2825,
        0
      ],
      [
        2827,
        0
      ]
    ]
  ],
  [
    2829,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} })  ",
    "Sqrt",
    [
      [
        2828,
        0
      ]
    ]
  ],
  [
    2830,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1]} }) ## @: memcpy ",
    "Reshape",
    [
      [
        2829,
        0
      ]
    ]
  ],
  [
    2831,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1024; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66]} })  ",
    "Broadcast",
    [
      [
        2830,
        0
      ]
    ]
  ],
  [
    2832,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Divide",
    [
      [
        2819,
        0
      ],
      [
        2831,
        0
      ]
    ]
  ],
  [
    2834,
    " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Multiply",
    [
      [
        2832,
        0
      ],
      [
        2833,
        0
      ]
    ]
  ],
  [
    2836,
    " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Add",
    [
      [
        2834,
        0
      ],
      [
        2835,
        0
      ]
    ]
  ],
  [
    2837,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, 0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 66, 1024]} })  ",
    "Slice",
    [
      [
        2836,
        0
      ]
    ]
  ],
  [
    2992,
    " - einstein_v2(\" output0[N, M] +=! input0[N, K] * input1[M, K]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1024, 1024]} })  ",
    "Dot",
    [
      [
        2837,
        0
      ],
      [
        197,
        0
      ]
    ]
  ],
  [
    2840,
    " - einstein_v2(\" output0[N0, N1] = input0[N0, N1] + input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1024]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1024]} })  ",
    "Add",
    [
      [
        2992,
        0
      ],
      [
        2839,
        0
      ]
    ]
  ],
  [
    2841,
    " - einstein_v2(\"output0[N0, N1] = input0[N0, N1].call(`tanh`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [99, 1024]} })  ",
    "Tanh",
    [
      [
        2840,
        0
      ]
    ]
  ],
  [
    2843,
    "",
    "Result",
    [
      [
        2841,
        0
      ]
    ]
  ],
  [
    2842,
    "",
    "Result",
    [
      [
        2836,
        0
      ]
    ]
  ]
]